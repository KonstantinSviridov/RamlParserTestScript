{
  "org_014239c4-ba03-41f8-b0a6-d50957137a6d": {
    "api_56689_ver_58811": {
      "diff": [
        {
          "path": "/errors[6]/code",
          "comment": "Inequal values",
          "master": "UNKNOWN_NODE",
          "inspected": "INVALID_PROPERTY_USAGE"
        },
        {
          "path": "/errors[6]/message",
          "comment": "Inequal values",
          "master": "Unknown node: 'displayName'",
          "inspected": "RAML 0.8 does not allow using 'displayName' property within methods"
        },
        {
          "path": "/errors[7]/code",
          "comment": "Inequal values",
          "master": "UNKNOWN_NODE",
          "inspected": "INVALID_PROPERTY_USAGE"
        },
        {
          "path": "/errors[7]/message",
          "comment": "Inequal values",
          "master": "Unknown node: 'displayName'",
          "inspected": "RAML 0.8 does not allow using 'displayName' property within methods"
        },
        {
          "path": "/errors[8]/code",
          "comment": "Inequal values",
          "master": "UNKNOWN_NODE",
          "inspected": "INVALID_PROPERTY_USAGE"
        },
        {
          "path": "/errors[8]/message",
          "comment": "Inequal values",
          "master": "Unknown node: 'displayName'",
          "inspected": "RAML 0.8 does not allow using 'displayName' property within methods"
        },
        {
          "path": "/errors[9]/code",
          "comment": "Inequal values",
          "master": "UNKNOWN_NODE",
          "inspected": "INVALID_PROPERTY_USAGE"
        },
        {
          "path": "/errors[9]/message",
          "comment": "Inequal values",
          "master": "Unknown node: 'displayName'",
          "inspected": "RAML 0.8 does not allow using 'displayName' property within methods"
        }
      ],
      "oldParserErrors": "none",
      "mastrerParserErrors": [
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Get Fetch Metadata response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 8,
              "column": 2,
              "position": 248
            },
            "end": {
              "line": 8,
              "column": 29,
              "position": 275
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Get Fetch Screen Tags response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 33,
              "column": 2,
              "position": 754
            },
            "end": {
              "line": 33,
              "column": 32,
              "position": 784
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Push Notification request'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 54,
              "column": 2,
              "position": 1186
            },
            "end": {
              "line": 54,
              "column": 36,
              "position": 1220
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Push Notification response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 83,
              "column": 2,
              "position": 1811
            },
            "end": {
              "line": 83,
              "column": 37,
              "position": 1846
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Exclusive Push Notification request'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 101,
              "column": 2,
              "position": 2196
            },
            "end": {
              "line": 101,
              "column": 46,
              "position": 2240
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Exclusive Push Notification response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 131,
              "column": 2,
              "position": 2870
            },
            "end": {
              "line": 131,
              "column": 47,
              "position": 2915
            }
          },
          "isWarning": true
        },
        {
          "code": "UNKNOWN_NODE",
          "message": "Unknown node: 'displayName'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 151,
              "column": 4,
              "position": 3362
            },
            "end": {
              "line": 151,
              "column": 15,
              "position": 3373
            }
          }
        },
        {
          "code": "UNKNOWN_NODE",
          "message": "Unknown node: 'displayName'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 159,
              "column": 6,
              "position": 3658
            },
            "end": {
              "line": 159,
              "column": 17,
              "position": 3669
            }
          }
        },
        {
          "code": "UNKNOWN_NODE",
          "message": "Unknown node: 'displayName'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 172,
              "column": 6,
              "position": 4056
            },
            "end": {
              "line": 172,
              "column": 17,
              "position": 4067
            }
          }
        },
        {
          "code": "UNKNOWN_NODE",
          "message": "Unknown node: 'displayName'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 188,
              "column": 6,
              "position": 4596
            },
            "end": {
              "line": 188,
              "column": 17,
              "position": 4607
            }
          }
        }
      ],
      "inspectedParserErrors": [
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Get Fetch Metadata response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 8,
              "column": 2,
              "position": 248
            },
            "end": {
              "line": 8,
              "column": 29,
              "position": 275
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Get Fetch Screen Tags response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 33,
              "column": 2,
              "position": 754
            },
            "end": {
              "line": 33,
              "column": 32,
              "position": 784
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Push Notification request'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 54,
              "column": 2,
              "position": 1186
            },
            "end": {
              "line": 54,
              "column": 36,
              "position": 1220
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Push Notification response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 83,
              "column": 2,
              "position": 1811
            },
            "end": {
              "line": 83,
              "column": 37,
              "position": 1846
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Exclusive Push Notification request'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 101,
              "column": 2,
              "position": 2196
            },
            "end": {
              "line": 101,
              "column": 46,
              "position": 2240
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Exclusive Push Notification response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 131,
              "column": 2,
              "position": 2870
            },
            "end": {
              "line": 131,
              "column": 47,
              "position": 2915
            }
          },
          "isWarning": true
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 151,
              "column": 4,
              "position": 3362
            },
            "end": {
              "line": 151,
              "column": 15,
              "position": 3373
            }
          }
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 159,
              "column": 6,
              "position": 3658
            },
            "end": {
              "line": 159,
              "column": 17,
              "position": 3669
            }
          }
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 172,
              "column": 6,
              "position": 4056
            },
            "end": {
              "line": 172,
              "column": 17,
              "position": 4067
            }
          }
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 188,
              "column": 6,
              "position": 4596
            },
            "end": {
              "line": 188,
              "column": 17,
              "position": 4607
            }
          }
        }
      ]
    }
  },
  "org_01615942-1df5-4f4b-9729-292f73bf112a": {
    "api_47682_ver_49451": {
      "diff": [
        {
          "path": "/specification/resources[0]/methods[1]/responses/201/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "repeat": false,
              "description": "Location of the newly created team",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Location": {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "repeat": false,
              "description": "Location of the newly created team",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "org_0175dd81-5fe1-462c-9df8-aa0e389689ca": {
    "api_43943_ver_45555": {
      "diff": [
        {
          "path": "/errors[1]/code",
          "comment": "Inequal values",
          "master": "UNKNOWN_NODE",
          "inspected": "INVALID_PROPERTY_USAGE"
        },
        {
          "path": "/errors[1]/message",
          "comment": "Inequal values",
          "master": "Unknown node: 'displayName'",
          "inspected": "RAML 0.8 does not allow using 'displayName' property within methods"
        }
      ],
      "oldParserErrors": "none",
      "mastrerParserErrors": [
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected token '}'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 30,
              "column": 22,
              "position": 983
            },
            "end": {
              "line": 30,
              "column": 23,
              "position": 984
            }
          },
          "isWarning": true
        },
        {
          "code": "UNKNOWN_NODE",
          "message": "Unknown node: 'displayName'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 38,
              "column": 6,
              "position": 1190
            },
            "end": {
              "line": 38,
              "column": 17,
              "position": 1201
            }
          }
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected token '}'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 55,
              "column": 22,
              "position": 1814
            },
            "end": {
              "line": 55,
              "column": 23,
              "position": 1815
            }
          },
          "isWarning": true
        }
      ],
      "inspectedParserErrors": [
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected token '}'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 30,
              "column": 22,
              "position": 983
            },
            "end": {
              "line": 30,
              "column": 23,
              "position": 984
            }
          },
          "isWarning": true
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 38,
              "column": 6,
              "position": 1190
            },
            "end": {
              "line": 38,
              "column": 17,
              "position": 1201
            }
          }
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected token '}'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 55,
              "column": 22,
              "position": 1814
            },
            "end": {
              "line": 55,
              "column": 23,
              "position": 1815
            }
          },
          "isWarning": true
        }
      ]
    }
  },
  "org_0308b341-b212-4567-82ea-caa06df67d72": {
    "api_16066_ver_17121": {
      "diff": [
        {
          "path": "/errors[0]/code",
          "comment": "Inequal values",
          "master": "INVALID_JSON_SCHEMA_DETAILS",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[0]/message",
          "comment": "Inequal values",
          "master": "Invalid JSON schema: Keyword 'description' is expected to be of type 'string'",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[0]/path",
          "comment": "Inequal values",
          "master": "common/status/schema.json",
          "inspected": "/home/travis/build/KonstantinSviridov/PlatformSnapshot/platform/org_0308b341-b212-4567-82ea-caa06df67d72/api_16066_ver_17121/config/schema/current-schema.json"
        },
        {
          "path": "/errors[0]/range/start/line",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 12
        },
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 4
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 640,
          "inspected": 610
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 22,
          "inspected": 12
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 792,
          "inspected": 623
        },
        {
          "path": "/errors[0]/trace[0]/code",
          "comment": "Inequal values",
          "master": "INVALID_JSON_SCHEMA_DETAILS",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[0]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Invalid JSON schema: Keyword 'description' is expected to be of type 'string'",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[0]/trace[0]/path",
          "comment": "Inequal values",
          "master": "meta/schemas-base.raml",
          "inspected": "api.raml"
        },
        {
          "path": "/errors[0]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 2,
          "inspected": 16
        },
        {
          "path": "/errors[0]/trace[0]/range/start/column",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 0
        },
        {
          "path": "/errors[0]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 461
        },
        {
          "path": "/errors[0]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 2,
          "inspected": 16
        },
        {
          "path": "/errors[0]/trace[0]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 7
        },
        {
          "path": "/errors[0]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 29,
          "inspected": 468
        },
        {
          "path": "/errors[0]/trace[0]/trace",
          "comment": "Defined/undefined mismatch",
          "master": [
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'description' is expected to be of type 'string'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 16,
                  "column": 0,
                  "position": 461
                },
                "end": {
                  "line": 16,
                  "column": 7,
                  "position": 468
                }
              },
              "isWarning": true
            }
          ]
        },
        {
          "path": "/errors[1]/code",
          "comment": "Inequal values",
          "master": "INVALID_JSON_SCHEMA_DETAILS",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[1]/message",
          "comment": "Inequal values",
          "master": "Invalid JSON schema: Keyword 'description' is expected to be of type 'string'",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[1]/path",
          "comment": "Inequal values",
          "master": "common/status/schema.json",
          "inspected": "/home/travis/build/KonstantinSviridov/PlatformSnapshot/platform/org_0308b341-b212-4567-82ea-caa06df67d72/api_16066_ver_17121/events/schema/common-schema.json"
        },
        {
          "path": "/errors[1]/range/start/line",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 7
        },
        {
          "path": "/errors[1]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 4
        },
        {
          "path": "/errors[1]/range/start/position",
          "comment": "Inequal values",
          "master": 640,
          "inspected": 307
        },
        {
          "path": "/errors[1]/range/end/line",
          "comment": "Inequal values",
          "master": 22,
          "inspected": 7
        },
        {
          "path": "/errors[1]/range/end/position",
          "comment": "Inequal values",
          "master": 792,
          "inspected": 320
        },
        {
          "path": "/errors[1]/trace",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Invalid JSON schema: Keyword 'description' is expected to be of type 'string'",
              "path": "hosts/hosts.raml",
              "range": {
                "start": {
                  "line": 10,
                  "column": 6,
                  "position": 254
                },
                "end": {
                  "line": 10,
                  "column": 31,
                  "position": 279
                }
              },
              "trace": [
                {
                  "code": "ERROR_IN_INCLUDED_FILE",
                  "message": "Error in the included file: Invalid JSON schema: Invalid JSON schema: Keyword 'description' is expected to be of type 'string'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 22,
                      "column": 0,
                      "position": 618
                    },
                    "end": {
                      "line": 22,
                      "column": 6,
                      "position": 624
                    }
                  }
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'description' is expected to be of type 'string'",
              "path": "meta/schemas-base.raml",
              "range": {
                "start": {
                  "line": 2,
                  "column": 4,
                  "position": 16
                },
                "end": {
                  "line": 2,
                  "column": 17,
                  "position": 29
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'description' is expected to be of type 'string'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 16,
                      "column": 0,
                      "position": 461
                    },
                    "end": {
                      "line": 16,
                      "column": 7,
                      "position": 468
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 16,
                  "column": 0,
                  "position": 461
                },
                "end": {
                  "line": 16,
                  "column": 7,
                  "position": 468
                }
              },
              "isWarning": true
            }
          ]
        },
        {
          "path": "/errors[2]/code",
          "comment": "Inequal values",
          "master": "UNRECOGNIZED_ELEMENT",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[2]/message",
          "comment": "Inequal values",
          "master": "Unrecognized schema: 'email-schema'.",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[2]/path",
          "comment": "Inequal values",
          "master": "config/email/email.raml",
          "inspected": "/home/travis/build/KonstantinSviridov/PlatformSnapshot/platform/org_0308b341-b212-4567-82ea-caa06df67d72/api_16066_ver_17121/events/schema/common-schema.json"
        },
        {
          "path": "/errors[2]/range/start/line",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 8
        },
        {
          "path": "/errors[2]/range/start/position",
          "comment": "Inequal values",
          "master": 224,
          "inspected": 364
        },
        {
          "path": "/errors[2]/range/end/line",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 8
        },
        {
          "path": "/errors[2]/range/end/column",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 25
        },
        {
          "path": "/errors[2]/range/end/position",
          "comment": "Inequal values",
          "master": 227,
          "inspected": 385
        },
        {
          "path": "/errors[2]/trace[0]/code",
          "comment": "Inequal values",
          "master": "ERROR_IN_INCLUDED_FILE",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[2]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Error in the included file: Unrecognized schema: 'email-schema'.",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[2]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[2]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 581,
          "inspected": 461
        },
        {
          "path": "/errors[2]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[2]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 588,
          "inspected": 468
        },
        {
          "path": "/errors[3]/code",
          "comment": "Inequal values",
          "master": "UNRECOGNIZED_ELEMENT",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[3]/message",
          "comment": "Inequal values",
          "master": "Unrecognized schema: 'update-email-schema'.",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[3]/path",
          "comment": "Inequal values",
          "master": "config/email/email.raml",
          "inspected": "/home/travis/build/KonstantinSviridov/PlatformSnapshot/platform/org_0308b341-b212-4567-82ea-caa06df67d72/api_16066_ver_17121/hosts/schema/server-schema.json"
        },
        {
          "path": "/errors[3]/range/start/line",
          "comment": "Inequal values",
          "master": 8,
          "inspected": 10
        },
        {
          "path": "/errors[3]/range/start/position",
          "comment": "Inequal values",
          "master": 252,
          "inspected": 491
        },
        {
          "path": "/errors[3]/range/end/line",
          "comment": "Inequal values",
          "master": 8,
          "inspected": 10
        },
        {
          "path": "/errors[3]/range/end/column",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 16
        },
        {
          "path": "/errors[3]/range/end/position",
          "comment": "Inequal values",
          "master": 255,
          "inspected": 503
        },
        {
          "path": "/errors[3]/trace",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "ERROR_IN_INCLUDED_FILE",
              "message": "Error in the included file: Unrecognized schema: 'update-email-schema'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 21,
                  "column": 0,
                  "position": 581
                },
                "end": {
                  "line": 21,
                  "column": 7,
                  "position": 588
                }
              },
              "isWarning": true
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 16,
                  "column": 0,
                  "position": 461
                },
                "end": {
                  "line": 16,
                  "column": 7,
                  "position": 468
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
              "path": "hosts/hosts.raml",
              "range": {
                "start": {
                  "line": 8,
                  "column": 6,
                  "position": 175
                },
                "end": {
                  "line": 8,
                  "column": 22,
                  "position": 191
                }
              },
              "trace": [
                {
                  "code": "ERROR_IN_INCLUDED_FILE",
                  "message": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 22,
                      "column": 0,
                      "position": 618
                    },
                    "end": {
                      "line": 22,
                      "column": 6,
                      "position": 624
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "path": "/errors[4]/code",
          "comment": "Inequal values",
          "master": "UNRESOLVED_REFERENCE",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[4]/message",
          "comment": "Inequal values",
          "master": "Reference: 'customviewbody-schema' can not be resolved",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[4]/path",
          "comment": "Inequal values",
          "master": "config/metrics/metric-id/metric-id.raml",
          "inspected": "/home/travis/build/KonstantinSviridov/PlatformSnapshot/platform/org_0308b341-b212-4567-82ea-caa06df67d72/api_16066_ver_17121/hosts/schema/server-schema.json"
        },
        {
          "path": "/errors[4]/range/start/line",
          "comment": "Inequal values",
          "master": 6,
          "inspected": 10
        },
        {
          "path": "/errors[4]/range/start/column",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 4
        },
        {
          "path": "/errors[4]/range/start/position",
          "comment": "Inequal values",
          "master": 147,
          "inspected": 491
        },
        {
          "path": "/errors[4]/range/end/line",
          "comment": "Inequal values",
          "master": 6,
          "inspected": 10
        },
        {
          "path": "/errors[4]/range/end/column",
          "comment": "Inequal values",
          "master": 32,
          "inspected": 16
        },
        {
          "path": "/errors[4]/range/end/position",
          "comment": "Inequal values",
          "master": 169,
          "inspected": 503
        },
        {
          "path": "/errors[4]/trace[0]/code",
          "comment": "Inequal values",
          "master": "ERROR_IN_INCLUDED_FILE",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[4]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Error in the included file: Reference: 'customviewbody-schema' can not be resolved",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[4]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[4]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 581,
          "inspected": 461
        },
        {
          "path": "/errors[4]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[4]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 588,
          "inspected": 468
        },
        {
          "path": "/errors[5]/code",
          "comment": "Inequal values",
          "master": "UNRESOLVED_REFERENCE",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[5]/message",
          "comment": "Inequal values",
          "master": "Reference: 'customview-schema' can not be resolved",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[5]/path",
          "comment": "Inequal values",
          "master": "config/metrics/metric-id/metric-id.raml",
          "inspected": "/home/travis/build/KonstantinSviridov/PlatformSnapshot/platform/org_0308b341-b212-4567-82ea-caa06df67d72/api_16066_ver_17121/hosts/schema/server-schema.json"
        },
        {
          "path": "/errors[5]/range/start/line",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 10
        },
        {
          "path": "/errors[5]/range/start/column",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 4
        },
        {
          "path": "/errors[5]/range/start/position",
          "comment": "Inequal values",
          "master": 204,
          "inspected": 491
        },
        {
          "path": "/errors[5]/range/end/line",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 10
        },
        {
          "path": "/errors[5]/range/end/column",
          "comment": "Inequal values",
          "master": 27,
          "inspected": 16
        },
        {
          "path": "/errors[5]/range/end/position",
          "comment": "Inequal values",
          "master": 221,
          "inspected": 503
        },
        {
          "path": "/errors[5]/trace",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "ERROR_IN_INCLUDED_FILE",
              "message": "Error in the included file: Reference: 'customview-schema' can not be resolved",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 21,
                  "column": 0,
                  "position": 581
                },
                "end": {
                  "line": 21,
                  "column": 7,
                  "position": 588
                }
              },
              "isWarning": true
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 16,
                  "column": 0,
                  "position": 461
                },
                "end": {
                  "line": 16,
                  "column": 7,
                  "position": 468
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
              "path": "hosts/hosts.raml",
              "range": {
                "start": {
                  "line": 9,
                  "column": 6,
                  "position": 212
                },
                "end": {
                  "line": 9,
                  "column": 27,
                  "position": 233
                }
              },
              "trace": [
                {
                  "code": "ERROR_IN_INCLUDED_FILE",
                  "message": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 22,
                      "column": 0,
                      "position": 618
                    },
                    "end": {
                      "line": 22,
                      "column": 6,
                      "position": 624
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "path": "/errors[6]/code",
          "comment": "Inequal values",
          "master": "UNRECOGNIZED_ELEMENT",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[6]/message",
          "comment": "Inequal values",
          "master": "Unrecognized schema: 'customviewbody-schema'.",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[6]/path",
          "comment": "Inequal values",
          "master": "config/metrics/metric-id/metric-id.raml",
          "inspected": "/home/travis/build/KonstantinSviridov/PlatformSnapshot/platform/org_0308b341-b212-4567-82ea-caa06df67d72/api_16066_ver_17121/hosts/schema/status-schema.json"
        },
        {
          "path": "/errors[6]/range/start/column",
          "comment": "Inequal values",
          "master": 6,
          "inspected": 4
        },
        {
          "path": "/errors[6]/range/start/position",
          "comment": "Inequal values",
          "master": 287,
          "inspected": 546
        },
        {
          "path": "/errors[6]/range/end/column",
          "comment": "Inequal values",
          "master": 9,
          "inspected": 24
        },
        {
          "path": "/errors[6]/range/end/position",
          "comment": "Inequal values",
          "master": 290,
          "inspected": 566
        },
        {
          "path": "/errors[6]/trace",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "ERROR_IN_INCLUDED_FILE",
              "message": "Error in the included file: Unrecognized schema: 'customviewbody-schema'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 21,
                  "column": 0,
                  "position": 581
                },
                "end": {
                  "line": 21,
                  "column": 7,
                  "position": 588
                }
              },
              "isWarning": true
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 16,
                  "column": 0,
                  "position": 461
                },
                "end": {
                  "line": 16,
                  "column": 7,
                  "position": 468
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
              "path": "hosts/hosts.raml",
              "range": {
                "start": {
                  "line": 11,
                  "column": 6,
                  "position": 301
                },
                "end": {
                  "line": 11,
                  "column": 30,
                  "position": 325
                }
              },
              "trace": [
                {
                  "code": "ERROR_IN_INCLUDED_FILE",
                  "message": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 22,
                      "column": 0,
                      "position": 618
                    },
                    "end": {
                      "line": 22,
                      "column": 6,
                      "position": 624
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "path": "/errors[7]/code",
          "comment": "Inequal values",
          "master": "UNRECOGNIZED_ELEMENT",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[7]/message",
          "comment": "Inequal values",
          "master": "Unrecognized schema: 'customview-schema'.",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[7]/path",
          "comment": "Inequal values",
          "master": "config/metrics/metric-id/metric-id.raml",
          "inspected": "/home/travis/build/KonstantinSviridov/PlatformSnapshot/platform/org_0308b341-b212-4567-82ea-caa06df67d72/api_16066_ver_17121/hosts/schema/status-schema.json"
        },
        {
          "path": "/errors[7]/range/start/column",
          "comment": "Inequal values",
          "master": 6,
          "inspected": 4
        },
        {
          "path": "/errors[7]/range/start/position",
          "comment": "Inequal values",
          "master": 287,
          "inspected": 546
        },
        {
          "path": "/errors[7]/range/end/column",
          "comment": "Inequal values",
          "master": 9,
          "inspected": 24
        },
        {
          "path": "/errors[7]/range/end/position",
          "comment": "Inequal values",
          "master": 290,
          "inspected": 566
        },
        {
          "path": "/errors[7]/trace[0]/code",
          "comment": "Inequal values",
          "master": "ERROR_IN_INCLUDED_FILE",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[7]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Error in the included file: Unrecognized schema: 'customview-schema'.",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[7]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[7]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 581,
          "inspected": 461
        },
        {
          "path": "/errors[7]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[7]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 588,
          "inspected": 468
        },
        {
          "path": "/errors[8]/code",
          "comment": "Inequal values",
          "master": "UNRECOGNIZED_ELEMENT",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[8]/message",
          "comment": "Inequal values",
          "master": "Unrecognized schema: 'customviewbody-schema'.",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[8]/path",
          "comment": "Inequal values",
          "master": "config/metrics/metric-id/metric-id.raml",
          "inspected": "/home/travis/build/KonstantinSviridov/PlatformSnapshot/platform/org_0308b341-b212-4567-82ea-caa06df67d72/api_16066_ver_17121/root/schema/self.json"
        },
        {
          "path": "/errors[8]/range/start/line",
          "comment": "Inequal values",
          "master": 12,
          "inspected": 3
        },
        {
          "path": "/errors[8]/range/start/column",
          "comment": "Inequal values",
          "master": 6,
          "inspected": 4
        },
        {
          "path": "/errors[8]/range/start/position",
          "comment": "Inequal values",
          "master": 316,
          "inspected": 73
        },
        {
          "path": "/errors[8]/range/end/line",
          "comment": "Inequal values",
          "master": 12,
          "inspected": 3
        },
        {
          "path": "/errors[8]/range/end/column",
          "comment": "Inequal values",
          "master": 12,
          "inspected": 15
        },
        {
          "path": "/errors[8]/range/end/position",
          "comment": "Inequal values",
          "master": 322,
          "inspected": 84
        },
        {
          "path": "/errors[8]/trace[0]/code",
          "comment": "Inequal values",
          "master": "ERROR_IN_INCLUDED_FILE",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[8]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Error in the included file: Unrecognized schema: 'customviewbody-schema'.",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[8]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[8]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 581,
          "inspected": 461
        },
        {
          "path": "/errors[8]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[8]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 588,
          "inspected": 468
        },
        {
          "path": "/errors[9]/code",
          "comment": "Inequal values",
          "master": "UNRESOLVED_REFERENCE",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[9]/message",
          "comment": "Inequal values",
          "master": "Reference: 'metricsviewbody-schema' can not be resolved",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[9]/path",
          "comment": "Inequal values",
          "master": "config/metrics/metrics.raml",
          "inspected": "/home/travis/build/KonstantinSviridov/PlatformSnapshot/platform/org_0308b341-b212-4567-82ea-caa06df67d72/api_16066_ver_17121/session/schema/common-schema.json"
        },
        {
          "path": "/errors[9]/range/start/line",
          "comment": "Inequal values",
          "master": 6,
          "inspected": 5
        },
        {
          "path": "/errors[9]/range/start/column",
          "comment": "Inequal values",
          "master": 8,
          "inspected": 4
        },
        {
          "path": "/errors[9]/range/start/position",
          "comment": "Inequal values",
          "master": 126,
          "inspected": 186
        },
        {
          "path": "/errors[9]/range/end/line",
          "comment": "Inequal values",
          "master": 6,
          "inspected": 5
        },
        {
          "path": "/errors[9]/range/end/column",
          "comment": "Inequal values",
          "master": 30,
          "inspected": 21
        },
        {
          "path": "/errors[9]/range/end/position",
          "comment": "Inequal values",
          "master": 148,
          "inspected": 203
        },
        {
          "path": "/errors[9]/trace",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "ERROR_IN_INCLUDED_FILE",
              "message": "Error in the included file: Reference: 'metricsviewbody-schema' can not be resolved",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 21,
                  "column": 0,
                  "position": 581
                },
                "end": {
                  "line": 21,
                  "column": 7,
                  "position": 588
                }
              },
              "isWarning": true
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 16,
                  "column": 0,
                  "position": 461
                },
                "end": {
                  "line": 16,
                  "column": 7,
                  "position": 468
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
              "path": "session/session.raml",
              "range": {
                "start": {
                  "line": 8,
                  "column": 6,
                  "position": 210
                },
                "end": {
                  "line": 8,
                  "column": 32,
                  "position": 236
                }
              },
              "trace": [
                {
                  "code": "ERROR_IN_INCLUDED_FILE",
                  "message": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 20,
                      "column": 0,
                      "position": 541
                    },
                    "end": {
                      "line": 20,
                      "column": 8,
                      "position": 549
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "path": "/errors[10]/code",
          "comment": "Inequal values",
          "master": "UNRESOLVED_REFERENCE",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[10]/message",
          "comment": "Inequal values",
          "master": "Reference: 'metricsview-schema' can not be resolved",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[10]/path",
          "comment": "Inequal values",
          "master": "config/metrics/metrics.raml",
          "inspected": "/home/travis/build/KonstantinSviridov/PlatformSnapshot/platform/org_0308b341-b212-4567-82ea-caa06df67d72/api_16066_ver_17121/session/schema/common-schema.json"
        },
        {
          "path": "/errors[10]/range/start/line",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 5
        },
        {
          "path": "/errors[10]/range/start/column",
          "comment": "Inequal values",
          "master": 8,
          "inspected": 4
        },
        {
          "path": "/errors[10]/range/start/position",
          "comment": "Inequal values",
          "master": 182,
          "inspected": 186
        },
        {
          "path": "/errors[10]/range/end/line",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 5
        },
        {
          "path": "/errors[10]/range/end/column",
          "comment": "Inequal values",
          "master": 26,
          "inspected": 21
        },
        {
          "path": "/errors[10]/range/end/position",
          "comment": "Inequal values",
          "master": 200,
          "inspected": 203
        },
        {
          "path": "/errors[10]/trace[0]/code",
          "comment": "Inequal values",
          "master": "ERROR_IN_INCLUDED_FILE",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[10]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Error in the included file: Reference: 'metricsview-schema' can not be resolved",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[10]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[10]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 581,
          "inspected": 461
        },
        {
          "path": "/errors[10]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[10]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 588,
          "inspected": 468
        },
        {
          "path": "/errors[11]/code",
          "comment": "Inequal values",
          "master": "UNRESOLVED_REFERENCE",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[11]/message",
          "comment": "Inequal values",
          "master": "Reference: 'post-metricview-schema' can not be resolved",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[11]/path",
          "comment": "Inequal values",
          "master": "config/metrics/metrics.raml",
          "inspected": "/home/travis/build/KonstantinSviridov/PlatformSnapshot/platform/org_0308b341-b212-4567-82ea-caa06df67d72/api_16066_ver_17121/session/schema/common-schema.json"
        },
        {
          "path": "/errors[11]/range/start/line",
          "comment": "Inequal values",
          "master": 8,
          "inspected": 6
        },
        {
          "path": "/errors[11]/range/start/column",
          "comment": "Inequal values",
          "master": 8,
          "inspected": 4
        },
        {
          "path": "/errors[11]/range/start/position",
          "comment": "Inequal values",
          "master": 230,
          "inspected": 249
        },
        {
          "path": "/errors[11]/range/end/line",
          "comment": "Inequal values",
          "master": 8,
          "inspected": 6
        },
        {
          "path": "/errors[11]/range/end/column",
          "comment": "Inequal values",
          "master": 32,
          "inspected": 16
        },
        {
          "path": "/errors[11]/range/end/position",
          "comment": "Inequal values",
          "master": 254,
          "inspected": 261
        },
        {
          "path": "/errors[11]/trace",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "ERROR_IN_INCLUDED_FILE",
              "message": "Error in the included file: Reference: 'post-metricview-schema' can not be resolved",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 21,
                  "column": 0,
                  "position": 581
                },
                "end": {
                  "line": 21,
                  "column": 7,
                  "position": 588
                }
              },
              "isWarning": true
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 16,
                  "column": 0,
                  "position": 461
                },
                "end": {
                  "line": 16,
                  "column": 7,
                  "position": 468
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
              "path": "session/session.raml",
              "range": {
                "start": {
                  "line": 9,
                  "column": 6,
                  "position": 262
                },
                "end": {
                  "line": 9,
                  "column": 27,
                  "position": 283
                }
              },
              "trace": [
                {
                  "code": "ERROR_IN_INCLUDED_FILE",
                  "message": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 20,
                      "column": 0,
                      "position": 541
                    },
                    "end": {
                      "line": 20,
                      "column": 8,
                      "position": 549
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "path": "/errors[12]/code",
          "comment": "Inequal values",
          "master": "UNRECOGNIZED_ELEMENT",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[12]/message",
          "comment": "Inequal values",
          "master": "Unrecognized schema: 'metricsviewbody-schema'.",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[12]/path",
          "comment": "Inequal values",
          "master": "config/metrics/metrics.raml",
          "inspected": "/home/travis/build/KonstantinSviridov/PlatformSnapshot/platform/org_0308b341-b212-4567-82ea-caa06df67d72/api_16066_ver_17121/session/schema/common-schema.json"
        },
        {
          "path": "/errors[12]/range/start/line",
          "comment": "Inequal values",
          "master": 12,
          "inspected": 6
        },
        {
          "path": "/errors[12]/range/start/position",
          "comment": "Inequal values",
          "master": 317,
          "inspected": 249
        },
        {
          "path": "/errors[12]/range/end/line",
          "comment": "Inequal values",
          "master": 12,
          "inspected": 6
        },
        {
          "path": "/errors[12]/range/end/column",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 16
        },
        {
          "path": "/errors[12]/range/end/position",
          "comment": "Inequal values",
          "master": 320,
          "inspected": 261
        },
        {
          "path": "/errors[12]/trace[0]/code",
          "comment": "Inequal values",
          "master": "ERROR_IN_INCLUDED_FILE",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[12]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Error in the included file: Unrecognized schema: 'metricsviewbody-schema'.",
          "inspected": "Can not parse JSON example: Unexpected end of JSON input"
        },
        {
          "path": "/errors[12]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[12]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 581,
          "inspected": 461
        },
        {
          "path": "/errors[12]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[12]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 588,
          "inspected": 468
        },
        {
          "path": "/errors[13]/code",
          "comment": "Inequal values",
          "master": "UNRECOGNIZED_ELEMENT",
          "inspected": "INVALID_JSON_SCHEMA_DETAILS"
        },
        {
          "path": "/errors[13]/message",
          "comment": "Inequal values",
          "master": "Unrecognized schema: 'metricsview-schema'.",
          "inspected": "Invalid JSON schema: Keyword 'description' is expected to be of type 'string'"
        },
        {
          "path": "/errors[13]/path",
          "comment": "Inequal values",
          "master": "config/metrics/metrics.raml",
          "inspected": "common/status/schema.json"
        },
        {
          "path": "/errors[13]/range/start/line",
          "comment": "Inequal values",
          "master": 12,
          "inspected": 19
        },
        {
          "path": "/errors[13]/range/start/column",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 16
        },
        {
          "path": "/errors[13]/range/start/position",
          "comment": "Inequal values",
          "master": 317,
          "inspected": 640
        },
        {
          "path": "/errors[13]/range/end/line",
          "comment": "Inequal values",
          "master": 12,
          "inspected": 22
        },
        {
          "path": "/errors[13]/range/end/column",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 17
        },
        {
          "path": "/errors[13]/range/end/position",
          "comment": "Inequal values",
          "master": 320,
          "inspected": 792
        },
        {
          "path": "/errors[13]/trace",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "ERROR_IN_INCLUDED_FILE",
              "message": "Error in the included file: Unrecognized schema: 'metricsview-schema'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 21,
                  "column": 0,
                  "position": 581
                },
                "end": {
                  "line": 21,
                  "column": 7,
                  "position": 588
                }
              },
              "isWarning": true
            }
          ],
          "inspected": [
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Invalid JSON schema: Keyword 'description' is expected to be of type 'string'",
              "path": "hosts/hosts.raml",
              "range": {
                "start": {
                  "line": 10,
                  "column": 6,
                  "position": 254
                },
                "end": {
                  "line": 10,
                  "column": 31,
                  "position": 279
                }
              },
              "trace": [
                {
                  "code": "ERROR_IN_INCLUDED_FILE",
                  "message": "Error in the included file: Invalid JSON schema: Invalid JSON schema: Keyword 'description' is expected to be of type 'string'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 22,
                      "column": 0,
                      "position": 618
                    },
                    "end": {
                      "line": 22,
                      "column": 6,
                      "position": 624
                    }
                  }
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'description' is expected to be of type 'string'",
              "path": "meta/schemas-base.raml",
              "range": {
                "start": {
                  "line": 2,
                  "column": 4,
                  "position": 16
                },
                "end": {
                  "line": 2,
                  "column": 17,
                  "position": 29
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'description' is expected to be of type 'string'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 16,
                      "column": 0,
                      "position": 461
                    },
                    "end": {
                      "line": 16,
                      "column": 7,
                      "position": 468
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ]
        },
        {
          "path": "/errors[14]/code",
          "comment": "Inequal values",
          "master": "UNRECOGNIZED_ELEMENT",
          "inspected": "INVALID_JSON_SCHEMA_DETAILS"
        },
        {
          "path": "/errors[14]/message",
          "comment": "Inequal values",
          "master": "Unrecognized schema: 'post-metricview-schema'.",
          "inspected": "Invalid JSON schema: Keyword 'description' is expected to be of type 'string'"
        },
        {
          "path": "/errors[14]/path",
          "comment": "Inequal values",
          "master": "config/metrics/metrics.raml",
          "inspected": "common/status/schema.json"
        },
        {
          "path": "/errors[14]/range/start/line",
          "comment": "Inequal values",
          "master": 13,
          "inspected": 19
        },
        {
          "path": "/errors[14]/range/start/column",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 16
        },
        {
          "path": "/errors[14]/range/start/position",
          "comment": "Inequal values",
          "master": 344,
          "inspected": 640
        },
        {
          "path": "/errors[14]/range/end/line",
          "comment": "Inequal values",
          "master": 13,
          "inspected": 22
        },
        {
          "path": "/errors[14]/range/end/column",
          "comment": "Inequal values",
          "master": 8,
          "inspected": 17
        },
        {
          "path": "/errors[14]/range/end/position",
          "comment": "Inequal values",
          "master": 348,
          "inspected": 792
        },
        {
          "path": "/errors[14]/trace[0]/code",
          "comment": "Inequal values",
          "master": "ERROR_IN_INCLUDED_FILE",
          "inspected": "INVALID_JSON_SCHEMA_DETAILS"
        },
        {
          "path": "/errors[14]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Error in the included file: Unrecognized schema: 'post-metricview-schema'.",
          "inspected": "Invalid JSON schema: Keyword 'description' is expected to be of type 'string'"
        },
        {
          "path": "/errors[14]/trace[0]/path",
          "comment": "Inequal values",
          "master": "api.raml",
          "inspected": "meta/schemas-base.raml"
        },
        {
          "path": "/errors[14]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 2
        },
        {
          "path": "/errors[14]/trace[0]/range/start/column",
          "comment": "Inequal values",
          "master": 0,
          "inspected": 4
        },
        {
          "path": "/errors[14]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 581,
          "inspected": 16
        },
        {
          "path": "/errors[14]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 2
        },
        {
          "path": "/errors[14]/trace[0]/range/end/column",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 17
        },
        {
          "path": "/errors[14]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 588,
          "inspected": 29
        },
        {
          "path": "/errors[14]/trace[0]/trace",
          "comment": "Defined/undefined mismatch",
          "inspected": [
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'description' is expected to be of type 'string'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 16,
                  "column": 0,
                  "position": 461
                },
                "end": {
                  "line": 16,
                  "column": 7,
                  "position": 468
                }
              },
              "isWarning": true
            }
          ]
        },
        {
          "path": "/errors[15]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "UNRECOGNIZED_ELEMENT"
        },
        {
          "path": "/errors[15]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Unrecognized schema: 'email-schema'."
        },
        {
          "path": "/errors[15]/path",
          "comment": "Inequal values",
          "master": "http://localhost:2342/kirk/api-schemas/1.0/common-schema.json",
          "inspected": "config/email/email.raml"
        },
        {
          "path": "/errors[15]/range/start/line",
          "comment": "Inequal values",
          "master": 5,
          "inspected": 7
        },
        {
          "path": "/errors[15]/range/start/position",
          "comment": "Inequal values",
          "master": 186,
          "inspected": 224
        },
        {
          "path": "/errors[15]/range/end/line",
          "comment": "Inequal values",
          "master": 5,
          "inspected": 7
        },
        {
          "path": "/errors[15]/range/end/column",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 7
        },
        {
          "path": "/errors[15]/range/end/position",
          "comment": "Inequal values",
          "master": 203,
          "inspected": 227
        },
        {
          "path": "/errors[15]/trace",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 16,
                  "column": 0,
                  "position": 461
                },
                "end": {
                  "line": 16,
                  "column": 7,
                  "position": 468
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
              "path": "session/session.raml",
              "range": {
                "start": {
                  "line": 8,
                  "column": 6,
                  "position": 210
                },
                "end": {
                  "line": 8,
                  "column": 32,
                  "position": 236
                }
              },
              "trace": [
                {
                  "code": "ERROR_IN_INCLUDED_FILE",
                  "message": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 20,
                      "column": 0,
                      "position": 541
                    },
                    "end": {
                      "line": 20,
                      "column": 8,
                      "position": 549
                    }
                  }
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "ERROR_IN_INCLUDED_FILE",
              "message": "Error in the included file: Unrecognized schema: 'email-schema'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 21,
                  "column": 0,
                  "position": 581
                },
                "end": {
                  "line": 21,
                  "column": 7,
                  "position": 588
                }
              },
              "isWarning": true
            }
          ]
        },
        {
          "path": "/errors[16]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "UNRECOGNIZED_ELEMENT"
        },
        {
          "path": "/errors[16]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Unrecognized schema: 'update-email-schema'."
        },
        {
          "path": "/errors[16]/path",
          "comment": "Inequal values",
          "master": "http://localhost:2342/kirk/api-schemas/1.0/common-schema.json",
          "inspected": "config/email/email.raml"
        },
        {
          "path": "/errors[16]/range/start/line",
          "comment": "Inequal values",
          "master": 5,
          "inspected": 8
        },
        {
          "path": "/errors[16]/range/start/position",
          "comment": "Inequal values",
          "master": 186,
          "inspected": 252
        },
        {
          "path": "/errors[16]/range/end/line",
          "comment": "Inequal values",
          "master": 5,
          "inspected": 8
        },
        {
          "path": "/errors[16]/range/end/column",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 7
        },
        {
          "path": "/errors[16]/range/end/position",
          "comment": "Inequal values",
          "master": 203,
          "inspected": 255
        },
        {
          "path": "/errors[16]/trace[0]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "ERROR_IN_INCLUDED_FILE"
        },
        {
          "path": "/errors[16]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Error in the included file: Unrecognized schema: 'update-email-schema'."
        },
        {
          "path": "/errors[16]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[16]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 461,
          "inspected": 581
        },
        {
          "path": "/errors[16]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[16]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 468,
          "inspected": 588
        },
        {
          "path": "/errors[17]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "UNRESOLVED_REFERENCE"
        },
        {
          "path": "/errors[17]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Reference: 'customviewbody-schema' can not be resolved"
        },
        {
          "path": "/errors[17]/path",
          "comment": "Inequal values",
          "master": "http://localhost:2342/kirk/api-schemas/1.0/common-schema.json",
          "inspected": "config/metrics/metric-id/metric-id.raml"
        },
        {
          "path": "/errors[17]/range/start/column",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 10
        },
        {
          "path": "/errors[17]/range/start/position",
          "comment": "Inequal values",
          "master": 249,
          "inspected": 147
        },
        {
          "path": "/errors[17]/range/end/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 32
        },
        {
          "path": "/errors[17]/range/end/position",
          "comment": "Inequal values",
          "master": 261,
          "inspected": 169
        },
        {
          "path": "/errors[17]/trace",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 16,
                  "column": 0,
                  "position": 461
                },
                "end": {
                  "line": 16,
                  "column": 7,
                  "position": 468
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
              "path": "session/session.raml",
              "range": {
                "start": {
                  "line": 9,
                  "column": 6,
                  "position": 262
                },
                "end": {
                  "line": 9,
                  "column": 27,
                  "position": 283
                }
              },
              "trace": [
                {
                  "code": "ERROR_IN_INCLUDED_FILE",
                  "message": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 20,
                      "column": 0,
                      "position": 541
                    },
                    "end": {
                      "line": 20,
                      "column": 8,
                      "position": 549
                    }
                  }
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "ERROR_IN_INCLUDED_FILE",
              "message": "Error in the included file: Reference: 'customviewbody-schema' can not be resolved",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 21,
                  "column": 0,
                  "position": 581
                },
                "end": {
                  "line": 21,
                  "column": 7,
                  "position": 588
                }
              },
              "isWarning": true
            }
          ]
        },
        {
          "path": "/errors[18]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "UNRESOLVED_REFERENCE"
        },
        {
          "path": "/errors[18]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Reference: 'customview-schema' can not be resolved"
        },
        {
          "path": "/errors[18]/path",
          "comment": "Inequal values",
          "master": "http://localhost:2342/kirk/api-schemas/1.0/common-schema.json",
          "inspected": "config/metrics/metric-id/metric-id.raml"
        },
        {
          "path": "/errors[18]/range/start/line",
          "comment": "Inequal values",
          "master": 6,
          "inspected": 7
        },
        {
          "path": "/errors[18]/range/start/column",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 10
        },
        {
          "path": "/errors[18]/range/start/position",
          "comment": "Inequal values",
          "master": 249,
          "inspected": 204
        },
        {
          "path": "/errors[18]/range/end/line",
          "comment": "Inequal values",
          "master": 6,
          "inspected": 7
        },
        {
          "path": "/errors[18]/range/end/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 27
        },
        {
          "path": "/errors[18]/range/end/position",
          "comment": "Inequal values",
          "master": 261,
          "inspected": 221
        },
        {
          "path": "/errors[18]/trace[0]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "ERROR_IN_INCLUDED_FILE"
        },
        {
          "path": "/errors[18]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Error in the included file: Reference: 'customview-schema' can not be resolved"
        },
        {
          "path": "/errors[18]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[18]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 461,
          "inspected": 581
        },
        {
          "path": "/errors[18]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[18]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 468,
          "inspected": 588
        },
        {
          "path": "/errors[19]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "UNRECOGNIZED_ELEMENT"
        },
        {
          "path": "/errors[19]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Unrecognized schema: 'customviewbody-schema'."
        },
        {
          "path": "/errors[19]/path",
          "comment": "Inequal values",
          "master": "http://localhost:2342/kirk/api-schemas/1.0/common-schema.json",
          "inspected": "config/metrics/metric-id/metric-id.raml"
        },
        {
          "path": "/errors[19]/range/start/line",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 11
        },
        {
          "path": "/errors[19]/range/start/column",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 6
        },
        {
          "path": "/errors[19]/range/start/position",
          "comment": "Inequal values",
          "master": 307,
          "inspected": 287
        },
        {
          "path": "/errors[19]/range/end/line",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 11
        },
        {
          "path": "/errors[19]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 9
        },
        {
          "path": "/errors[19]/range/end/position",
          "comment": "Inequal values",
          "master": 320,
          "inspected": 290
        },
        {
          "path": "/errors[19]/trace[0]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "ERROR_IN_INCLUDED_FILE"
        },
        {
          "path": "/errors[19]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Error in the included file: Unrecognized schema: 'customviewbody-schema'."
        },
        {
          "path": "/errors[19]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[19]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 461,
          "inspected": 581
        },
        {
          "path": "/errors[19]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[19]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 468,
          "inspected": 588
        },
        {
          "path": "/errors[20]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "UNRECOGNIZED_ELEMENT"
        },
        {
          "path": "/errors[20]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Unrecognized schema: 'customview-schema'."
        },
        {
          "path": "/errors[20]/path",
          "comment": "Inequal values",
          "master": "http://localhost:2342/kirk/api-schemas/1.0/common-schema.json",
          "inspected": "config/metrics/metric-id/metric-id.raml"
        },
        {
          "path": "/errors[20]/range/start/line",
          "comment": "Inequal values",
          "master": 8,
          "inspected": 11
        },
        {
          "path": "/errors[20]/range/start/column",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 6
        },
        {
          "path": "/errors[20]/range/start/position",
          "comment": "Inequal values",
          "master": 364,
          "inspected": 287
        },
        {
          "path": "/errors[20]/range/end/line",
          "comment": "Inequal values",
          "master": 8,
          "inspected": 11
        },
        {
          "path": "/errors[20]/range/end/column",
          "comment": "Inequal values",
          "master": 25,
          "inspected": 9
        },
        {
          "path": "/errors[20]/range/end/position",
          "comment": "Inequal values",
          "master": 385,
          "inspected": 290
        },
        {
          "path": "/errors[20]/trace[0]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "ERROR_IN_INCLUDED_FILE"
        },
        {
          "path": "/errors[20]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Error in the included file: Unrecognized schema: 'customview-schema'."
        },
        {
          "path": "/errors[20]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[20]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 461,
          "inspected": 581
        },
        {
          "path": "/errors[20]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[20]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 468,
          "inspected": 588
        },
        {
          "path": "/errors[21]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "UNRECOGNIZED_ELEMENT"
        },
        {
          "path": "/errors[21]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Unrecognized schema: 'customviewbody-schema'."
        },
        {
          "path": "/errors[21]/path",
          "comment": "Inequal values",
          "master": "http://localhost:2342/kirk/api-schemas/1.0/current-schema.json",
          "inspected": "config/metrics/metric-id/metric-id.raml"
        },
        {
          "path": "/errors[21]/range/start/column",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 6
        },
        {
          "path": "/errors[21]/range/start/position",
          "comment": "Inequal values",
          "master": 610,
          "inspected": 316
        },
        {
          "path": "/errors[21]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 12
        },
        {
          "path": "/errors[21]/range/end/position",
          "comment": "Inequal values",
          "master": 623,
          "inspected": 322
        },
        {
          "path": "/errors[21]/trace[0]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "ERROR_IN_INCLUDED_FILE"
        },
        {
          "path": "/errors[21]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Error in the included file: Unrecognized schema: 'customviewbody-schema'."
        },
        {
          "path": "/errors[21]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[21]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 461,
          "inspected": 581
        },
        {
          "path": "/errors[21]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[21]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 468,
          "inspected": 588
        },
        {
          "path": "/errors[22]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "UNRESOLVED_REFERENCE"
        },
        {
          "path": "/errors[22]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Reference: 'metricsviewbody-schema' can not be resolved"
        },
        {
          "path": "/errors[22]/path",
          "comment": "Inequal values",
          "master": "http://localhost:2342/kirk/api-schemas/1.0/server-schema.json",
          "inspected": "config/metrics/metrics.raml"
        },
        {
          "path": "/errors[22]/range/start/line",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 6
        },
        {
          "path": "/errors[22]/range/start/column",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 8
        },
        {
          "path": "/errors[22]/range/start/position",
          "comment": "Inequal values",
          "master": 491,
          "inspected": 126
        },
        {
          "path": "/errors[22]/range/end/line",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 6
        },
        {
          "path": "/errors[22]/range/end/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 30
        },
        {
          "path": "/errors[22]/range/end/position",
          "comment": "Inequal values",
          "master": 503,
          "inspected": 148
        },
        {
          "path": "/errors[22]/trace[0]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "ERROR_IN_INCLUDED_FILE"
        },
        {
          "path": "/errors[22]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Error in the included file: Reference: 'metricsviewbody-schema' can not be resolved"
        },
        {
          "path": "/errors[22]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[22]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 461,
          "inspected": 581
        },
        {
          "path": "/errors[22]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[22]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 468,
          "inspected": 588
        },
        {
          "path": "/errors[23]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "UNRESOLVED_REFERENCE"
        },
        {
          "path": "/errors[23]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Reference: 'metricsview-schema' can not be resolved"
        },
        {
          "path": "/errors[23]/path",
          "comment": "Inequal values",
          "master": "http://localhost:2342/kirk/api-schemas/1.0/server-schema.json",
          "inspected": "config/metrics/metrics.raml"
        },
        {
          "path": "/errors[23]/range/start/line",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 7
        },
        {
          "path": "/errors[23]/range/start/column",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 8
        },
        {
          "path": "/errors[23]/range/start/position",
          "comment": "Inequal values",
          "master": 491,
          "inspected": 182
        },
        {
          "path": "/errors[23]/range/end/line",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 7
        },
        {
          "path": "/errors[23]/range/end/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 26
        },
        {
          "path": "/errors[23]/range/end/position",
          "comment": "Inequal values",
          "master": 503,
          "inspected": 200
        },
        {
          "path": "/errors[23]/trace",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 16,
                  "column": 0,
                  "position": 461
                },
                "end": {
                  "line": 16,
                  "column": 7,
                  "position": 468
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
              "path": "hosts/hosts.raml",
              "range": {
                "start": {
                  "line": 8,
                  "column": 6,
                  "position": 175
                },
                "end": {
                  "line": 8,
                  "column": 22,
                  "position": 191
                }
              },
              "trace": [
                {
                  "code": "ERROR_IN_INCLUDED_FILE",
                  "message": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 22,
                      "column": 0,
                      "position": 618
                    },
                    "end": {
                      "line": 22,
                      "column": 6,
                      "position": 624
                    }
                  }
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "ERROR_IN_INCLUDED_FILE",
              "message": "Error in the included file: Reference: 'metricsview-schema' can not be resolved",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 21,
                  "column": 0,
                  "position": 581
                },
                "end": {
                  "line": 21,
                  "column": 7,
                  "position": 588
                }
              },
              "isWarning": true
            }
          ]
        },
        {
          "path": "/errors[24]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "UNRESOLVED_REFERENCE"
        },
        {
          "path": "/errors[24]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Reference: 'post-metricview-schema' can not be resolved"
        },
        {
          "path": "/errors[24]/path",
          "comment": "Inequal values",
          "master": "http://localhost:2342/kirk/api-schemas/1.0/server-schema.json",
          "inspected": "config/metrics/metrics.raml"
        },
        {
          "path": "/errors[24]/range/start/line",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 8
        },
        {
          "path": "/errors[24]/range/start/column",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 8
        },
        {
          "path": "/errors[24]/range/start/position",
          "comment": "Inequal values",
          "master": 491,
          "inspected": 230
        },
        {
          "path": "/errors[24]/range/end/line",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 8
        },
        {
          "path": "/errors[24]/range/end/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 32
        },
        {
          "path": "/errors[24]/range/end/position",
          "comment": "Inequal values",
          "master": 503,
          "inspected": 254
        },
        {
          "path": "/errors[24]/trace",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 16,
                  "column": 0,
                  "position": 461
                },
                "end": {
                  "line": 16,
                  "column": 7,
                  "position": 468
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
              "path": "hosts/hosts.raml",
              "range": {
                "start": {
                  "line": 9,
                  "column": 6,
                  "position": 212
                },
                "end": {
                  "line": 9,
                  "column": 27,
                  "position": 233
                }
              },
              "trace": [
                {
                  "code": "ERROR_IN_INCLUDED_FILE",
                  "message": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 22,
                      "column": 0,
                      "position": 618
                    },
                    "end": {
                      "line": 22,
                      "column": 6,
                      "position": 624
                    }
                  }
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "ERROR_IN_INCLUDED_FILE",
              "message": "Error in the included file: Reference: 'post-metricview-schema' can not be resolved",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 21,
                  "column": 0,
                  "position": 581
                },
                "end": {
                  "line": 21,
                  "column": 7,
                  "position": 588
                }
              },
              "isWarning": true
            }
          ]
        },
        {
          "path": "/errors[25]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "UNRECOGNIZED_ELEMENT"
        },
        {
          "path": "/errors[25]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Unrecognized schema: 'metricsviewbody-schema'."
        },
        {
          "path": "/errors[25]/path",
          "comment": "Inequal values",
          "master": "http://localhost:2342/kirk/api-schemas/1.0/status-schema.json",
          "inspected": "config/metrics/metrics.raml"
        },
        {
          "path": "/errors[25]/range/start/line",
          "comment": "Inequal values",
          "master": 3,
          "inspected": 12
        },
        {
          "path": "/errors[25]/range/start/position",
          "comment": "Inequal values",
          "master": 73,
          "inspected": 317
        },
        {
          "path": "/errors[25]/range/end/line",
          "comment": "Inequal values",
          "master": 3,
          "inspected": 12
        },
        {
          "path": "/errors[25]/range/end/column",
          "comment": "Inequal values",
          "master": 15,
          "inspected": 7
        },
        {
          "path": "/errors[25]/range/end/position",
          "comment": "Inequal values",
          "master": 84,
          "inspected": 320
        },
        {
          "path": "/errors[25]/trace[0]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "ERROR_IN_INCLUDED_FILE"
        },
        {
          "path": "/errors[25]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Error in the included file: Unrecognized schema: 'metricsviewbody-schema'."
        },
        {
          "path": "/errors[25]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[25]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 461,
          "inspected": 581
        },
        {
          "path": "/errors[25]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[25]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 468,
          "inspected": 588
        },
        {
          "path": "/errors[26]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "UNRECOGNIZED_ELEMENT"
        },
        {
          "path": "/errors[26]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Unrecognized schema: 'metricsview-schema'."
        },
        {
          "path": "/errors[26]/path",
          "comment": "Inequal values",
          "master": "http://localhost:2342/kirk/api-schemas/1.0/status-schema.json",
          "inspected": "config/metrics/metrics.raml"
        },
        {
          "path": "/errors[26]/range/start/line",
          "comment": "Inequal values",
          "master": 11,
          "inspected": 12
        },
        {
          "path": "/errors[26]/range/start/position",
          "comment": "Inequal values",
          "master": 546,
          "inspected": 317
        },
        {
          "path": "/errors[26]/range/end/line",
          "comment": "Inequal values",
          "master": 11,
          "inspected": 12
        },
        {
          "path": "/errors[26]/range/end/column",
          "comment": "Inequal values",
          "master": 24,
          "inspected": 7
        },
        {
          "path": "/errors[26]/range/end/position",
          "comment": "Inequal values",
          "master": 566,
          "inspected": 320
        },
        {
          "path": "/errors[26]/trace[0]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "ERROR_IN_INCLUDED_FILE"
        },
        {
          "path": "/errors[26]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Error in the included file: Unrecognized schema: 'metricsview-schema'."
        },
        {
          "path": "/errors[26]/trace[0]/range/start/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[26]/trace[0]/range/start/position",
          "comment": "Inequal values",
          "master": 461,
          "inspected": 581
        },
        {
          "path": "/errors[26]/trace[0]/range/end/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 21
        },
        {
          "path": "/errors[26]/trace[0]/range/end/position",
          "comment": "Inequal values",
          "master": 468,
          "inspected": 588
        },
        {
          "path": "/errors[27]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "UNRECOGNIZED_ELEMENT"
        },
        {
          "path": "/errors[27]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Unrecognized schema: 'post-metricview-schema'."
        },
        {
          "path": "/errors[27]/path",
          "comment": "Inequal values",
          "master": "http://localhost:2342/kirk/api-schemas/1.0/status-schema.json",
          "inspected": "config/metrics/metrics.raml"
        },
        {
          "path": "/errors[27]/range/start/line",
          "comment": "Inequal values",
          "master": 11,
          "inspected": 13
        },
        {
          "path": "/errors[27]/range/start/position",
          "comment": "Inequal values",
          "master": 546,
          "inspected": 344
        },
        {
          "path": "/errors[27]/range/end/line",
          "comment": "Inequal values",
          "master": 11,
          "inspected": 13
        },
        {
          "path": "/errors[27]/range/end/column",
          "comment": "Inequal values",
          "master": 24,
          "inspected": 8
        },
        {
          "path": "/errors[27]/range/end/position",
          "comment": "Inequal values",
          "master": 566,
          "inspected": 348
        },
        {
          "path": "/errors[27]/trace",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 16,
                  "column": 0,
                  "position": 461
                },
                "end": {
                  "line": 16,
                  "column": 7,
                  "position": 468
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
              "path": "hosts/hosts.raml",
              "range": {
                "start": {
                  "line": 11,
                  "column": 6,
                  "position": 301
                },
                "end": {
                  "line": 11,
                  "column": 30,
                  "position": 325
                }
              },
              "trace": [
                {
                  "code": "ERROR_IN_INCLUDED_FILE",
                  "message": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 22,
                      "column": 0,
                      "position": 618
                    },
                    "end": {
                      "line": 22,
                      "column": 6,
                      "position": 624
                    }
                  }
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "ERROR_IN_INCLUDED_FILE",
              "message": "Error in the included file: Unrecognized schema: 'post-metricview-schema'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 21,
                  "column": 0,
                  "position": 581
                },
                "end": {
                  "line": 21,
                  "column": 7,
                  "position": 588
                }
              },
              "isWarning": true
            }
          ]
        }
      ]
    }
  },
  "org_03d96b6b-cf0d-4cb4-8757-dee719dca6e6": {
    "api_12846_ver_13352": {
      "diff": [
        {
          "path": "/errors[0]/code",
          "comment": "Inequal values",
          "master": "STRING_EXPECTED",
          "inspected": "MISSING_REQUIRED_PROPERTY"
        },
        {
          "path": "/errors[0]/message",
          "comment": "Inequal values",
          "master": "Property 'title' must be a string",
          "inspected": "Missing required property 'title'"
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 1,
          "inspected": 16
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 5,
          "inspected": 10
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 357
        }
      ],
      "oldParserErrors": "none",
      "mastrerParserErrors": [
        {
          "code": "STRING_EXPECTED",
          "message": "Property 'title' must be a string",
          "path": "sailaja.raml",
          "range": {
            "start": {
              "line": 1,
              "column": 0,
              "position": 11
            },
            "end": {
              "line": 1,
              "column": 5,
              "position": 16
            }
          }
        }
      ],
      "inspectedParserErrors": [
        {
          "code": "MISSING_REQUIRED_PROPERTY",
          "message": "Missing required property 'title'",
          "path": "sailaja.raml",
          "range": {
            "start": {
              "line": 1,
              "column": 0,
              "position": 11
            },
            "end": {
              "line": 16,
              "column": 10,
              "position": 357
            }
          }
        }
      ]
    }
  },
  "org_04a50a4f-10a7-424e-9402-15b1dbae0842": {
    "api_33384_ver_34784": {
      "diff": [
        {
          "path": "/specification/resources[1]/methods[1]/responses/201/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "Location: {baseUri}/certificates/{certificate}\n",
              "repeat": false,
              "description": "The URL of the newly created certificate",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            {
              "name": "Content-Length",
              "displayName": "Content-Length",
              "type": "integer",
              "required": false,
              "default": 0,
              "example": "Content-Length: 0\n",
              "repeat": false,
              "description": "This request does not return a body",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Location": {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "Location: {baseUri}/certificates/{certificate}\n",
              "repeat": false,
              "description": "The URL of the newly created certificate",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            "Content-Length": {
              "name": "Content-Length",
              "displayName": "Content-Length",
              "type": "integer",
              "required": false,
              "default": 0,
              "example": "Content-Length: 0\n",
              "repeat": false,
              "description": "This request does not return a body",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        },
        {
          "path": "/specification/resources[1]/resources[0]/methods[1]/responses/204/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Content-Length",
              "displayName": "Content-Length",
              "type": "integer",
              "required": false,
              "default": 0,
              "example": "Content-Length: 0\n",
              "repeat": false,
              "description": "This request does not return a body",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Content-Length": {
              "name": "Content-Length",
              "displayName": "Content-Length",
              "type": "integer",
              "required": false,
              "default": 0,
              "example": "Content-Length: 0\n",
              "repeat": false,
              "description": "This request does not return a body",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        }
      ]
    },
    "api_42431_ver_43921": {
      "diff": [
        {
          "path": "/specification/resources[2]/methods[0]/responses/201/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "Location: {baseUri}/certificates/{certificate_serial_number}\n",
              "repeat": false,
              "description": "The Serial Number belonging to the newly issued Certificate",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            {
              "name": "Content-Length",
              "displayName": "Content-Length",
              "type": "integer",
              "required": false,
              "default": 0,
              "example": "Content-Length: 0\n",
              "repeat": false,
              "description": null,
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Location": {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "Location: {baseUri}/certificates/{certificate_serial_number}\n",
              "repeat": false,
              "description": "The Serial Number belonging to the newly issued Certificate",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            "Content-Length": {
              "name": "Content-Length",
              "displayName": "Content-Length",
              "type": "integer",
              "required": false,
              "default": 0,
              "example": "Content-Length: 0\n",
              "repeat": false,
              "description": null,
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "org_04a67587-1b7d-46aa-8a6f-3327fed2451b": {
    "api_25221_ver_26784": {
      "diff": [
        {
          "path": "/specification/resources[0]/methods[0]/responses/200/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "voter_status",
          "inspected": "{\"type\":\"object\",\"description\":\"Indicate whether a person is eligible to vote in the ASPSU elections\",\"title\":\"voter_status\"}"
        },
        {
          "path": "/specification/schemas",
          "comment": "Defined/undefined mismatch",
          "inspected": [
            {
              "voter_status": "{\"type\":\"object\",\"description\":\"Indicate whether a person is eligible to vote in the ASPSU elections\",\"title\":\"voter_status\"}"
            },
            {
              "error": "{\"type\":\"object\",\"description\":\"Generalized structured error message consisting of an outer enclosing dictionary with a single 'error' element. The 'error' element is also a dictionary (nested) containing further elements.\",\"title\":\"error\",\"properties\":{\"cat\":{\"type\":\"string\",\"required\":true,\"title\":\"cat\"}}}\n"
            },
            {
              "advising_hold_status": "{\"type\":\"object\",\"description\":\"Description of the current freshman advising hold status for a given student\",\"title\":\"advising_hold_status\",\"properties\":{\"hold\":{\"type\":\"string\",\"required\":true,\"title\":\"hold\"}}}"
            }
          ]
        },
        {
          "path": "/errors",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "UNKNOWN_NODE",
              "message": "Unknown node: ''",
              "path": "vote_v1.raml",
              "range": {
                "start": {
                  "line": 9,
                  "column": 8,
                  "position": 143
                },
                "end": {
                  "line": 12,
                  "column": 246,
                  "position": 878
                }
              }
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'voter_status'.",
              "path": "vote_v1.raml",
              "range": {
                "start": {
                  "line": 43,
                  "column": 24,
                  "position": 1974
                },
                "end": {
                  "line": 43,
                  "column": 30,
                  "position": 1980
                }
              },
              "isWarning": true
            }
          ],
          "inspected": []
        }
      ],
      "oldParserErrors": "none",
      "mastrerParserErrors": [
        {
          "code": "UNKNOWN_NODE",
          "message": "Unknown node: ''",
          "path": "vote_v1.raml",
          "range": {
            "start": {
              "line": 9,
              "column": 8,
              "position": 143
            },
            "end": {
              "line": 12,
              "column": 246,
              "position": 878
            }
          }
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'voter_status'.",
          "path": "vote_v1.raml",
          "range": {
            "start": {
              "line": 43,
              "column": 24,
              "position": 1974
            },
            "end": {
              "line": 43,
              "column": 30,
              "position": 1980
            }
          },
          "isWarning": true
        }
      ]
    }
  },
  "org_04dff175-529c-4258-98a9-22d26281eb8b": {
    "api_28287_ver_30106": {
      "diff": [
        {
          "path": "/specification/resources[0]/methods[0]/responses/200/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[0]/methods[0]/responses/200/body/application/xml/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[0]/methods[0]/responses/200/body/text/xml/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[1]/methods[0]/responses/200/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[1]/methods[0]/responses/200/body/application/xml/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[1]/methods[0]/responses/200/body/text/xml/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[2]/methods[0]/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[2]/methods[0]/body/application/xml/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[2]/methods[0]/body/text/xml/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[2]/methods[1]/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[2]/methods[1]/body/application/xml/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[2]/methods[1]/body/text/xml/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[3]/methods[0]/responses/200/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[3]/methods[0]/responses/200/body/application/xml/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[3]/methods[0]/responses/200/body/text/xml/schemaContent",
          "comment": "Inequal values",
          "master": "Pet",
          "inspected": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
        },
        {
          "path": "/specification/resources[4]/methods[1]/responses/200/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "Order",
          "inspected": "{\"type\":\"object\",\"title\":\"Order\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":false,\"title\":\"id\"},\"petId\":{\"type\":\"integer\",\"required\":false,\"title\":\"petId\"},\"quantity\":{\"type\":\"integer\",\"required\":false,\"title\":\"quantity\"},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"},\"shipDate\":{\"type\":\"string\",\"required\":false,\"title\":\"shipDate\"}}}"
        },
        {
          "path": "/specification/resources[5]/methods[0]/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "Order",
          "inspected": "{\"type\":\"object\",\"title\":\"Order\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":false,\"title\":\"id\"},\"petId\":{\"type\":\"integer\",\"required\":false,\"title\":\"petId\"},\"quantity\":{\"type\":\"integer\",\"required\":false,\"title\":\"quantity\"},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"},\"shipDate\":{\"type\":\"string\",\"required\":false,\"title\":\"shipDate\"}}}"
        },
        {
          "path": "/specification/resources[6]/methods[0]/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "User",
          "inspected": "{\"type\":\"object\",\"title\":\"User\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":false,\"title\":\"id\"},\"firstName\":{\"type\":\"string\",\"required\":false,\"title\":\"firstName\"},\"userlogin\":{\"type\":\"string\",\"required\":false,\"title\":\"userlogin\"},\"lastName\":{\"type\":\"string\",\"required\":false,\"title\":\"lastName\"},\"email\":{\"type\":\"string\",\"required\":false,\"title\":\"email\"},\"password\":{\"type\":\"string\",\"required\":false,\"title\":\"password\"},\"phone\":{\"type\":\"string\",\"required\":false,\"title\":\"phone\"},\"userStatus\":{\"type\":\"integer\",\"required\":false,\"title\":\"userStatus\"}}}"
        },
        {
          "path": "/specification/resources[7]/methods[0]/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "User",
          "inspected": "{\"type\":\"object\",\"title\":\"User\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":false,\"title\":\"id\"},\"firstName\":{\"type\":\"string\",\"required\":false,\"title\":\"firstName\"},\"userlogin\":{\"type\":\"string\",\"required\":false,\"title\":\"userlogin\"},\"lastName\":{\"type\":\"string\",\"required\":false,\"title\":\"lastName\"},\"email\":{\"type\":\"string\",\"required\":false,\"title\":\"email\"},\"password\":{\"type\":\"string\",\"required\":false,\"title\":\"password\"},\"phone\":{\"type\":\"string\",\"required\":false,\"title\":\"phone\"},\"userStatus\":{\"type\":\"integer\",\"required\":false,\"title\":\"userStatus\"}}}"
        },
        {
          "path": "/specification/resources[8]/methods[0]/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "User",
          "inspected": "{\"type\":\"object\",\"title\":\"User\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":false,\"title\":\"id\"},\"firstName\":{\"type\":\"string\",\"required\":false,\"title\":\"firstName\"},\"userlogin\":{\"type\":\"string\",\"required\":false,\"title\":\"userlogin\"},\"lastName\":{\"type\":\"string\",\"required\":false,\"title\":\"lastName\"},\"email\":{\"type\":\"string\",\"required\":false,\"title\":\"email\"},\"password\":{\"type\":\"string\",\"required\":false,\"title\":\"password\"},\"phone\":{\"type\":\"string\",\"required\":false,\"title\":\"phone\"},\"userStatus\":{\"type\":\"integer\",\"required\":false,\"title\":\"userStatus\"}}}"
        },
        {
          "path": "/specification/resources[9]/methods[0]/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "User",
          "inspected": "{\"type\":\"object\",\"title\":\"User\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":false,\"title\":\"id\"},\"firstName\":{\"type\":\"string\",\"required\":false,\"title\":\"firstName\"},\"userlogin\":{\"type\":\"string\",\"required\":false,\"title\":\"userlogin\"},\"lastName\":{\"type\":\"string\",\"required\":false,\"title\":\"lastName\"},\"email\":{\"type\":\"string\",\"required\":false,\"title\":\"email\"},\"password\":{\"type\":\"string\",\"required\":false,\"title\":\"password\"},\"phone\":{\"type\":\"string\",\"required\":false,\"title\":\"phone\"},\"userStatus\":{\"type\":\"integer\",\"required\":false,\"title\":\"userStatus\"}}}"
        },
        {
          "path": "/specification/resources[9]/methods[2]/responses/200/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "User",
          "inspected": "{\"type\":\"object\",\"title\":\"User\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":false,\"title\":\"id\"},\"firstName\":{\"type\":\"string\",\"required\":false,\"title\":\"firstName\"},\"userlogin\":{\"type\":\"string\",\"required\":false,\"title\":\"userlogin\"},\"lastName\":{\"type\":\"string\",\"required\":false,\"title\":\"lastName\"},\"email\":{\"type\":\"string\",\"required\":false,\"title\":\"email\"},\"password\":{\"type\":\"string\",\"required\":false,\"title\":\"password\"},\"phone\":{\"type\":\"string\",\"required\":false,\"title\":\"phone\"},\"userStatus\":{\"type\":\"integer\",\"required\":false,\"title\":\"userStatus\"}}}"
        },
        {
          "path": "/specification/schemas",
          "comment": "Defined/undefined mismatch",
          "inspected": [
            {
              "Tag": "{\"type\":\"object\",\"title\":\"Tag\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":false,\"title\":\"id\"},\"name\":{\"type\":\"string\",\"required\":false,\"title\":\"name\"}}}"
            },
            {
              "Pet": "{\"type\":\"object\",\"title\":\"Pet\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true,\"title\":\"id\"},\"category\":{\"type\":\"object\",\"$ref\":\"#/schemas/Category\",\"required\":false,\"title\":\"category\"},\"name\":{\"type\":\"string\",\"required\":true,\"title\":\"name\"},\"photoUrls\":{\"type\":\"array\",\"required\":false,\"title\":\"photoUrls\",\"items\":{\"type\":\"string\",\"title\":\"photoUrls\"},\"uniqueItems\":false},\"tags\":{\"type\":\"array\",\"required\":false,\"title\":\"tags\",\"items\":{\"type\":\"object\",\"$ref\":\"#/schemas/Tag\"},\"uniqueItems\":false},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"}}}"
            },
            {
              "Category": "{\"type\":\"object\",\"title\":\"Category\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":false,\"title\":\"id\"},\"name\":{\"type\":\"string\",\"required\":false,\"title\":\"name\"}}}"
            },
            {
              "File": "{\"type\":\"object\",\"title\":\"File\"}"
            },
            {
              "Order": "{\"type\":\"object\",\"title\":\"Order\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":false,\"title\":\"id\"},\"petId\":{\"type\":\"integer\",\"required\":false,\"title\":\"petId\"},\"quantity\":{\"type\":\"integer\",\"required\":false,\"title\":\"quantity\"},\"status\":{\"type\":\"string\",\"required\":false,\"title\":\"status\"},\"shipDate\":{\"type\":\"string\",\"required\":false,\"title\":\"shipDate\"}}}"
            },
            {
              "User": "{\"type\":\"object\",\"title\":\"User\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":false,\"title\":\"id\"},\"firstName\":{\"type\":\"string\",\"required\":false,\"title\":\"firstName\"},\"userlogin\":{\"type\":\"string\",\"required\":false,\"title\":\"userlogin\"},\"lastName\":{\"type\":\"string\",\"required\":false,\"title\":\"lastName\"},\"email\":{\"type\":\"string\",\"required\":false,\"title\":\"email\"},\"password\":{\"type\":\"string\",\"required\":false,\"title\":\"password\"},\"phone\":{\"type\":\"string\",\"required\":false,\"title\":\"phone\"},\"userStatus\":{\"type\":\"integer\",\"required\":false,\"title\":\"userStatus\"}}}"
            },
            {
              "d3": "{\"type\":\"object\",\"description\":\"d3d\",\"title\":\"d3\",\"properties\":{\"dasd\":{\"type\":\"integer\",\"required\":true,\"title\":\"dasd\"},\"ddd\":{\"type\":\"string\",\"required\":true,\"title\":\"ddd\"}}}"
            }
          ]
        },
        {
          "path": "/errors",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "UNKNOWN_NODE",
              "message": "Unknown node: ''",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 6,
                  "column": 8,
                  "position": 137
                },
                "end": {
                  "line": 12,
                  "column": 192,
                  "position": 2262
                }
              }
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 29,
                  "column": 24,
                  "position": 2756
                },
                "end": {
                  "line": 29,
                  "column": 30,
                  "position": 2762
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 32,
                  "column": 24,
                  "position": 2985
                },
                "end": {
                  "line": 32,
                  "column": 30,
                  "position": 2991
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 35,
                  "column": 24,
                  "position": 3242
                },
                "end": {
                  "line": 35,
                  "column": 30,
                  "position": 3248
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 40,
                  "column": 24,
                  "position": 3550
                },
                "end": {
                  "line": 40,
                  "column": 31,
                  "position": 3557
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 61,
                  "column": 24,
                  "position": 4174
                },
                "end": {
                  "line": 61,
                  "column": 30,
                  "position": 4180
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 64,
                  "column": 24,
                  "position": 4401
                },
                "end": {
                  "line": 64,
                  "column": 30,
                  "position": 4407
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 67,
                  "column": 24,
                  "position": 4633
                },
                "end": {
                  "line": 67,
                  "column": 30,
                  "position": 4639
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 72,
                  "column": 24,
                  "position": 4916
                },
                "end": {
                  "line": 72,
                  "column": 31,
                  "position": 4923
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 80,
                  "column": 24,
                  "position": 5181
                },
                "end": {
                  "line": 80,
                  "column": 31,
                  "position": 5188
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 103,
                  "column": 16,
                  "position": 5823
                },
                "end": {
                  "line": 103,
                  "column": 22,
                  "position": 5829
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 106,
                  "column": 16,
                  "position": 6026
                },
                "end": {
                  "line": 106,
                  "column": 22,
                  "position": 6032
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 109,
                  "column": 16,
                  "position": 6234
                },
                "end": {
                  "line": 109,
                  "column": 22,
                  "position": 6240
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 119,
                  "column": 16,
                  "position": 6620
                },
                "end": {
                  "line": 119,
                  "column": 22,
                  "position": 6626
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 122,
                  "column": 16,
                  "position": 6823
                },
                "end": {
                  "line": 122,
                  "column": 22,
                  "position": 6829
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 125,
                  "column": 16,
                  "position": 7031
                },
                "end": {
                  "line": 125,
                  "column": 22,
                  "position": 7037
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 150,
                  "column": 24,
                  "position": 7911
                },
                "end": {
                  "line": 150,
                  "column": 30,
                  "position": 7917
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 153,
                  "column": 24,
                  "position": 8140
                },
                "end": {
                  "line": 153,
                  "column": 30,
                  "position": 8146
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Pet'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 156,
                  "column": 24,
                  "position": 8397
                },
                "end": {
                  "line": 156,
                  "column": 30,
                  "position": 8403
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 161,
                  "column": 24,
                  "position": 8705
                },
                "end": {
                  "line": 161,
                  "column": 31,
                  "position": 8712
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Order'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 189,
                  "column": 24,
                  "position": 9550
                },
                "end": {
                  "line": 189,
                  "column": 30,
                  "position": 9556
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 194,
                  "column": 24,
                  "position": 9795
                },
                "end": {
                  "line": 194,
                  "column": 31,
                  "position": 9802
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 198,
                  "column": 24,
                  "position": 9915
                },
                "end": {
                  "line": 198,
                  "column": 31,
                  "position": 9922
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'Order'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 205,
                  "column": 16,
                  "position": 10101
                },
                "end": {
                  "line": 205,
                  "column": 22,
                  "position": 10107
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'User'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 217,
                  "column": 16,
                  "position": 10477
                },
                "end": {
                  "line": 217,
                  "column": 22,
                  "position": 10483
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'User'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 228,
                  "column": 16,
                  "position": 10997
                },
                "end": {
                  "line": 228,
                  "column": 22,
                  "position": 11003
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'User'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 239,
                  "column": 16,
                  "position": 11516
                },
                "end": {
                  "line": 239,
                  "column": 22,
                  "position": 11522
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'User'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 257,
                  "column": 16,
                  "position": 12199
                },
                "end": {
                  "line": 257,
                  "column": 22,
                  "position": 12205
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'User'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 278,
                  "column": 24,
                  "position": 12939
                },
                "end": {
                  "line": 278,
                  "column": 30,
                  "position": 12945
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 283,
                  "column": 24,
                  "position": 13287
                },
                "end": {
                  "line": 283,
                  "column": 31,
                  "position": 13294
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 287,
                  "column": 24,
                  "position": 13407
                },
                "end": {
                  "line": 287,
                  "column": 31,
                  "position": 13414
                }
              },
              "isWarning": true
            }
          ],
          "inspected": [
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Reference could not be resolved: #/schemas/Tag",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 7,
                  "column": 450,
                  "position": 754
                },
                "end": {
                  "line": 7,
                  "column": 498,
                  "position": 802
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 40,
                  "column": 24,
                  "position": 3550
                },
                "end": {
                  "line": 40,
                  "column": 31,
                  "position": 3557
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 72,
                  "column": 24,
                  "position": 4916
                },
                "end": {
                  "line": 72,
                  "column": 31,
                  "position": 4923
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 80,
                  "column": 24,
                  "position": 5181
                },
                "end": {
                  "line": 80,
                  "column": 31,
                  "position": 5188
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 161,
                  "column": 24,
                  "position": 8705
                },
                "end": {
                  "line": 161,
                  "column": 31,
                  "position": 8712
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 194,
                  "column": 24,
                  "position": 9795
                },
                "end": {
                  "line": 194,
                  "column": 31,
                  "position": 9802
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 198,
                  "column": 24,
                  "position": 9915
                },
                "end": {
                  "line": 198,
                  "column": 31,
                  "position": 9922
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 283,
                  "column": 24,
                  "position": 13287
                },
                "end": {
                  "line": 283,
                  "column": 31,
                  "position": 13294
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 287,
                  "column": 24,
                  "position": 13407
                },
                "end": {
                  "line": 287,
                  "column": 31,
                  "position": 13414
                }
              },
              "isWarning": true
            }
          ]
        }
      ],
      "oldParserErrors": "none",
      "mastrerParserErrors": [
        {
          "code": "UNKNOWN_NODE",
          "message": "Unknown node: ''",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 6,
              "column": 8,
              "position": 137
            },
            "end": {
              "line": 12,
              "column": 192,
              "position": 2262
            }
          }
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 29,
              "column": 24,
              "position": 2756
            },
            "end": {
              "line": 29,
              "column": 30,
              "position": 2762
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 32,
              "column": 24,
              "position": 2985
            },
            "end": {
              "line": 32,
              "column": 30,
              "position": 2991
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 35,
              "column": 24,
              "position": 3242
            },
            "end": {
              "line": 35,
              "column": 30,
              "position": 3248
            }
          },
          "isWarning": true
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected end of JSON input",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 40,
              "column": 24,
              "position": 3550
            },
            "end": {
              "line": 40,
              "column": 31,
              "position": 3557
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 61,
              "column": 24,
              "position": 4174
            },
            "end": {
              "line": 61,
              "column": 30,
              "position": 4180
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 64,
              "column": 24,
              "position": 4401
            },
            "end": {
              "line": 64,
              "column": 30,
              "position": 4407
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 67,
              "column": 24,
              "position": 4633
            },
            "end": {
              "line": 67,
              "column": 30,
              "position": 4639
            }
          },
          "isWarning": true
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected end of JSON input",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 72,
              "column": 24,
              "position": 4916
            },
            "end": {
              "line": 72,
              "column": 31,
              "position": 4923
            }
          },
          "isWarning": true
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected end of JSON input",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 80,
              "column": 24,
              "position": 5181
            },
            "end": {
              "line": 80,
              "column": 31,
              "position": 5188
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 103,
              "column": 16,
              "position": 5823
            },
            "end": {
              "line": 103,
              "column": 22,
              "position": 5829
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 106,
              "column": 16,
              "position": 6026
            },
            "end": {
              "line": 106,
              "column": 22,
              "position": 6032
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 109,
              "column": 16,
              "position": 6234
            },
            "end": {
              "line": 109,
              "column": 22,
              "position": 6240
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 119,
              "column": 16,
              "position": 6620
            },
            "end": {
              "line": 119,
              "column": 22,
              "position": 6626
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 122,
              "column": 16,
              "position": 6823
            },
            "end": {
              "line": 122,
              "column": 22,
              "position": 6829
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 125,
              "column": 16,
              "position": 7031
            },
            "end": {
              "line": 125,
              "column": 22,
              "position": 7037
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 150,
              "column": 24,
              "position": 7911
            },
            "end": {
              "line": 150,
              "column": 30,
              "position": 7917
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 153,
              "column": 24,
              "position": 8140
            },
            "end": {
              "line": 153,
              "column": 30,
              "position": 8146
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Pet'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 156,
              "column": 24,
              "position": 8397
            },
            "end": {
              "line": 156,
              "column": 30,
              "position": 8403
            }
          },
          "isWarning": true
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected end of JSON input",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 161,
              "column": 24,
              "position": 8705
            },
            "end": {
              "line": 161,
              "column": 31,
              "position": 8712
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Order'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 189,
              "column": 24,
              "position": 9550
            },
            "end": {
              "line": 189,
              "column": 30,
              "position": 9556
            }
          },
          "isWarning": true
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected end of JSON input",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 194,
              "column": 24,
              "position": 9795
            },
            "end": {
              "line": 194,
              "column": 31,
              "position": 9802
            }
          },
          "isWarning": true
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected end of JSON input",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 198,
              "column": 24,
              "position": 9915
            },
            "end": {
              "line": 198,
              "column": 31,
              "position": 9922
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'Order'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 205,
              "column": 16,
              "position": 10101
            },
            "end": {
              "line": 205,
              "column": 22,
              "position": 10107
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'User'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 217,
              "column": 16,
              "position": 10477
            },
            "end": {
              "line": 217,
              "column": 22,
              "position": 10483
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'User'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 228,
              "column": 16,
              "position": 10997
            },
            "end": {
              "line": 228,
              "column": 22,
              "position": 11003
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'User'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 239,
              "column": 16,
              "position": 11516
            },
            "end": {
              "line": 239,
              "column": 22,
              "position": 11522
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'User'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 257,
              "column": 16,
              "position": 12199
            },
            "end": {
              "line": 257,
              "column": 22,
              "position": 12205
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'User'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 278,
              "column": 24,
              "position": 12939
            },
            "end": {
              "line": 278,
              "column": 30,
              "position": 12945
            }
          },
          "isWarning": true
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected end of JSON input",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 283,
              "column": 24,
              "position": 13287
            },
            "end": {
              "line": 283,
              "column": 31,
              "position": 13294
            }
          },
          "isWarning": true
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected end of JSON input",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 287,
              "column": 24,
              "position": 13407
            },
            "end": {
              "line": 287,
              "column": 31,
              "position": 13414
            }
          },
          "isWarning": true
        }
      ]
    }
  },
  "org_05b593d6-5515-43be-8d5b-6bc2d387bb64": {
    "api_1577_ver_1575": {
      "diff": [
        {
          "path": "/specification/resourceTypes[0]/collection/post/responses/201/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "<<resourcePath>>/<<example-member-id>>",
              "repeat": false,
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Location": {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "<<resourcePath>>/<<example-member-id>>",
              "repeat": false,
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "org_075acb1a-4a66-4699-bcc1-93d1c639c981": {
    "api_14281_ver_15045": {
      "diff": [
        {
          "path": "/specification/resources[0]/methods[1]/responses/201/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "repeat": false,
              "description": "The location of created resource (Customer), for examplple /customers/6B6F58A5-0122-4038-8C6A-45AF8BB01AAC",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Location": {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "repeat": false,
              "description": "The location of created resource (Customer), for examplple /customers/6B6F58A5-0122-4038-8C6A-45AF8BB01AAC",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        },
        {
          "path": "/specification/resources[0]/resources[0]/resources[0]/methods[1]/responses/201/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "/customers/6B6F58A5-0122-4038-8C6A-45AF8BB01AAC/widgets/1",
              "repeat": false,
              "description": "the location of created resource (customer)",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Location": {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "/customers/6B6F58A5-0122-4038-8C6A-45AF8BB01AAC/widgets/1",
              "repeat": false,
              "description": "the location of created resource (customer)",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "org_075fa592-40f7-4026-bb0d-5380a12fd1c3": {
    "api_28514_ver_30341": {
      "oldParserErrors": "none",
      "mastrerParserErrors": [
        {
          "code": "SECUREDBY_LIST_08",
          "message": "'securedBy' should be a list in RAML08",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 5,
              "column": 0,
              "position": 179
            },
            "end": {
              "line": 5,
              "column": 9,
              "position": 188
            }
          }
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Cannot tokenize symbol '\"'",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 47,
              "column": 29,
              "position": 1143
            },
            "end": {
              "line": 47,
              "column": 30,
              "position": 1144
            }
          },
          "isWarning": true
        },
        {
          "code": "SCALAR_PROHIBITED",
          "message": "Property 'schemas' can not have scalar value",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 209,
              "column": 0,
              "position": 5045
            },
            "end": {
              "line": 209,
              "column": 7,
              "position": 5052
            }
          }
        },
        {
          "code": "UNKNOWN_NODE",
          "message": "Unknown node: ''",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 210,
              "column": 3,
              "position": 5057
            },
            "end": {
              "line": 210,
              "column": 8,
              "position": 5062
            }
          }
        }
      ],
      "inspectedParserErrors": [
        {
          "code": "SECUREDBY_LIST_08",
          "message": "'securedBy' should be a list in RAML08",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 5,
              "column": 0,
              "position": 179
            },
            "end": {
              "line": 5,
              "column": 9,
              "position": 188
            }
          }
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Cannot tokenize symbol '\"'",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 47,
              "column": 29,
              "position": 1143
            },
            "end": {
              "line": 47,
              "column": 30,
              "position": 1144
            }
          },
          "isWarning": true
        },
        {
          "code": "SCALAR_PROHIBITED",
          "message": "Property 'schemas' can not have scalar value",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 209,
              "column": 0,
              "position": 5045
            },
            "end": {
              "line": 209,
              "column": 7,
              "position": 5052
            }
          }
        },
        {
          "code": "UNKNOWN_NODE",
          "message": "Unknown node: ''",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 210,
              "column": 3,
              "position": 5057
            },
            "end": {
              "line": 210,
              "column": 8,
              "position": 5062
            }
          }
        }
      ]
    },
    "api_37322_ver_38966": {
      "oldParserErrors": "none",
      "mastrerParserErrors": [
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Cannot tokenize symbol 'T'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 35,
              "column": 30,
              "position": 914
            },
            "end": {
              "line": 35,
              "column": 31,
              "position": 915
            }
          },
          "isWarning": true
        },
        {
          "code": "WEB_FORMS",
          "message": "File type can be only used in web forms",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 118,
              "column": 10,
              "position": 2807
            },
            "end": {
              "line": 118,
              "column": 14,
              "position": 2811
            }
          }
        }
      ],
      "inspectedParserErrors": [
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Cannot tokenize symbol 'T'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 35,
              "column": 30,
              "position": 914
            },
            "end": {
              "line": 35,
              "column": 31,
              "position": 915
            }
          },
          "isWarning": true
        },
        {
          "code": "WEB_FORMS",
          "message": "File type can be only used in web forms",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 118,
              "column": 10,
              "position": 2807
            },
            "end": {
              "line": 118,
              "column": 14,
              "position": 2811
            }
          }
        }
      ]
    }
  },
  "org_087ce92a-c636-4ef0-820c-3b3ef4ec8869": {
    "api_32437_ver_33806": {
      "diff": [
        {
          "path": "/specification/resources[2]/resources[0]/methods[0]/responses/301/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "/create-resubmission-wip",
              "repeat": false,
              "description": "/create-resubmission-wip",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Location": {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "/create-resubmission-wip",
              "repeat": false,
              "description": "/create-resubmission-wip",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        }
      ]
    },
    "api_33854_ver_35253": {
      "diff": [
        {
          "path": "/specification/resources[2]/resources[0]/methods[0]/responses/301/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "/create-resubmission-wip",
              "repeat": false,
              "description": "/create-resubmission-wip",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Location": {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "/create-resubmission-wip",
              "repeat": false,
              "description": "/create-resubmission-wip",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        },
        {
          "path": "/errors",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 14,
                  "column": 4,
                  "position": 534
                },
                "end": {
                  "line": 14,
                  "column": 15,
                  "position": 545
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 26,
                  "column": 8,
                  "position": 1219
                },
                "end": {
                  "line": 26,
                  "column": 15,
                  "position": 1226
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Reference has not been resolved during compilation: /schemas/offer-certificate-dealer.json",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 41,
                  "column": 12,
                  "position": 4143
                },
                "end": {
                  "line": 41,
                  "column": 19,
                  "position": 4150
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 70,
                  "column": 8,
                  "position": 7668
                },
                "end": {
                  "line": 70,
                  "column": 15,
                  "position": 7675
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 76,
                  "column": 8,
                  "position": 7865
                },
                "end": {
                  "line": 76,
                  "column": 15,
                  "position": 7872
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 123,
                  "column": 8,
                  "position": 10179
                },
                "end": {
                  "line": 123,
                  "column": 15,
                  "position": 10186
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 129,
                  "column": 8,
                  "position": 10376
                },
                "end": {
                  "line": 129,
                  "column": 15,
                  "position": 10383
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 187,
                  "column": 10,
                  "position": 12616
                },
                "end": {
                  "line": 187,
                  "column": 17,
                  "position": 12623
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 193,
                  "column": 10,
                  "position": 12800
                },
                "end": {
                  "line": 193,
                  "column": 17,
                  "position": 12807
                }
              },
              "isWarning": true
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 303
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 116,
                      "column": 12,
                      "position": 9983
                    },
                    "end": {
                      "line": 116,
                      "column": 19,
                      "position": 9990
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 303
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 116,
                      "column": 12,
                      "position": 9983
                    },
                    "end": {
                      "line": 116,
                      "column": 19,
                      "position": 9990
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "/schemas/offer-certificate-dealer.json",
              "range": {
                "start": {
                  "line": 12,
                  "column": 4,
                  "position": 420
                },
                "end": {
                  "line": 12,
                  "column": 22,
                  "position": 438
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 14,
                  "column": 4,
                  "position": 534
                },
                "end": {
                  "line": 14,
                  "column": 15,
                  "position": 545
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 26,
                  "column": 8,
                  "position": 1219
                },
                "end": {
                  "line": 26,
                  "column": 15,
                  "position": 1226
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 41,
                  "column": 12,
                  "position": 4143
                },
                "end": {
                  "line": 41,
                  "column": 19,
                  "position": 4150
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 70,
                  "column": 8,
                  "position": 7668
                },
                "end": {
                  "line": 70,
                  "column": 15,
                  "position": 7675
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 76,
                  "column": 8,
                  "position": 7865
                },
                "end": {
                  "line": 76,
                  "column": 15,
                  "position": 7872
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 123,
                  "column": 8,
                  "position": 10179
                },
                "end": {
                  "line": 123,
                  "column": 15,
                  "position": 10186
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 129,
                  "column": 8,
                  "position": 10376
                },
                "end": {
                  "line": 129,
                  "column": 15,
                  "position": 10383
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 187,
                  "column": 10,
                  "position": 12616
                },
                "end": {
                  "line": 187,
                  "column": 17,
                  "position": 12623
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 193,
                  "column": 10,
                  "position": 12800
                },
                "end": {
                  "line": 193,
                  "column": 17,
                  "position": 12807
                }
              },
              "isWarning": true
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 303
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 116,
                      "column": 12,
                      "position": 9983
                    },
                    "end": {
                      "line": 116,
                      "column": 19,
                      "position": 9990
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 303
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 116,
                      "column": 12,
                      "position": 9983
                    },
                    "end": {
                      "line": 116,
                      "column": 19,
                      "position": 9990
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ]
        }
      ]
    },
    "api_33854_ver_36102": {
      "diff": [
        {
          "path": "/errors",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 31,
                  "column": 8,
                  "position": 1175
                },
                "end": {
                  "line": 31,
                  "column": 15,
                  "position": 1182
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip-not-found'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 51,
                  "column": 14,
                  "position": 2311
                },
                "end": {
                  "line": 51,
                  "column": 20,
                  "position": 2317
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 62,
                  "column": 10,
                  "position": 3006
                },
                "end": {
                  "line": 62,
                  "column": 17,
                  "position": 3013
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 138,
                  "column": 14,
                  "position": 11422
                },
                "end": {
                  "line": 138,
                  "column": 39,
                  "position": 11447
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 289,
                  "column": 8,
                  "position": 30424
                },
                "end": {
                  "line": 289,
                  "column": 15,
                  "position": 30431
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 298,
                  "column": 10,
                  "position": 30668
                },
                "end": {
                  "line": 298,
                  "column": 17,
                  "position": 30675
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 322,
                  "column": 12,
                  "position": 32110
                },
                "end": {
                  "line": 322,
                  "column": 19,
                  "position": 32117
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 328,
                  "column": 12,
                  "position": 32331
                },
                "end": {
                  "line": 328,
                  "column": 19,
                  "position": 32338
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 375,
                  "column": 8,
                  "position": 34843
                },
                "end": {
                  "line": 375,
                  "column": 15,
                  "position": 34850
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "common-schemas.raml",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 271
                },
                "end": {
                  "line": 5,
                  "column": 15,
                  "position": 282
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Unexpected value 'answers'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 8,
                      "column": 0,
                      "position": 237
                    },
                    "end": {
                      "line": 8,
                      "column": 7,
                      "position": 244
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 140
                },
                "end": {
                  "line": 47,
                  "column": 5,
                  "position": 1387
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "common-schemas.raml",
                  "range": {
                    "start": {
                      "line": 8,
                      "column": 4,
                      "position": 456
                    },
                    "end": {
                      "line": 8,
                      "column": 10,
                      "position": 462
                    }
                  },
                  "isWarning": true,
                  "trace": [
                    {
                      "code": "INVALID_JSON_SCHEMA_DETAILS",
                      "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                      "path": "api.raml",
                      "range": {
                        "start": {
                          "line": 8,
                          "column": 0,
                          "position": 237
                        },
                        "end": {
                          "line": 8,
                          "column": 7,
                          "position": 244
                        }
                      },
                      "isWarning": true
                    }
                  ]
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 16,
                  "position": 308
                },
                "end": {
                  "line": 25,
                  "column": 7,
                  "position": 828
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "common-schemas.raml",
                  "range": {
                    "start": {
                      "line": 11,
                      "column": 4,
                      "position": 621
                    },
                    "end": {
                      "line": 11,
                      "column": 7,
                      "position": 624
                    }
                  },
                  "isWarning": true,
                  "trace": [
                    {
                      "code": "INVALID_JSON_SCHEMA_DETAILS",
                      "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                      "path": "api.raml",
                      "range": {
                        "start": {
                          "line": 8,
                          "column": 0,
                          "position": 237
                        },
                        "end": {
                          "line": 8,
                          "column": 7,
                          "position": 244
                        }
                      },
                      "isWarning": true
                    }
                  ]
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "/schemas/offer-certificate-dealer.json",
              "range": {
                "start": {
                  "line": 3,
                  "column": 4,
                  "position": 157
                },
                "end": {
                  "line": 3,
                  "column": 22,
                  "position": 175
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CAN_NOT_PARSE_JSON",
                  "message": "Can not parse JSON example: Unexpected end of JSON input",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 8,
                      "column": 0,
                      "position": 237
                    },
                    "end": {
                      "line": 8,
                      "column": 7,
                      "position": 244
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 31,
                  "column": 8,
                  "position": 1175
                },
                "end": {
                  "line": 31,
                  "column": 15,
                  "position": 1182
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip-not-found'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 51,
                  "column": 14,
                  "position": 2311
                },
                "end": {
                  "line": 51,
                  "column": 20,
                  "position": 2317
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 62,
                  "column": 10,
                  "position": 3006
                },
                "end": {
                  "line": 62,
                  "column": 17,
                  "position": 3013
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 138,
                  "column": 14,
                  "position": 11422
                },
                "end": {
                  "line": 138,
                  "column": 39,
                  "position": 11447
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 289,
                  "column": 8,
                  "position": 30424
                },
                "end": {
                  "line": 289,
                  "column": 15,
                  "position": 30431
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 298,
                  "column": 10,
                  "position": 30668
                },
                "end": {
                  "line": 298,
                  "column": 17,
                  "position": 30675
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 322,
                  "column": 12,
                  "position": 32110
                },
                "end": {
                  "line": 322,
                  "column": 19,
                  "position": 32117
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 328,
                  "column": 12,
                  "position": 32331
                },
                "end": {
                  "line": 328,
                  "column": 19,
                  "position": 32338
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 375,
                  "column": 8,
                  "position": 34843
                },
                "end": {
                  "line": 375,
                  "column": 15,
                  "position": 34850
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "common-schemas.raml",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 271
                },
                "end": {
                  "line": 5,
                  "column": 15,
                  "position": 282
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Unexpected value 'answers'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 8,
                      "column": 0,
                      "position": 237
                    },
                    "end": {
                      "line": 8,
                      "column": 7,
                      "position": 244
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 140
                },
                "end": {
                  "line": 47,
                  "column": 5,
                  "position": 1387
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "common-schemas.raml",
                  "range": {
                    "start": {
                      "line": 8,
                      "column": 4,
                      "position": 456
                    },
                    "end": {
                      "line": 8,
                      "column": 10,
                      "position": 462
                    }
                  },
                  "isWarning": true,
                  "trace": [
                    {
                      "code": "INVALID_JSON_SCHEMA_DETAILS",
                      "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                      "path": "api.raml",
                      "range": {
                        "start": {
                          "line": 8,
                          "column": 0,
                          "position": 237
                        },
                        "end": {
                          "line": 8,
                          "column": 7,
                          "position": 244
                        }
                      },
                      "isWarning": true
                    }
                  ]
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 16,
                  "position": 308
                },
                "end": {
                  "line": 25,
                  "column": 7,
                  "position": 828
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "common-schemas.raml",
                  "range": {
                    "start": {
                      "line": 11,
                      "column": 4,
                      "position": 621
                    },
                    "end": {
                      "line": 11,
                      "column": 7,
                      "position": 624
                    }
                  },
                  "isWarning": true,
                  "trace": [
                    {
                      "code": "INVALID_JSON_SCHEMA_DETAILS",
                      "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                      "path": "api.raml",
                      "range": {
                        "start": {
                          "line": 8,
                          "column": 0,
                          "position": 237
                        },
                        "end": {
                          "line": 8,
                          "column": 7,
                          "position": 244
                        }
                      },
                      "isWarning": true
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "api_33854_ver_36332": {
      "diff": [
        {
          "path": "/specification/resources[7]/resources[0]/methods[0]/responses/301/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "/create-resubmission-wip",
              "repeat": false,
              "description": "/create-resubmission-wip",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Location": {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "/create-resubmission-wip",
              "repeat": false,
              "description": "/create-resubmission-wip",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        },
        {
          "path": "/errors",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 14,
                  "column": 4,
                  "position": 517
                },
                "end": {
                  "line": 14,
                  "column": 15,
                  "position": 528
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 42,
                  "column": 8,
                  "position": 1600
                },
                "end": {
                  "line": 42,
                  "column": 15,
                  "position": 1607
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 67,
                  "column": 8,
                  "position": 2673
                },
                "end": {
                  "line": 67,
                  "column": 15,
                  "position": 2680
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 83,
                  "column": 14,
                  "position": 3672
                },
                "end": {
                  "line": 83,
                  "column": 21,
                  "position": 3679
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip-not-found'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 88,
                  "column": 14,
                  "position": 3854
                },
                "end": {
                  "line": 88,
                  "column": 20,
                  "position": 3860
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 99,
                  "column": 8,
                  "position": 4165
                },
                "end": {
                  "line": 99,
                  "column": 15,
                  "position": 4172
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 122,
                  "column": 14,
                  "position": 5676
                },
                "end": {
                  "line": 122,
                  "column": 21,
                  "position": 5683
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 142,
                  "column": 12,
                  "position": 6637
                },
                "end": {
                  "line": 142,
                  "column": 37,
                  "position": 6662
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 191,
                  "column": 8,
                  "position": 11658
                },
                "end": {
                  "line": 191,
                  "column": 15,
                  "position": 11665
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Reference has not been resolved during compilation: /schemas/offer-certificate-dealer.json",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 206,
                  "column": 12,
                  "position": 14582
                },
                "end": {
                  "line": 206,
                  "column": 19,
                  "position": 14589
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 235,
                  "column": 8,
                  "position": 18107
                },
                "end": {
                  "line": 235,
                  "column": 15,
                  "position": 18114
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 241,
                  "column": 8,
                  "position": 18304
                },
                "end": {
                  "line": 241,
                  "column": 15,
                  "position": 18311
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 289,
                  "column": 8,
                  "position": 20657
                },
                "end": {
                  "line": 289,
                  "column": 15,
                  "position": 20664
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 295,
                  "column": 8,
                  "position": 20854
                },
                "end": {
                  "line": 295,
                  "column": 15,
                  "position": 20861
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 355,
                  "column": 8,
                  "position": 23237
                },
                "end": {
                  "line": 355,
                  "column": 15,
                  "position": 23244
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 361,
                  "column": 8,
                  "position": 23409
                },
                "end": {
                  "line": 361,
                  "column": 15,
                  "position": 23416
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 487,
                  "column": 8,
                  "position": 38773
                },
                "end": {
                  "line": 487,
                  "column": 15,
                  "position": 38780
                }
              },
              "isWarning": true
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type object",
              "path": "examples/qdocument/404.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "position": 38
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type object",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 178,
                      "column": 14,
                      "position": 10969
                    },
                    "end": {
                      "line": 178,
                      "column": 21,
                      "position": 10976
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 6,
                  "column": 4,
                  "position": 141
                },
                "end": {
                  "line": 6,
                  "column": 23,
                  "position": 160
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 7,
                  "column": 4,
                  "position": 167
                },
                "end": {
                  "line": 7,
                  "column": 16,
                  "position": 179
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 8,
                  "column": 4,
                  "position": 186
                },
                "end": {
                  "line": 8,
                  "column": 24,
                  "position": 206
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 4,
                  "position": 213
                },
                "end": {
                  "line": 9,
                  "column": 20,
                  "position": 229
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 11,
                  "column": 4,
                  "position": 256
                },
                "end": {
                  "line": 11,
                  "column": 25,
                  "position": 277
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 281,
                      "column": 12,
                      "position": 20422
                    },
                    "end": {
                      "line": 281,
                      "column": 19,
                      "position": 20429
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 281,
                      "column": 12,
                      "position": 20422
                    },
                    "end": {
                      "line": 281,
                      "column": 19,
                      "position": 20429
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 140
                },
                "end": {
                  "line": 47,
                  "column": 5,
                  "position": 1387
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 17,
                      "column": 4,
                      "position": 702
                    },
                    "end": {
                      "line": 17,
                      "column": 10,
                      "position": 708
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 16,
                  "position": 308
                },
                "end": {
                  "line": 25,
                  "column": 7,
                  "position": 828
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 20,
                      "column": 4,
                      "position": 867
                    },
                    "end": {
                      "line": 20,
                      "column": 7,
                      "position": 870
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "/schemas/offer-certificate-dealer.json",
              "range": {
                "start": {
                  "line": 12,
                  "column": 4,
                  "position": 403
                },
                "end": {
                  "line": 12,
                  "column": 22,
                  "position": 421
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 14,
                  "column": 4,
                  "position": 517
                },
                "end": {
                  "line": 14,
                  "column": 15,
                  "position": 528
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 42,
                  "column": 8,
                  "position": 1600
                },
                "end": {
                  "line": 42,
                  "column": 15,
                  "position": 1607
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 67,
                  "column": 8,
                  "position": 2673
                },
                "end": {
                  "line": 67,
                  "column": 15,
                  "position": 2680
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 83,
                  "column": 14,
                  "position": 3672
                },
                "end": {
                  "line": 83,
                  "column": 21,
                  "position": 3679
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip-not-found'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 88,
                  "column": 14,
                  "position": 3854
                },
                "end": {
                  "line": 88,
                  "column": 20,
                  "position": 3860
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 99,
                  "column": 8,
                  "position": 4165
                },
                "end": {
                  "line": 99,
                  "column": 15,
                  "position": 4172
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 122,
                  "column": 14,
                  "position": 5676
                },
                "end": {
                  "line": 122,
                  "column": 21,
                  "position": 5683
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 142,
                  "column": 12,
                  "position": 6637
                },
                "end": {
                  "line": 142,
                  "column": 37,
                  "position": 6662
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 191,
                  "column": 8,
                  "position": 11658
                },
                "end": {
                  "line": 191,
                  "column": 15,
                  "position": 11665
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 206,
                  "column": 12,
                  "position": 14582
                },
                "end": {
                  "line": 206,
                  "column": 19,
                  "position": 14589
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 235,
                  "column": 8,
                  "position": 18107
                },
                "end": {
                  "line": 235,
                  "column": 15,
                  "position": 18114
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 241,
                  "column": 8,
                  "position": 18304
                },
                "end": {
                  "line": 241,
                  "column": 15,
                  "position": 18311
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 289,
                  "column": 8,
                  "position": 20657
                },
                "end": {
                  "line": 289,
                  "column": 15,
                  "position": 20664
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 295,
                  "column": 8,
                  "position": 20854
                },
                "end": {
                  "line": 295,
                  "column": 15,
                  "position": 20861
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 355,
                  "column": 8,
                  "position": 23237
                },
                "end": {
                  "line": 355,
                  "column": 15,
                  "position": 23244
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 361,
                  "column": 8,
                  "position": 23409
                },
                "end": {
                  "line": 361,
                  "column": 15,
                  "position": 23416
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 487,
                  "column": 8,
                  "position": 38773
                },
                "end": {
                  "line": 487,
                  "column": 15,
                  "position": 38780
                }
              },
              "isWarning": true
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type object",
              "path": "examples/qdocument/404.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "position": 38
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type object",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 178,
                      "column": 14,
                      "position": 10969
                    },
                    "end": {
                      "line": 178,
                      "column": 21,
                      "position": 10976
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 6,
                  "column": 4,
                  "position": 141
                },
                "end": {
                  "line": 6,
                  "column": 23,
                  "position": 160
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 7,
                  "column": 4,
                  "position": 167
                },
                "end": {
                  "line": 7,
                  "column": 16,
                  "position": 179
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 8,
                  "column": 4,
                  "position": 186
                },
                "end": {
                  "line": 8,
                  "column": 24,
                  "position": 206
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 4,
                  "position": 213
                },
                "end": {
                  "line": 9,
                  "column": 20,
                  "position": 229
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 11,
                  "column": 4,
                  "position": 256
                },
                "end": {
                  "line": 11,
                  "column": 25,
                  "position": 277
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 281,
                      "column": 12,
                      "position": 20422
                    },
                    "end": {
                      "line": 281,
                      "column": 19,
                      "position": 20429
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 281,
                      "column": 12,
                      "position": 20422
                    },
                    "end": {
                      "line": 281,
                      "column": 19,
                      "position": 20429
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 140
                },
                "end": {
                  "line": 47,
                  "column": 5,
                  "position": 1387
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 17,
                      "column": 4,
                      "position": 702
                    },
                    "end": {
                      "line": 17,
                      "column": 10,
                      "position": 708
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 16,
                  "position": 308
                },
                "end": {
                  "line": 25,
                  "column": 7,
                  "position": 828
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 20,
                      "column": 4,
                      "position": 867
                    },
                    "end": {
                      "line": 20,
                      "column": 7,
                      "position": 870
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ]
        }
      ]
    },
    "api_33854_ver_41894": {
      "diff": [
        {
          "path": "/specification/resources[8]/resources[0]/methods[0]/responses/301/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "/create-resubmission-wip",
              "repeat": false,
              "description": "/create-resubmission-wip",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Location": {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "/create-resubmission-wip",
              "repeat": false,
              "description": "/create-resubmission-wip",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        },
        {
          "path": "/errors",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 15,
                  "column": 4,
                  "position": 560
                },
                "end": {
                  "line": 15,
                  "column": 15,
                  "position": 571
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Cannot tokenize symbol 'c'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 43,
                  "column": 18,
                  "position": 1492
                },
                "end": {
                  "line": 43,
                  "column": 19,
                  "position": 1493
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 69,
                  "column": 8,
                  "position": 2359
                },
                "end": {
                  "line": 69,
                  "column": 15,
                  "position": 2366
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 94,
                  "column": 8,
                  "position": 3432
                },
                "end": {
                  "line": 94,
                  "column": 15,
                  "position": 3439
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 110,
                  "column": 14,
                  "position": 4431
                },
                "end": {
                  "line": 110,
                  "column": 21,
                  "position": 4438
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip-not-found'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 115,
                  "column": 14,
                  "position": 4613
                },
                "end": {
                  "line": 115,
                  "column": 20,
                  "position": 4619
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 126,
                  "column": 8,
                  "position": 4924
                },
                "end": {
                  "line": 126,
                  "column": 15,
                  "position": 4931
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 149,
                  "column": 14,
                  "position": 6435
                },
                "end": {
                  "line": 149,
                  "column": 21,
                  "position": 6442
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 169,
                  "column": 12,
                  "position": 7396
                },
                "end": {
                  "line": 169,
                  "column": 37,
                  "position": 7421
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 218,
                  "column": 8,
                  "position": 12417
                },
                "end": {
                  "line": 218,
                  "column": 15,
                  "position": 12424
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 262,
                  "column": 8,
                  "position": 18866
                },
                "end": {
                  "line": 262,
                  "column": 15,
                  "position": 18873
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 268,
                  "column": 8,
                  "position": 19063
                },
                "end": {
                  "line": 268,
                  "column": 15,
                  "position": 19070
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 316,
                  "column": 8,
                  "position": 21416
                },
                "end": {
                  "line": 316,
                  "column": 15,
                  "position": 21423
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 322,
                  "column": 8,
                  "position": 21613
                },
                "end": {
                  "line": 322,
                  "column": 15,
                  "position": 21620
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 382,
                  "column": 8,
                  "position": 23996
                },
                "end": {
                  "line": 382,
                  "column": 15,
                  "position": 24003
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 388,
                  "column": 8,
                  "position": 24168
                },
                "end": {
                  "line": 388,
                  "column": 15,
                  "position": 24175
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 514,
                  "column": 8,
                  "position": 39532
                },
                "end": {
                  "line": 514,
                  "column": 15,
                  "position": 39539
                }
              },
              "isWarning": true
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type object",
              "path": "examples/qdocument/404.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "position": 38
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type object",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 205,
                      "column": 14,
                      "position": 11728
                    },
                    "end": {
                      "line": 205,
                      "column": 21,
                      "position": 11735
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 6,
                  "column": 4,
                  "position": 141
                },
                "end": {
                  "line": 6,
                  "column": 23,
                  "position": 160
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 7,
                  "column": 4,
                  "position": 167
                },
                "end": {
                  "line": 7,
                  "column": 16,
                  "position": 179
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 8,
                  "column": 4,
                  "position": 186
                },
                "end": {
                  "line": 8,
                  "column": 24,
                  "position": 206
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 4,
                  "position": 213
                },
                "end": {
                  "line": 9,
                  "column": 20,
                  "position": 229
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 11,
                  "column": 4,
                  "position": 256
                },
                "end": {
                  "line": 11,
                  "column": 25,
                  "position": 277
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 308,
                      "column": 12,
                      "position": 21181
                    },
                    "end": {
                      "line": 308,
                      "column": 19,
                      "position": 21188
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 308,
                      "column": 12,
                      "position": 21181
                    },
                    "end": {
                      "line": 308,
                      "column": 19,
                      "position": 21188
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
              "path": "examples/submit-wip/200-submit-wip-success.json",
              "range": {
                "start": {
                  "line": 23,
                  "column": 2,
                  "position": 777
                },
                "end": {
                  "line": 23,
                  "column": 17,
                  "position": 792
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CAN_NOT_PARSE_JSON",
                  "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 233,
                      "column": 12,
                      "position": 15341
                    },
                    "end": {
                      "line": 233,
                      "column": 19,
                      "position": 15348
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 140
                },
                "end": {
                  "line": 47,
                  "column": 5,
                  "position": 1387
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 18,
                      "column": 4,
                      "position": 745
                    },
                    "end": {
                      "line": 18,
                      "column": 10,
                      "position": 751
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 16,
                  "position": 308
                },
                "end": {
                  "line": 25,
                  "column": 7,
                  "position": 828
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 21,
                      "column": 4,
                      "position": 910
                    },
                    "end": {
                      "line": 21,
                      "column": 7,
                      "position": 913
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "/schemas/offer-certificate-dealer.json",
              "range": {
                "start": {
                  "line": 13,
                  "column": 4,
                  "position": 446
                },
                "end": {
                  "line": 13,
                  "column": 22,
                  "position": 464
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 15,
                  "column": 4,
                  "position": 560
                },
                "end": {
                  "line": 15,
                  "column": 15,
                  "position": 571
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Cannot tokenize symbol 'c'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 43,
                  "column": 18,
                  "position": 1492
                },
                "end": {
                  "line": 43,
                  "column": 19,
                  "position": 1493
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 69,
                  "column": 8,
                  "position": 2359
                },
                "end": {
                  "line": 69,
                  "column": 15,
                  "position": 2366
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 94,
                  "column": 8,
                  "position": 3432
                },
                "end": {
                  "line": 94,
                  "column": 15,
                  "position": 3439
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 110,
                  "column": 14,
                  "position": 4431
                },
                "end": {
                  "line": 110,
                  "column": 21,
                  "position": 4438
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip-not-found'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 115,
                  "column": 14,
                  "position": 4613
                },
                "end": {
                  "line": 115,
                  "column": 20,
                  "position": 4619
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 126,
                  "column": 8,
                  "position": 4924
                },
                "end": {
                  "line": 126,
                  "column": 15,
                  "position": 4931
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 149,
                  "column": 14,
                  "position": 6435
                },
                "end": {
                  "line": 149,
                  "column": 21,
                  "position": 6442
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 169,
                  "column": 12,
                  "position": 7396
                },
                "end": {
                  "line": 169,
                  "column": 37,
                  "position": 7421
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 218,
                  "column": 8,
                  "position": 12417
                },
                "end": {
                  "line": 218,
                  "column": 15,
                  "position": 12424
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 262,
                  "column": 8,
                  "position": 18866
                },
                "end": {
                  "line": 262,
                  "column": 15,
                  "position": 18873
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 268,
                  "column": 8,
                  "position": 19063
                },
                "end": {
                  "line": 268,
                  "column": 15,
                  "position": 19070
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 316,
                  "column": 8,
                  "position": 21416
                },
                "end": {
                  "line": 316,
                  "column": 15,
                  "position": 21423
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 322,
                  "column": 8,
                  "position": 21613
                },
                "end": {
                  "line": 322,
                  "column": 15,
                  "position": 21620
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 382,
                  "column": 8,
                  "position": 23996
                },
                "end": {
                  "line": 382,
                  "column": 15,
                  "position": 24003
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 388,
                  "column": 8,
                  "position": 24168
                },
                "end": {
                  "line": 388,
                  "column": 15,
                  "position": 24175
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 514,
                  "column": 8,
                  "position": 39532
                },
                "end": {
                  "line": 514,
                  "column": 15,
                  "position": 39539
                }
              },
              "isWarning": true
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type object",
              "path": "examples/qdocument/404.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "position": 38
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type object",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 205,
                      "column": 14,
                      "position": 11728
                    },
                    "end": {
                      "line": 205,
                      "column": 21,
                      "position": 11735
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 6,
                  "column": 4,
                  "position": 141
                },
                "end": {
                  "line": 6,
                  "column": 23,
                  "position": 160
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 7,
                  "column": 4,
                  "position": 167
                },
                "end": {
                  "line": 7,
                  "column": 16,
                  "position": 179
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 8,
                  "column": 4,
                  "position": 186
                },
                "end": {
                  "line": 8,
                  "column": 24,
                  "position": 206
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 4,
                  "position": 213
                },
                "end": {
                  "line": 9,
                  "column": 20,
                  "position": 229
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 11,
                  "column": 4,
                  "position": 256
                },
                "end": {
                  "line": 11,
                  "column": 25,
                  "position": 277
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 308,
                      "column": 12,
                      "position": 21181
                    },
                    "end": {
                      "line": 308,
                      "column": 19,
                      "position": 21188
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 308,
                      "column": 12,
                      "position": 21181
                    },
                    "end": {
                      "line": 308,
                      "column": 19,
                      "position": 21188
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
              "path": "examples/submit-wip/200-submit-wip-success.json",
              "range": {
                "start": {
                  "line": 23,
                  "column": 2,
                  "position": 777
                },
                "end": {
                  "line": 23,
                  "column": 17,
                  "position": 792
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CAN_NOT_PARSE_JSON",
                  "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 233,
                      "column": 12,
                      "position": 15341
                    },
                    "end": {
                      "line": 233,
                      "column": 19,
                      "position": 15348
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 140
                },
                "end": {
                  "line": 47,
                  "column": 5,
                  "position": 1387
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 18,
                      "column": 4,
                      "position": 745
                    },
                    "end": {
                      "line": 18,
                      "column": 10,
                      "position": 751
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 16,
                  "position": 308
                },
                "end": {
                  "line": 25,
                  "column": 7,
                  "position": 828
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 21,
                      "column": 4,
                      "position": 910
                    },
                    "end": {
                      "line": 21,
                      "column": 7,
                      "position": 913
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ]
        }
      ]
    },
    "api_33854_ver_70348": {
      "diff": [
        {
          "path": "/specification/resources[8]/resources[0]/methods[0]/responses/301/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "/create-resubmission-wip",
              "repeat": false,
              "description": "/create-resubmission-wip",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Location": {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "/create-resubmission-wip",
              "repeat": false,
              "description": "/create-resubmission-wip",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        },
        {
          "path": "/errors",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 15,
                  "column": 4,
                  "position": 560
                },
                "end": {
                  "line": 15,
                  "column": 15,
                  "position": 571
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 92,
                  "column": 8,
                  "position": 3833
                },
                "end": {
                  "line": 92,
                  "column": 15,
                  "position": 3840
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 108,
                  "column": 14,
                  "position": 4832
                },
                "end": {
                  "line": 108,
                  "column": 21,
                  "position": 4839
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip/404-not-found.json'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 113,
                  "column": 14,
                  "position": 5014
                },
                "end": {
                  "line": 113,
                  "column": 20,
                  "position": 5020
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 124,
                  "column": 8,
                  "position": 5334
                },
                "end": {
                  "line": 124,
                  "column": 15,
                  "position": 5341
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 147,
                  "column": 14,
                  "position": 6845
                },
                "end": {
                  "line": 147,
                  "column": 21,
                  "position": 6852
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 167,
                  "column": 12,
                  "position": 7806
                },
                "end": {
                  "line": 167,
                  "column": 37,
                  "position": 7831
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 216,
                  "column": 8,
                  "position": 12827
                },
                "end": {
                  "line": 216,
                  "column": 15,
                  "position": 12834
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 260,
                  "column": 8,
                  "position": 19276
                },
                "end": {
                  "line": 260,
                  "column": 15,
                  "position": 19283
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 266,
                  "column": 8,
                  "position": 19473
                },
                "end": {
                  "line": 266,
                  "column": 15,
                  "position": 19480
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 314,
                  "column": 8,
                  "position": 21826
                },
                "end": {
                  "line": 314,
                  "column": 15,
                  "position": 21833
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 320,
                  "column": 8,
                  "position": 22023
                },
                "end": {
                  "line": 320,
                  "column": 15,
                  "position": 22030
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z0-9]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 380,
                  "column": 8,
                  "position": 24406
                },
                "end": {
                  "line": 380,
                  "column": 15,
                  "position": 24413
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 386,
                  "column": 8,
                  "position": 24581
                },
                "end": {
                  "line": 386,
                  "column": 15,
                  "position": 24588
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z0-9]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 512,
                  "column": 8,
                  "position": 39931
                },
                "end": {
                  "line": 512,
                  "column": 15,
                  "position": 39938
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected token '\"reviewSummary\"'",
              "path": "examples/offer.json",
              "range": {
                "start": {
                  "line": 27,
                  "column": 4,
                  "position": 932
                },
                "end": {
                  "line": 27,
                  "column": 19,
                  "position": 947
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CAN_NOT_PARSE_JSON",
                  "message": "Can not parse JSON example: Unexpected token '\"reviewSummary\"'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 332,
                      "column": 12,
                      "position": 22745
                    },
                    "end": {
                      "line": 332,
                      "column": 19,
                      "position": 22752
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type object",
              "path": "examples/qdocument/404.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "position": 38
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type object",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 203,
                      "column": 14,
                      "position": 12138
                    },
                    "end": {
                      "line": 203,
                      "column": 21,
                      "position": 12145
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 6,
                  "column": 4,
                  "position": 141
                },
                "end": {
                  "line": 6,
                  "column": 23,
                  "position": 160
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 7,
                  "column": 4,
                  "position": 167
                },
                "end": {
                  "line": 7,
                  "column": 16,
                  "position": 179
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 8,
                  "column": 4,
                  "position": 186
                },
                "end": {
                  "line": 8,
                  "column": 24,
                  "position": 206
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 4,
                  "position": 213
                },
                "end": {
                  "line": 9,
                  "column": 20,
                  "position": 229
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 11,
                  "column": 4,
                  "position": 256
                },
                "end": {
                  "line": 11,
                  "column": 25,
                  "position": 277
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 306,
                      "column": 12,
                      "position": 21591
                    },
                    "end": {
                      "line": 306,
                      "column": 19,
                      "position": 21598
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 306,
                      "column": 12,
                      "position": 21591
                    },
                    "end": {
                      "line": 306,
                      "column": 19,
                      "position": 21598
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
              "path": "examples/submit-wip/200-submit-wip-success.json",
              "range": {
                "start": {
                  "line": 23,
                  "column": 2,
                  "position": 777
                },
                "end": {
                  "line": 23,
                  "column": 17,
                  "position": 792
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CAN_NOT_PARSE_JSON",
                  "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 231,
                      "column": 12,
                      "position": 15751
                    },
                    "end": {
                      "line": 231,
                      "column": 19,
                      "position": 15758
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 140
                },
                "end": {
                  "line": 47,
                  "column": 5,
                  "position": 1387
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 18,
                      "column": 4,
                      "position": 745
                    },
                    "end": {
                      "line": 18,
                      "column": 10,
                      "position": 751
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 16,
                  "position": 308
                },
                "end": {
                  "line": 25,
                  "column": 7,
                  "position": 828
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 21,
                      "column": 4,
                      "position": 910
                    },
                    "end": {
                      "line": 21,
                      "column": 7,
                      "position": 913
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "/schemas/offer-certificate-dealer.json",
              "range": {
                "start": {
                  "line": 13,
                  "column": 4,
                  "position": 446
                },
                "end": {
                  "line": 13,
                  "column": 22,
                  "position": 464
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 15,
                  "column": 4,
                  "position": 560
                },
                "end": {
                  "line": 15,
                  "column": 15,
                  "position": 571
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 92,
                  "column": 8,
                  "position": 3833
                },
                "end": {
                  "line": 92,
                  "column": 15,
                  "position": 3840
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 108,
                  "column": 14,
                  "position": 4832
                },
                "end": {
                  "line": 108,
                  "column": 21,
                  "position": 4839
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip/404-not-found.json'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 113,
                  "column": 14,
                  "position": 5014
                },
                "end": {
                  "line": 113,
                  "column": 20,
                  "position": 5020
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 124,
                  "column": 8,
                  "position": 5334
                },
                "end": {
                  "line": 124,
                  "column": 15,
                  "position": 5341
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 147,
                  "column": 14,
                  "position": 6845
                },
                "end": {
                  "line": 147,
                  "column": 21,
                  "position": 6852
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 167,
                  "column": 12,
                  "position": 7806
                },
                "end": {
                  "line": 167,
                  "column": 37,
                  "position": 7831
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 216,
                  "column": 8,
                  "position": 12827
                },
                "end": {
                  "line": 216,
                  "column": 15,
                  "position": 12834
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 260,
                  "column": 8,
                  "position": 19276
                },
                "end": {
                  "line": 260,
                  "column": 15,
                  "position": 19283
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 266,
                  "column": 8,
                  "position": 19473
                },
                "end": {
                  "line": 266,
                  "column": 15,
                  "position": 19480
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 314,
                  "column": 8,
                  "position": 21826
                },
                "end": {
                  "line": 314,
                  "column": 15,
                  "position": 21833
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 320,
                  "column": 8,
                  "position": 22023
                },
                "end": {
                  "line": 320,
                  "column": 15,
                  "position": 22030
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z0-9]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 380,
                  "column": 8,
                  "position": 24406
                },
                "end": {
                  "line": 380,
                  "column": 15,
                  "position": 24413
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 386,
                  "column": 8,
                  "position": 24581
                },
                "end": {
                  "line": 386,
                  "column": 15,
                  "position": 24588
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z0-9]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 512,
                  "column": 8,
                  "position": 39931
                },
                "end": {
                  "line": 512,
                  "column": 15,
                  "position": 39938
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected token '\"reviewSummary\"'",
              "path": "examples/offer.json",
              "range": {
                "start": {
                  "line": 27,
                  "column": 4,
                  "position": 932
                },
                "end": {
                  "line": 27,
                  "column": 19,
                  "position": 947
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CAN_NOT_PARSE_JSON",
                  "message": "Can not parse JSON example: Unexpected token '\"reviewSummary\"'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 332,
                      "column": 12,
                      "position": 22745
                    },
                    "end": {
                      "line": 332,
                      "column": 19,
                      "position": 22752
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type object",
              "path": "examples/qdocument/404.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "position": 38
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type object",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 203,
                      "column": 14,
                      "position": 12138
                    },
                    "end": {
                      "line": 203,
                      "column": 21,
                      "position": 12145
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 6,
                  "column": 4,
                  "position": 141
                },
                "end": {
                  "line": 6,
                  "column": 23,
                  "position": 160
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 7,
                  "column": 4,
                  "position": 167
                },
                "end": {
                  "line": 7,
                  "column": 16,
                  "position": 179
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 8,
                  "column": 4,
                  "position": 186
                },
                "end": {
                  "line": 8,
                  "column": 24,
                  "position": 206
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 4,
                  "position": 213
                },
                "end": {
                  "line": 9,
                  "column": 20,
                  "position": 229
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 11,
                  "column": 4,
                  "position": 256
                },
                "end": {
                  "line": 11,
                  "column": 25,
                  "position": 277
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 306,
                      "column": 12,
                      "position": 21591
                    },
                    "end": {
                      "line": 306,
                      "column": 19,
                      "position": 21598
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 306,
                      "column": 12,
                      "position": 21591
                    },
                    "end": {
                      "line": 306,
                      "column": 19,
                      "position": 21598
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
              "path": "examples/submit-wip/200-submit-wip-success.json",
              "range": {
                "start": {
                  "line": 23,
                  "column": 2,
                  "position": 777
                },
                "end": {
                  "line": 23,
                  "column": 17,
                  "position": 792
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CAN_NOT_PARSE_JSON",
                  "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 231,
                      "column": 12,
                      "position": 15751
                    },
                    "end": {
                      "line": 231,
                      "column": 19,
                      "position": 15758
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 140
                },
                "end": {
                  "line": 47,
                  "column": 5,
                  "position": 1387
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 18,
                      "column": 4,
                      "position": 745
                    },
                    "end": {
                      "line": 18,
                      "column": 10,
                      "position": 751
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 16,
                  "position": 308
                },
                "end": {
                  "line": 25,
                  "column": 7,
                  "position": 828
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 21,
                      "column": 4,
                      "position": 910
                    },
                    "end": {
                      "line": 21,
                      "column": 7,
                      "position": 913
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ]
        }
      ]
    }
  },
  "org_09396371-2cd4-412e-8d08-4356dd3e7bfc": {
    "api_73440_ver_76451": {
      "oldParserErrors": "cannot read /samples/supervisions-default.json (Error: ENOENT, open '/samples/supervisions-default.json')",
      "mastrerParserErrors": "none",
      "inspectedParserErrors": "none"
    }
  },
  "org_0974bf2a-5249-40cf-ad66-fb5ce92f147b": {
    "api_38726_ver_40415": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/resources[0]/resources[1]/methods[0]/responses/200/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "ElapesdTime",
              "displayName": "ElapesdTime",
              "type": "string",
              "required": false,
              "repeat": false,
              "description": "The elapesd time for producing the response.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "ElapesdTime": {
              "name": "ElapesdTime",
              "displayName": "ElapesdTime",
              "type": "string",
              "required": false,
              "repeat": false,
              "description": "The elapesd time for producing the response.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        }
      ]
    },
    "api_40169_ver_41664": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/resources[0]/resources[1]/methods[0]/responses/200/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "ElapesdTime",
              "displayName": "ElapesdTime",
              "type": "string",
              "required": false,
              "repeat": false,
              "description": "The elapesd time for producing the response.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "ElapesdTime": {
              "name": "ElapesdTime",
              "displayName": "ElapesdTime",
              "type": "string",
              "required": false,
              "repeat": false,
              "description": "The elapesd time for producing the response.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "org_09781b9d-d1e0-46a4-b682-7a792c8a9fc5": {
    "api_74696_ver_77810": {
      "diff": [
        {
          "path": "/specification/resources[4]/resources[3]/methods[0]/responses/200/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Access-Control-Allow-Origin",
              "displayName": "Access-Control-Allow-Origin",
              "type": "string",
              "required": false,
              "example": "",
              "repeat": false,
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Access-Control-Allow-Origin": {
              "name": "Access-Control-Allow-Origin",
              "displayName": "Access-Control-Allow-Origin",
              "type": "string",
              "required": false,
              "example": "",
              "repeat": false,
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "org_0a14e2fd-1cfe-4310-acbc-54bf93eb8420": {
    "api_35615_ver_37170": {
      "diff": [
        {
          "path": "/specification/resources[0]/methods[0]/responses/200/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "authorizedPermissionsResponse",
          "inspected": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"the object keys are namespace names\",\n  \"patternProperties\": {\n    \"^*+$\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"object\",\n        \"description\": \"an allowed permission\",\n        \"properties\": {\n          \"resource\": {\n            \"type\": \"string\",\n            \"description\": \"The fully substituted resource path\"\n          },\n          \"resource_template\": {\n            \"type\": \"string\",\n            \"description\": \"The resource path without context_parameters substituted\"\n          },\n          \"context_params\": {\n            \"type\": \"object\",\n            \"description\": \"placeholder values for the resource template\",\n            \"patternProperties\": {\n              \"^*+$\": {\n                \"type\": \"string\",\n                \"description\": \"value of context parameter\"\n              }\n            }\n          },\n          \"actions\": {\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"uniqueItems\": true,\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"names of allowed actions\"\n            }\n          }\n        },\n        \"required\": [\"resource\", \"resource_template\", \"context_params\", \"actions\"]\n      }\n    }\n  }\n}\n"
        },
        {
          "path": "/specification/resources[0]/methods[0]/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "authorizedPermissionsQuery",
          "inspected": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"namespaces\": {\n      \"type\": \"array\",\n      \"description\": \"resource namespace(s) to include in the evaluation of permissions. If multiple namespaces are included, permissions on resources that match any of the namespaces will be included.\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"the resource name\"\n      }\n    },\n    \"actions\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"action(s) to include in the response. if multiple actions are included, permissions on resources that match any of the actions will be included.\"\n      }\n    },\n    \"context_params\": {\n      \"type\": \"object\",\n      \"description\": \"context parameters to filter resources. Multiple context parameters are ANDed together\",\n      \"patternProperties\": {\n        \"^*+$\": {\n          \"type\": \"string\",\n          \"description\": \"value of context parameter\"\n        }\n      }\n    }\n  },\n  \"required\": []\n}\n"
        },
        {
          "path": "/specification/resources[1]/methods[0]/responses/200/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "authorizedPermissionsResponse",
          "inspected": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"the object keys are namespace names\",\n  \"patternProperties\": {\n    \"^*+$\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"object\",\n        \"description\": \"an allowed permission\",\n        \"properties\": {\n          \"resource\": {\n            \"type\": \"string\",\n            \"description\": \"The fully substituted resource path\"\n          },\n          \"resource_template\": {\n            \"type\": \"string\",\n            \"description\": \"The resource path without context_parameters substituted\"\n          },\n          \"context_params\": {\n            \"type\": \"object\",\n            \"description\": \"placeholder values for the resource template\",\n            \"patternProperties\": {\n              \"^*+$\": {\n                \"type\": \"string\",\n                \"description\": \"value of context parameter\"\n              }\n            }\n          },\n          \"actions\": {\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"uniqueItems\": true,\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"names of allowed actions\"\n            }\n          }\n        },\n        \"required\": [\"resource\", \"resource_template\", \"context_params\", \"actions\"]\n      }\n    }\n  }\n}\n"
        },
        {
          "path": "/specification/resources[1]/methods[0]/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "authorizedPermissionsQuery",
          "inspected": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"namespaces\": {\n      \"type\": \"array\",\n      \"description\": \"resource namespace(s) to include in the evaluation of permissions. If multiple namespaces are included, permissions on resources that match any of the namespaces will be included.\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"the resource name\"\n      }\n    },\n    \"actions\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"action(s) to include in the response. if multiple actions are included, permissions on resources that match any of the actions will be included.\"\n      }\n    },\n    \"context_params\": {\n      \"type\": \"object\",\n      \"description\": \"context parameters to filter resources. Multiple context parameters are ANDed together\",\n      \"patternProperties\": {\n        \"^*+$\": {\n          \"type\": \"string\",\n          \"description\": \"value of context parameter\"\n        }\n      }\n    }\n  },\n  \"required\": []\n}\n"
        },
        {
          "path": "/specification/resources[2]/methods[0]/responses/200/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "authorizedPermissionsResponse",
          "inspected": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"the object keys are namespace names\",\n  \"patternProperties\": {\n    \"^*+$\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"object\",\n        \"description\": \"an allowed permission\",\n        \"properties\": {\n          \"resource\": {\n            \"type\": \"string\",\n            \"description\": \"The fully substituted resource path\"\n          },\n          \"resource_template\": {\n            \"type\": \"string\",\n            \"description\": \"The resource path without context_parameters substituted\"\n          },\n          \"context_params\": {\n            \"type\": \"object\",\n            \"description\": \"placeholder values for the resource template\",\n            \"patternProperties\": {\n              \"^*+$\": {\n                \"type\": \"string\",\n                \"description\": \"value of context parameter\"\n              }\n            }\n          },\n          \"actions\": {\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"uniqueItems\": true,\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"names of allowed actions\"\n            }\n          }\n        },\n        \"required\": [\"resource\", \"resource_template\", \"context_params\", \"actions\"]\n      }\n    }\n  }\n}\n"
        },
        {
          "path": "/specification/resources[2]/methods[0]/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "authorizedPermissionsQuery",
          "inspected": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"namespaces\": {\n      \"type\": \"array\",\n      \"description\": \"resource namespace(s) to include in the evaluation of permissions. If multiple namespaces are included, permissions on resources that match any of the namespaces will be included.\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"the resource name\"\n      }\n    },\n    \"actions\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"action(s) to include in the response. if multiple actions are included, permissions on resources that match any of the actions will be included.\"\n      }\n    },\n    \"context_params\": {\n      \"type\": \"object\",\n      \"description\": \"context parameters to filter resources. Multiple context parameters are ANDed together\",\n      \"patternProperties\": {\n        \"^*+$\": {\n          \"type\": \"string\",\n          \"description\": \"value of context parameter\"\n        }\n      }\n    }\n  },\n  \"required\": []\n}\n"
        },
        {
          "path": "/specification/resources[3]/methods[0]/responses/200/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "authorizedPermissionsResponse",
          "inspected": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"the object keys are namespace names\",\n  \"patternProperties\": {\n    \"^*+$\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"object\",\n        \"description\": \"an allowed permission\",\n        \"properties\": {\n          \"resource\": {\n            \"type\": \"string\",\n            \"description\": \"The fully substituted resource path\"\n          },\n          \"resource_template\": {\n            \"type\": \"string\",\n            \"description\": \"The resource path without context_parameters substituted\"\n          },\n          \"context_params\": {\n            \"type\": \"object\",\n            \"description\": \"placeholder values for the resource template\",\n            \"patternProperties\": {\n              \"^*+$\": {\n                \"type\": \"string\",\n                \"description\": \"value of context parameter\"\n              }\n            }\n          },\n          \"actions\": {\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"uniqueItems\": true,\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"names of allowed actions\"\n            }\n          }\n        },\n        \"required\": [\"resource\", \"resource_template\", \"context_params\", \"actions\"]\n      }\n    }\n  }\n}\n"
        },
        {
          "path": "/specification/resources[3]/methods[0]/body/application/json/schemaContent",
          "comment": "Inequal values",
          "master": "authorizedPermissionsQuery",
          "inspected": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"namespaces\": {\n      \"type\": \"array\",\n      \"description\": \"resource namespace(s) to include in the evaluation of permissions. If multiple namespaces are included, permissions on resources that match any of the namespaces will be included.\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"the resource name\"\n      }\n    },\n    \"actions\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"action(s) to include in the response. if multiple actions are included, permissions on resources that match any of the actions will be included.\"\n      }\n    },\n    \"context_params\": {\n      \"type\": \"object\",\n      \"description\": \"context parameters to filter resources. Multiple context parameters are ANDed together\",\n      \"patternProperties\": {\n        \"^*+$\": {\n          \"type\": \"string\",\n          \"description\": \"value of context parameter\"\n        }\n      }\n    }\n  },\n  \"required\": []\n}\n"
        },
        {
          "path": "/specification/schemas",
          "comment": "Defined/undefined mismatch",
          "inspected": [
            {
              "authorizedPermissionsQuery": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"namespaces\": {\n      \"type\": \"array\",\n      \"description\": \"resource namespace(s) to include in the evaluation of permissions. If multiple namespaces are included, permissions on resources that match any of the namespaces will be included.\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"the resource name\"\n      }\n    },\n    \"actions\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"action(s) to include in the response. if multiple actions are included, permissions on resources that match any of the actions will be included.\"\n      }\n    },\n    \"context_params\": {\n      \"type\": \"object\",\n      \"description\": \"context parameters to filter resources. Multiple context parameters are ANDed together\",\n      \"patternProperties\": {\n        \"^*+$\": {\n          \"type\": \"string\",\n          \"description\": \"value of context parameter\"\n        }\n      }\n    }\n  },\n  \"required\": []\n}\n"
            },
            {
              "authorizedPermissionsResponse": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"description\": \"the object keys are namespace names\",\n  \"patternProperties\": {\n    \"^*+$\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"object\",\n        \"description\": \"an allowed permission\",\n        \"properties\": {\n          \"resource\": {\n            \"type\": \"string\",\n            \"description\": \"The fully substituted resource path\"\n          },\n          \"resource_template\": {\n            \"type\": \"string\",\n            \"description\": \"The resource path without context_parameters substituted\"\n          },\n          \"context_params\": {\n            \"type\": \"object\",\n            \"description\": \"placeholder values for the resource template\",\n            \"patternProperties\": {\n              \"^*+$\": {\n                \"type\": \"string\",\n                \"description\": \"value of context parameter\"\n              }\n            }\n          },\n          \"actions\": {\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"uniqueItems\": true,\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"names of allowed actions\"\n            }\n          }\n        },\n        \"required\": [\"resource\", \"resource_template\", \"context_params\", \"actions\"]\n      }\n    }\n  }\n}\n"
            }
          ]
        },
        {
          "path": "/errors",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "UNKNOWN_NODE",
              "message": "Unknown node: ''",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 89
                },
                "end": {
                  "line": 90,
                  "column": 0,
                  "position": 3164
                }
              }
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'authorizedPermissionsQuery'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 99,
                  "column": 8,
                  "position": 3424
                },
                "end": {
                  "line": 99,
                  "column": 14,
                  "position": 3430
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'authorizedPermissionsResponse'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 104,
                  "column": 12,
                  "position": 3539
                },
                "end": {
                  "line": 104,
                  "column": 18,
                  "position": 3545
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'authorizedPermissionsQuery'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 114,
                  "column": 8,
                  "position": 3837
                },
                "end": {
                  "line": 114,
                  "column": 14,
                  "position": 3843
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'authorizedPermissionsResponse'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 119,
                  "column": 12,
                  "position": 3952
                },
                "end": {
                  "line": 119,
                  "column": 18,
                  "position": 3958
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'authorizedPermissionsQuery'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 131,
                  "column": 8,
                  "position": 4346
                },
                "end": {
                  "line": 131,
                  "column": 14,
                  "position": 4352
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'authorizedPermissionsResponse'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 136,
                  "column": 12,
                  "position": 4461
                },
                "end": {
                  "line": 136,
                  "column": 18,
                  "position": 4467
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'authorizedPermissionsQuery'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 148,
                  "column": 8,
                  "position": 4857
                },
                "end": {
                  "line": 148,
                  "column": 14,
                  "position": 4863
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'authorizedPermissionsResponse'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 153,
                  "column": 12,
                  "position": 4972
                },
                "end": {
                  "line": 153,
                  "column": 18,
                  "position": 4978
                }
              },
              "isWarning": true
            }
          ],
          "inspected": [
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 6,
                  "column": 6,
                  "position": 125
                },
                "end": {
                  "line": 42,
                  "column": 7,
                  "position": 1504
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'patternProperties' is not a valid RegExp pattern: ^*+$",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 44,
                  "column": 6,
                  "position": 1548
                },
                "end": {
                  "line": 89,
                  "column": 7,
                  "position": 3163
                }
              },
              "isWarning": true
            }
          ]
        }
      ],
      "oldParserErrors": "none",
      "mastrerParserErrors": [
        {
          "code": "UNKNOWN_NODE",
          "message": "Unknown node: ''",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 5,
              "column": 4,
              "position": 89
            },
            "end": {
              "line": 90,
              "column": 0,
              "position": 3164
            }
          }
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'authorizedPermissionsQuery'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 99,
              "column": 8,
              "position": 3424
            },
            "end": {
              "line": 99,
              "column": 14,
              "position": 3430
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'authorizedPermissionsResponse'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 104,
              "column": 12,
              "position": 3539
            },
            "end": {
              "line": 104,
              "column": 18,
              "position": 3545
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'authorizedPermissionsQuery'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 114,
              "column": 8,
              "position": 3837
            },
            "end": {
              "line": 114,
              "column": 14,
              "position": 3843
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'authorizedPermissionsResponse'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 119,
              "column": 12,
              "position": 3952
            },
            "end": {
              "line": 119,
              "column": 18,
              "position": 3958
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'authorizedPermissionsQuery'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 131,
              "column": 8,
              "position": 4346
            },
            "end": {
              "line": 131,
              "column": 14,
              "position": 4352
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'authorizedPermissionsResponse'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 136,
              "column": 12,
              "position": 4461
            },
            "end": {
              "line": 136,
              "column": 18,
              "position": 4467
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'authorizedPermissionsQuery'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 148,
              "column": 8,
              "position": 4857
            },
            "end": {
              "line": 148,
              "column": 14,
              "position": 4863
            }
          },
          "isWarning": true
        },
        {
          "code": "UNRECOGNIZED_ELEMENT",
          "message": "Unrecognized schema: 'authorizedPermissionsResponse'.",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 153,
              "column": 12,
              "position": 4972
            },
            "end": {
              "line": 153,
              "column": 18,
              "position": 4978
            }
          },
          "isWarning": true
        }
      ]
    }
  },
  "org_0a5f80b0-fa11-4ca0-a8a6-8700b134b3b2": {
    "api_19320_ver_20630": {
      "diff": [
        {
          "path": "/specification/traits[2]/licenseLimitEnforcement/responses/200/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "X-License-Limit-Limit",
              "displayName": "X-License-Limit-Limit",
              "type": "integer",
              "required": false,
              "example": "100",
              "repeat": false,
              "description": "Maximum number of calls allowed per license entitlement.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            {
              "name": "X-License-Limit-Remaining",
              "displayName": "X-License-Limit-Remaining",
              "type": "integer",
              "required": false,
              "example": "97",
              "repeat": false,
              "description": "Number of calls allowed before the license enforcement.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            {
              "name": "X-License-Limit-Reset",
              "displayName": "X-License-Limit-Reset",
              "type": "integer",
              "required": false,
              "example": "9624",
              "repeat": false,
              "description": "Number of seconds before the license enforcement period is reset.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "X-License-Limit-Limit": {
              "name": "X-License-Limit-Limit",
              "displayName": "X-License-Limit-Limit",
              "type": "integer",
              "required": false,
              "example": "100",
              "repeat": false,
              "description": "Maximum number of calls allowed per license entitlement.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            "X-License-Limit-Remaining": {
              "name": "X-License-Limit-Remaining",
              "displayName": "X-License-Limit-Remaining",
              "type": "integer",
              "required": false,
              "example": "97",
              "repeat": false,
              "description": "Number of calls allowed before the license enforcement.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            "X-License-Limit-Reset": {
              "name": "X-License-Limit-Reset",
              "displayName": "X-License-Limit-Reset",
              "type": "integer",
              "required": false,
              "example": "9624",
              "repeat": false,
              "description": "Number of seconds before the license enforcement period is reset.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        },
        {
          "path": "/specification/traits[2]/licenseLimitEnforcement/responses/403/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "X-License-Limit-Limit",
              "displayName": "X-License-Limit-Limit",
              "type": "integer",
              "required": false,
              "example": "100",
              "repeat": false,
              "description": "Maximum number of calls allowed per license entitlement.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            {
              "name": "X-License-Limit-Remaining",
              "displayName": "X-License-Limit-Remaining",
              "type": "integer",
              "required": false,
              "example": "97",
              "repeat": false,
              "description": "Number of calls allowed before the license enforcement.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            {
              "name": "X-License-Limit-Reset",
              "displayName": "X-License-Limit-Reset",
              "type": "integer",
              "required": false,
              "example": "9624",
              "repeat": false,
              "description": "Number of seconds before the license enforcement period is reset.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "X-License-Limit-Limit": {
              "name": "X-License-Limit-Limit",
              "displayName": "X-License-Limit-Limit",
              "type": "integer",
              "required": false,
              "example": "100",
              "repeat": false,
              "description": "Maximum number of calls allowed per license entitlement.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            "X-License-Limit-Remaining": {
              "name": "X-License-Limit-Remaining",
              "displayName": "X-License-Limit-Remaining",
              "type": "integer",
              "required": false,
              "example": "97",
              "repeat": false,
              "description": "Number of calls allowed before the license enforcement.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            "X-License-Limit-Reset": {
              "name": "X-License-Limit-Reset",
              "displayName": "X-License-Limit-Reset",
              "type": "integer",
              "required": false,
              "example": "9624",
              "repeat": false,
              "description": "Number of seconds before the license enforcement period is reset.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        },
        {
          "path": "/specification/traits[2]/licenseLimitEnforcement/responses/404/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "X-License-Limit-Limit",
              "displayName": "X-License-Limit-Limit",
              "type": "integer",
              "required": false,
              "example": "100",
              "repeat": false,
              "description": "Maximum number of calls allowed per license entitlement.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            {
              "name": "X-License-Limit-Remaining",
              "displayName": "X-License-Limit-Remaining",
              "type": "integer",
              "required": false,
              "example": "97",
              "repeat": false,
              "description": "Number of calls allowed before the license enforcement.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            {
              "name": "X-License-Limit-Reset",
              "displayName": "X-License-Limit-Reset",
              "type": "integer",
              "required": false,
              "example": "9624",
              "repeat": false,
              "description": "Number of seconds before the license enforcement period is reset.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "X-License-Limit-Limit": {
              "name": "X-License-Limit-Limit",
              "displayName": "X-License-Limit-Limit",
              "type": "integer",
              "required": false,
              "example": "100",
              "repeat": false,
              "description": "Maximum number of calls allowed per license entitlement.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            "X-License-Limit-Remaining": {
              "name": "X-License-Limit-Remaining",
              "displayName": "X-License-Limit-Remaining",
              "type": "integer",
              "required": false,
              "example": "97",
              "repeat": false,
              "description": "Number of calls allowed before the license enforcement.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            "X-License-Limit-Reset": {
              "name": "X-License-Limit-Reset",
              "displayName": "X-License-Limit-Reset",
              "type": "integer",
              "required": false,
              "example": "9624",
              "repeat": false,
              "description": "Number of seconds before the license enforcement period is reset.",
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "org_0ac5b608-350e-4b4a-98b7-c287712cc66d": {
    "api_6909_ver_6941": {
      "diff": [
        {
          "path": "/specification/resources[0]/methods[0]/responses/201/headers",
          "comment": "Array/object mismatch",
          "master": [
            {
              "name": "Access-Control-Allow-Origin",
              "displayName": "Access-Control-Allow-Origin",
              "type": "string",
              "required": false,
              "example": "* \n",
              "repeat": false,
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "http://localhost:8080/ps-hackathon/token/12187-33278327-3273782-32838\n",
              "repeat": false,
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          ],
          "inspected": {
            "Access-Control-Allow-Origin": {
              "name": "Access-Control-Allow-Origin",
              "displayName": "Access-Control-Allow-Origin",
              "type": "string",
              "required": false,
              "example": "* \n",
              "repeat": false,
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            },
            "Location": {
              "name": "Location",
              "displayName": "Location",
              "type": "string",
              "required": false,
              "example": "http://localhost:8080/ps-hackathon/token/12187-33278327-3273782-32838\n",
              "repeat": false,
              "__METADATA__": {
                "primitiveValuesMeta": {
                  "displayName": {
                    "calculated": true
                  },
                  "type": {
                    "insertedAsDefault": true
                  },
                  "required": {
                    "insertedAsDefault": true
                  },
                  "repeat": {
                    "insertedAsDefault": true
                  }
                }
              }
            }
          }
        }
      ]
    }
  }
}