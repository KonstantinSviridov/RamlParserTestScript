{
  "org_00098a1f-6f8b-4859-8e60-605842ef76a8": {
    "api_33294_ver_34690": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[2]/resources[1]/methods[0]/queryParameters/limit/example",
          "comment": "Inequal values",
          "master": "4",
          "inspected": 4
        },
        {
          "path": "/specification/resources[0]/resources[2]/resources[3]/methods[0]/queryParameters/request_id/example",
          "comment": "Inequal values",
          "master": "45",
          "inspected": 45
        }
      ]
    }
  },
  "org_00286c87-8b9a-40e0-a2c1-049eb23873f8": {
    "api_61557_ver_63921": {
      "diff": [
        {
          "path": "/specification/traits[2]/pageable/queryParameters/offset/example",
          "comment": "Inequal values",
          "master": "20",
          "inspected": 20
        },
        {
          "path": "/specification/traits[2]/pageable/queryParameters/limit/example",
          "comment": "Inequal values",
          "master": "80",
          "inspected": 80
        }
      ]
    }
  },
  "org_00407720-49db-4a91-aec2-6facaf4b2f45": {
    "api_32123_ver_33479": {
      "diff": [
        {
          "path": "/specification/traits[6]/pageable/queryParameters/pageSize/default",
          "comment": "Inequal values",
          "master": 20,
          "inspected": "20"
        },
        {
          "path": "/specification/resources[1]/methods[0]/queryParameters/hasVideos/default",
          "comment": "Inequal values",
          "master": true,
          "inspected": "true"
        },
        {
          "path": "/specification/resources[1]/methods[0]/queryParameters/hasClips/default",
          "comment": "Inequal values",
          "master": false,
          "inspected": "false"
        }
      ]
    },
    "api_32642_ver_34028": {
      "diff": [
        {
          "path": "/errors[0]/range/start/line",
          "comment": "Inequal values",
          "master": 66,
          "inspected": 0
        },
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 0
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 2514,
          "inspected": 0
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 70,
          "inspected": 135
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 1
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 2729,
          "inspected": 4940
        }
      ]
    }
  },
  "org_006ad040-833b-44e2-bdd2-fa02ccb38a6d": {
    "api_60217_ver_62672": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_00a38a1f-ba63-4c9c-a17a-69dea8e6c00e": {
    "api_61223_ver_63671": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    },
    "api_61223_ver_63679": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_00db0595-0124-4daa-af18-f6911be6f7cd": {
    "api_23671_ver_25165": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_00e44d5d-86ee-4e42-8c14-f5826f7c5a0c": {
    "api_56425_ver_58486": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    },
    "api_56425_ver_58565": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_013834f0-1287-4b53-9b71-4d7d1efc4ea9": {
    "api_60167_ver_62599": {
      "diff": [
        {
          "path": "/errors[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'A'",
          "inspected": "Can not parse JSON example: Unexpected symbol <A> at 2:21\n1 | {\n2 |  \"token\" : 123467890ABCDEF,\n                        ^\n3 |  \"success\": true,\n4 | }"
        },
        {
          "path": "/errors[0]/range/start/line",
          "comment": "Inequal values",
          "master": 15,
          "inspected": 13
        },
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 33,
          "inspected": 11
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 401,
          "inspected": 341
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 15,
          "inspected": 13
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 34,
          "inspected": 18
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 402,
          "inspected": 348
        }
      ]
    }
  },
  "org_014239c4-ba03-41f8-b0a6-d50957137a6d": {
    "api_56689_ver_58811": {
      "oldParserErrors": "none",
      "mastrerParserErrors": [
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Get Fetch Metadata response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 8,
              "column": 2,
              "position": 248
            },
            "end": {
              "line": 8,
              "column": 29,
              "position": 275
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Get Fetch Screen Tags response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 33,
              "column": 2,
              "position": 754
            },
            "end": {
              "line": 33,
              "column": 32,
              "position": 784
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Push Notification request'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 54,
              "column": 2,
              "position": 1186
            },
            "end": {
              "line": 54,
              "column": 36,
              "position": 1220
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Push Notification response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 83,
              "column": 2,
              "position": 1811
            },
            "end": {
              "line": 83,
              "column": 37,
              "position": 1846
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Exclusive Push Notification request'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 101,
              "column": 2,
              "position": 2196
            },
            "end": {
              "line": 101,
              "column": 46,
              "position": 2240
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Exclusive Push Notification response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 131,
              "column": 2,
              "position": 2870
            },
            "end": {
              "line": 131,
              "column": 47,
              "position": 2915
            }
          },
          "isWarning": true
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 151,
              "column": 4,
              "position": 3362
            },
            "end": {
              "line": 151,
              "column": 15,
              "position": 3373
            }
          }
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 159,
              "column": 6,
              "position": 3658
            },
            "end": {
              "line": 159,
              "column": 17,
              "position": 3669
            }
          }
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 172,
              "column": 6,
              "position": 4056
            },
            "end": {
              "line": 172,
              "column": 17,
              "position": 4067
            }
          }
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 188,
              "column": 6,
              "position": 4596
            },
            "end": {
              "line": 188,
              "column": 17,
              "position": 4607
            }
          }
        }
      ],
      "inspectedParserErrors": [
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Get Fetch Metadata response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 8,
              "column": 2,
              "position": 248
            },
            "end": {
              "line": 8,
              "column": 29,
              "position": 275
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Get Fetch Screen Tags response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 33,
              "column": 2,
              "position": 754
            },
            "end": {
              "line": 33,
              "column": 32,
              "position": 784
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Push Notification request'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 54,
              "column": 2,
              "position": 1186
            },
            "end": {
              "line": 54,
              "column": 36,
              "position": 1220
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Push Notification response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 83,
              "column": 2,
              "position": 1811
            },
            "end": {
              "line": 83,
              "column": 37,
              "position": 1846
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Exclusive Push Notification request'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 101,
              "column": 2,
              "position": 2196
            },
            "end": {
              "line": 101,
              "column": 46,
              "position": 2240
            }
          },
          "isWarning": true
        },
        {
          "code": "SPACES_IN_KEY",
          "message": "Keys should not have spaces 'Post New Exclusive Push Notification response'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 131,
              "column": 2,
              "position": 2870
            },
            "end": {
              "line": 131,
              "column": 47,
              "position": 2915
            }
          },
          "isWarning": true
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 151,
              "column": 4,
              "position": 3362
            },
            "end": {
              "line": 151,
              "column": 15,
              "position": 3373
            }
          }
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 159,
              "column": 6,
              "position": 3658
            },
            "end": {
              "line": 159,
              "column": 17,
              "position": 3669
            }
          }
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 172,
              "column": 6,
              "position": 4056
            },
            "end": {
              "line": 172,
              "column": 17,
              "position": 4067
            }
          }
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 188,
              "column": 6,
              "position": 4596
            },
            "end": {
              "line": 188,
              "column": 17,
              "position": 4607
            }
          }
        }
      ]
    }
  },
  "org_01615942-1df5-4f4b-9729-292f73bf112a": {
    "api_47682_ver_49451": {
      "diff": [
        {
          "path": "/errors[0]/range/start/line",
          "comment": "Inequal values",
          "master": 461,
          "inspected": 458
        },
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 44,
          "inspected": 42
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 26812,
          "inspected": 26639
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 461,
          "inspected": 462
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 73,
          "inspected": 44
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 26841,
          "inspected": 26886
        }
      ]
    }
  },
  "org_0175dd81-5fe1-462c-9df8-aa0e389689ca": {
    "api_43943_ver_45555": {
      "oldParserErrors": "none",
      "mastrerParserErrors": [
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected token '}'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 30,
              "column": 22,
              "position": 983
            },
            "end": {
              "line": 30,
              "column": 23,
              "position": 984
            }
          },
          "isWarning": true
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 38,
              "column": 6,
              "position": 1190
            },
            "end": {
              "line": 38,
              "column": 17,
              "position": 1201
            }
          }
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected token '}'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 55,
              "column": 22,
              "position": 1814
            },
            "end": {
              "line": 55,
              "column": 23,
              "position": 1815
            }
          },
          "isWarning": true
        }
      ],
      "inspectedParserErrors": [
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected token '}'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 30,
              "column": 22,
              "position": 983
            },
            "end": {
              "line": 30,
              "column": 23,
              "position": 984
            }
          },
          "isWarning": true
        },
        {
          "code": "INVALID_PROPERTY_USAGE",
          "message": "RAML 0.8 does not allow using 'displayName' property within methods",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 38,
              "column": 6,
              "position": 1190
            },
            "end": {
              "line": 38,
              "column": 17,
              "position": 1201
            }
          }
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected token '}'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 55,
              "column": 22,
              "position": 1814
            },
            "end": {
              "line": 55,
              "column": 23,
              "position": 1815
            }
          },
          "isWarning": true
        }
      ]
    }
  },
  "org_019cbc81-944f-4517-b70b-4c92f941fc0d": {
    "api_35991_ver_37572": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_01bc4ee8-a7d3-4afd-aec2-17e08638ccc1": {
    "api_17097_ver_18264": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_01d09933-9090-432a-8bac-a5299cda86e7": {
    "api_76129_ver_79240": {
      "diff": [
        {
          "path": "/errors[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'b'",
          "inspected": "Can not parse JSON example: Unexpected symbol <b> at 1:1\n1 | bookName: 3 State\n    ^\n2 | Author: CHaTeN\n3 | "
        },
        {
          "path": "/errors[0]/range/start/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 15
        },
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 14
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 277,
          "inspected": 248
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 15
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 21
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 278,
          "inspected": 255
        },
        {
          "path": "/errors[1]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'b'",
          "inspected": "Can not parse JSON example: Unexpected symbol <b> at 2:3\n1 | {\n2 |   bookName: Meluha\n      ^\n3 |   Author: Amish Tripathi\n4 | }"
        },
        {
          "path": "/errors[1]/range/start/line",
          "comment": "Inequal values",
          "master": 39,
          "inspected": 37
        },
        {
          "path": "/errors[1]/range/start/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 14
        },
        {
          "path": "/errors[1]/range/start/position",
          "comment": "Inequal values",
          "master": 715,
          "inspected": 668
        },
        {
          "path": "/errors[1]/range/end/line",
          "comment": "Inequal values",
          "master": 39,
          "inspected": 37
        },
        {
          "path": "/errors[1]/range/end/column",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 21
        },
        {
          "path": "/errors[1]/range/end/position",
          "comment": "Inequal values",
          "master": 716,
          "inspected": 675
        },
        {
          "path": "/errors[2]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'b'",
          "inspected": "Can not parse JSON example: Unexpected symbol <b> at 2:3\n1 | {\n2 |   bookName: brixit\n      ^\n3 |   Author: camroon\n4 | }"
        },
        {
          "path": "/errors[2]/range/start/line",
          "comment": "Inequal values",
          "master": 60,
          "inspected": 58
        },
        {
          "path": "/errors[2]/range/start/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 14
        },
        {
          "path": "/errors[2]/range/start/position",
          "comment": "Inequal values",
          "master": 1169,
          "inspected": 1122
        },
        {
          "path": "/errors[2]/range/end/line",
          "comment": "Inequal values",
          "master": 60,
          "inspected": 58
        },
        {
          "path": "/errors[2]/range/end/column",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 21
        },
        {
          "path": "/errors[2]/range/end/position",
          "comment": "Inequal values",
          "master": 1170,
          "inspected": 1129
        }
      ]
    }
  },
  "org_01f77b66-519e-4be7-bdad-99caeb6ab0fd": {
    "api_38854_ver_40552": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        },
        {
          "path": "/errors[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'o'",
          "inspected": "Can not parse JSON example: Unexpected symbol <o> at 1:2\n1 | {o\n     ^\n2 |   \"message\": \"Resource not found\"\n3 | }"
        },
        {
          "path": "/errors[0]/range/start/line",
          "comment": "Inequal values",
          "master": 55,
          "inspected": 54
        },
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 14
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 1552,
          "inspected": 1524
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 55,
          "inspected": 54
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 21
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 1553,
          "inspected": 1531
        }
      ]
    }
  },
  "org_0260d928-3d74-41e7-91fa-bf118b3dc3fe": {
    "api_60432_ver_62913": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_02d17ff2-f13b-4940-acfd-a6bfad87a736": {
    "api_52539_ver_54621": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_02eaff2d-9747-4ce1-a7ca-4e26b88d7dc9": {
    "api_56422_ver_58483": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    },
    "api_56422_ver_58549": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_0308b341-b212-4567-82ea-caa06df67d72": {
    "api_16066_ver_17121": {
      "diff": [
        {
          "path": "/specification/baseUriParameters/port/default",
          "comment": "Inequal values",
          "master": 2342,
          "inspected": "2342"
        },
        {
          "path": "/errors[0]/range/start/line",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 0
        },
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 0
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 640,
          "inspected": 0
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 22,
          "inspected": 26
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 1
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 792,
          "inspected": 878
        },
        {
          "path": "/errors[1]/range/start/line",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 0
        },
        {
          "path": "/errors[1]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 0
        },
        {
          "path": "/errors[1]/range/start/position",
          "comment": "Inequal values",
          "master": 640,
          "inspected": 0
        },
        {
          "path": "/errors[1]/range/end/line",
          "comment": "Inequal values",
          "master": 22,
          "inspected": 26
        },
        {
          "path": "/errors[1]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 1
        },
        {
          "path": "/errors[1]/range/end/position",
          "comment": "Inequal values",
          "master": 792,
          "inspected": 878
        },
        {
          "path": "/errors[17]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[17]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[18]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[18]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[18]/trace[1]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[18]/trace[1]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[19]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[19]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[20]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[20]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[20]/trace[1]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[20]/trace[1]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[21]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[21]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[22]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[22]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[23]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[23]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[24]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[24]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[25]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[25]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[25]/trace[1]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[25]/trace[1]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[26]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[26]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[26]/trace[1]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[26]/trace[1]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[27]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[27]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[28]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[28]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[28]/trace[1]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[28]/trace[1]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Error in the included file: Can not parse JSON example: Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[29]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[29]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        }
      ]
    }
  },
  "org_032e7ce5-7c2b-4a26-8a78-9071c6ff9442": {
    "api_14041_ver_14804": {
      "diff": [
        {
          "path": "/specification/resources[0]/methods[0]/queryParameters/start/example",
          "comment": "Inequal values",
          "master": "1427605200000",
          "inspected": 1427605200000
        },
        {
          "path": "/specification/resources[0]/methods[0]/queryParameters/end/example",
          "comment": "Inequal values",
          "master": "1428210000000",
          "inspected": 1428210000000
        }
      ]
    }
  },
  "org_03512553-dca8-459f-82ff-eb72bcb8bace": {
    "api_44920_ver_46558": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_035fd8d4-9b1d-4efa-abb0-4520e06e2d7e": {
    "api_21773_ver_23198": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_038ef3e1-c941-4c3e-91a0-fb000812e3e4": {
    "api_39561_ver_41128": {
      "diff": [
        {
          "path": "/specification/traits[1]/paged/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        },
        {
          "path": "/specification/traits[1]/paged/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "20",
          "inspected": 20
        }
      ]
    }
  },
  "org_03a797c8-7807-45c6-9f1b-43e87e4dce7a": {
    "api_37745_ver_39419": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_03d96b6b-cf0d-4cb4-8757-dee719dca6e6": {
    "api_12846_ver_13352": {
      "oldParserErrors": "none",
      "mastrerParserErrors": [
        {
          "code": "MISSING_REQUIRED_PROPERTY",
          "message": "Missing required property 'title'",
          "path": "sailaja.raml",
          "range": {
            "start": {
              "line": 1,
              "column": 0,
              "position": 11
            },
            "end": {
              "line": 16,
              "column": 10,
              "position": 357
            }
          }
        }
      ],
      "inspectedParserErrors": [
        {
          "code": "MISSING_REQUIRED_PROPERTY",
          "message": "Missing required property 'title'",
          "path": "sailaja.raml",
          "range": {
            "start": {
              "line": 1,
              "column": 0,
              "position": 11
            },
            "end": {
              "line": 16,
              "column": 10,
              "position": 357
            }
          }
        }
      ]
    }
  },
  "org_03eaf127-26a8-4466-8995-51027ee24093": {
    "api_69880_ver_72932": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_040f1f27-8713-4715-954f-70a0b83698c9": {
    "api_58057_ver_60256": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    },
    "api_58057_ver_60276": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_044d16b7-6bc2-4bcc-84d7-7f24a2666050": {
    "api_40565_ver_42077": {
      "diff": [
        {
          "path": "/errors[0]/range/start/line",
          "comment": "Inequal values",
          "master": 294,
          "inspected": 240
        },
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 20,
          "inspected": 14
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 10683,
          "inspected": 8793
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 294,
          "inspected": 299
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 36,
          "inspected": 15
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 10699,
          "inspected": 10830
        },
        {
          "path": "/errors[5]/range/start/line",
          "comment": "Inequal values",
          "master": 573,
          "inspected": 552
        },
        {
          "path": "/errors[5]/range/start/column",
          "comment": "Inequal values",
          "master": 22,
          "inspected": 14
        },
        {
          "path": "/errors[5]/range/start/position",
          "comment": "Inequal values",
          "master": 18776,
          "inspected": 17996
        },
        {
          "path": "/errors[5]/range/end/line",
          "comment": "Inequal values",
          "master": 576,
          "inspected": 580
        },
        {
          "path": "/errors[5]/range/end/column",
          "comment": "Inequal values",
          "master": 23,
          "inspected": 15
        },
        {
          "path": "/errors[5]/range/end/position",
          "comment": "Inequal values",
          "master": 18887,
          "inspected": 18963
        },
        {
          "path": "/errors[7]/range/start/line",
          "comment": "Inequal values",
          "master": 733,
          "inspected": 692
        },
        {
          "path": "/errors[7]/range/start/column",
          "comment": "Inequal values",
          "master": 24,
          "inspected": 14
        },
        {
          "path": "/errors[7]/range/start/position",
          "comment": "Inequal values",
          "master": 23700,
          "inspected": 22324
        },
        {
          "path": "/errors[7]/range/end/line",
          "comment": "Inequal values",
          "master": 736,
          "inspected": 741
        },
        {
          "path": "/errors[7]/range/end/column",
          "comment": "Inequal values",
          "master": 25,
          "inspected": 15
        },
        {
          "path": "/errors[7]/range/end/position",
          "comment": "Inequal values",
          "master": 23817,
          "inspected": 23917
        },
        {
          "path": "/errors[8]/range/start/line",
          "comment": "Inequal values",
          "master": 768,
          "inspected": 766
        },
        {
          "path": "/errors[8]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 14
        },
        {
          "path": "/errors[8]/range/start/position",
          "comment": "Inequal values",
          "master": 24665,
          "inspected": 24610
        },
        {
          "path": "/errors[8]/range/end/line",
          "comment": "Inequal values",
          "master": 777,
          "inspected": 778
        },
        {
          "path": "/errors[8]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 15
        },
        {
          "path": "/errors[8]/range/end/position",
          "comment": "Inequal values",
          "master": 24952,
          "inspected": 24968
        },
        {
          "path": "/errors[9]/range/start/line",
          "comment": "Inequal values",
          "master": 816,
          "inspected": 813
        },
        {
          "path": "/errors[9]/range/start/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 14
        },
        {
          "path": "/errors[9]/range/start/position",
          "comment": "Inequal values",
          "master": 26004,
          "inspected": 25921
        },
        {
          "path": "/errors[9]/range/end/line",
          "comment": "Inequal values",
          "master": 816,
          "inspected": 820
        },
        {
          "path": "/errors[9]/range/end/column",
          "comment": "Inequal values",
          "master": 34,
          "inspected": 15
        },
        {
          "path": "/errors[9]/range/end/position",
          "comment": "Inequal values",
          "master": 26020,
          "inspected": 26127
        },
        {
          "path": "/errors[12]/range/start/line",
          "comment": "Inequal values",
          "master": 1039,
          "inspected": 1037
        },
        {
          "path": "/errors[12]/range/start/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 16
        },
        {
          "path": "/errors[12]/range/start/position",
          "comment": "Inequal values",
          "master": 33230,
          "inspected": 33171
        },
        {
          "path": "/errors[12]/range/end/line",
          "comment": "Inequal values",
          "master": 1039,
          "inspected": 1040
        },
        {
          "path": "/errors[12]/range/end/column",
          "comment": "Inequal values",
          "master": 33,
          "inspected": 17
        },
        {
          "path": "/errors[12]/range/end/position",
          "comment": "Inequal values",
          "master": 33245,
          "inspected": 33263
        },
        {
          "path": "/errors[15]/range/start/line",
          "comment": "Inequal values",
          "master": 1438,
          "inspected": 1383
        },
        {
          "path": "/errors[15]/range/start/column",
          "comment": "Inequal values",
          "master": 24,
          "inspected": 16
        },
        {
          "path": "/errors[15]/range/start/position",
          "comment": "Inequal values",
          "master": 48025,
          "inspected": 45900
        },
        {
          "path": "/errors[15]/range/end/line",
          "comment": "Inequal values",
          "master": 1438,
          "inspected": 1444
        },
        {
          "path": "/errors[15]/range/end/column",
          "comment": "Inequal values",
          "master": 40,
          "inspected": 17
        },
        {
          "path": "/errors[15]/range/end/position",
          "comment": "Inequal values",
          "master": 48041,
          "inspected": 48210
        },
        {
          "path": "/errors[17]/range/start/line",
          "comment": "Inequal values",
          "master": 1680,
          "inspected": 1626
        },
        {
          "path": "/errors[17]/range/start/column",
          "comment": "Inequal values",
          "master": 24,
          "inspected": 18
        },
        {
          "path": "/errors[17]/range/start/position",
          "comment": "Inequal values",
          "master": 57001,
          "inspected": 54895
        },
        {
          "path": "/errors[17]/range/end/line",
          "comment": "Inequal values",
          "master": 1680,
          "inspected": 1685
        },
        {
          "path": "/errors[17]/range/end/column",
          "comment": "Inequal values",
          "master": 40,
          "inspected": 19
        },
        {
          "path": "/errors[17]/range/end/position",
          "comment": "Inequal values",
          "master": 57017,
          "inspected": 57168
        }
      ]
    }
  },
  "org_046df404-3612-4fe7-bfd7-4f208c3df4c6": {
    "api_69710_ver_72722": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_04a50a4f-10a7-424e-9402-15b1dbae0842": {
    "api_33384_ver_34784": {
      "diff": [
        {
          "path": "/errors[4]/range/start/line",
          "comment": "Inequal values",
          "master": 208,
          "inspected": 194
        },
        {
          "path": "/errors[4]/range/start/column",
          "comment": "Inequal values",
          "master": 24,
          "inspected": 8
        },
        {
          "path": "/errors[4]/range/start/position",
          "comment": "Inequal values",
          "master": 7055,
          "inspected": 6514
        },
        {
          "path": "/errors[4]/range/end/line",
          "comment": "Inequal values",
          "master": 211,
          "inspected": 234
        },
        {
          "path": "/errors[4]/range/end/column",
          "comment": "Inequal values",
          "master": 25,
          "inspected": 9
        },
        {
          "path": "/errors[4]/range/end/position",
          "comment": "Inequal values",
          "master": 7190,
          "inspected": 7890
        },
        {
          "path": "/errors[14]/range/start/line",
          "comment": "Inequal values",
          "master": 434,
          "inspected": 421
        },
        {
          "path": "/errors[14]/range/start/column",
          "comment": "Inequal values",
          "master": 24,
          "inspected": 20
        },
        {
          "path": "/errors[14]/range/start/position",
          "comment": "Inequal values",
          "master": 15765,
          "inspected": 15229
        },
        {
          "path": "/errors[14]/range/end/line",
          "comment": "Inequal values",
          "master": 434,
          "inspected": 435
        },
        {
          "path": "/errors[14]/range/end/column",
          "comment": "Inequal values",
          "master": 104,
          "inspected": 21
        },
        {
          "path": "/errors[14]/range/end/position",
          "comment": "Inequal values",
          "master": 15845,
          "inspected": 15867
        },
        {
          "path": "/errors[28]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol '\"'",
          "inspected": "Can not parse JSON example: Unexpected symbol <\"> at 24:19\n22 |         \"mincount\": 0,\n23 |         \"maxcount\": 10,\n24 |         \"format\": \"^[a-z]+\\.globalsign\\.com\"\n                       ^\n25 |     },\n26 |     \"san_emails\": {"
        },
        {
          "path": "/errors[28]/range/start/line",
          "comment": "Inequal values",
          "master": 598,
          "inspected": 574
        },
        {
          "path": "/errors[28]/range/start/column",
          "comment": "Inequal values",
          "master": 46,
          "inspected": 24
        },
        {
          "path": "/errors[28]/range/start/position",
          "comment": "Inequal values",
          "master": 23508,
          "inspected": 22064
        },
        {
          "path": "/errors[28]/range/end/line",
          "comment": "Inequal values",
          "master": 598,
          "inspected": 574
        },
        {
          "path": "/errors[28]/range/end/column",
          "comment": "Inequal values",
          "master": 47,
          "inspected": 31
        },
        {
          "path": "/errors[28]/range/end/position",
          "comment": "Inequal values",
          "master": 23509,
          "inspected": 22071
        }
      ]
    },
    "api_42431_ver_43921": {
      "diff": [
        {
          "path": "/errors[11]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'F'",
          "inspected": "Can not parse JSON example: Unexpected symbol <F> at 1:1\n1 | For AIK Certificate Requests:\n    ^\n2 |   {\n3 |       \"certificate_type\": \"AIK_CERTIFICATE\","
        },
        {
          "path": "/errors[11]/range/start/line",
          "comment": "Inequal values",
          "master": 262,
          "inspected": 261
        },
        {
          "path": "/errors[11]/range/start/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 16
        },
        {
          "path": "/errors[11]/range/start/position",
          "comment": "Inequal values",
          "master": 9695,
          "inspected": 9666
        },
        {
          "path": "/errors[11]/range/end/line",
          "comment": "Inequal values",
          "master": 262,
          "inspected": 261
        },
        {
          "path": "/errors[11]/range/end/column",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 23
        },
        {
          "path": "/errors[11]/range/end/position",
          "comment": "Inequal values",
          "master": 9696,
          "inspected": 9673
        },
        {
          "path": "/errors[16]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'F'",
          "inspected": "Can not parse JSON example: Unexpected symbol <F> at 1:1\n1 | For AIK Certificate Requests:\n    ^\n2 |   {\n3 |       \"certificate_type\": \"AIK_CERTIFICATE\""
        },
        {
          "path": "/errors[16]/range/start/line",
          "comment": "Inequal values",
          "master": 320,
          "inspected": 319
        },
        {
          "path": "/errors[16]/range/start/column",
          "comment": "Inequal values",
          "master": 30,
          "inspected": 28
        },
        {
          "path": "/errors[16]/range/start/position",
          "comment": "Inequal values",
          "master": 12326,
          "inspected": 12285
        },
        {
          "path": "/errors[16]/range/end/line",
          "comment": "Inequal values",
          "master": 320,
          "inspected": 319
        },
        {
          "path": "/errors[16]/range/end/column",
          "comment": "Inequal values",
          "master": 31,
          "inspected": 35
        },
        {
          "path": "/errors[16]/range/end/position",
          "comment": "Inequal values",
          "master": 12327,
          "inspected": 12292
        }
      ]
    }
  },
  "org_04c597fa-56c1-4d37-accd-9256df1cfc41": {
    "api_56470_ver_58573": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_04cf5dc6-9dc4-439c-bb03-a84281e59bb9": {
    "api_43238_ver_44789": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_04dff175-529c-4258-98a9-22d26281eb8b": {
    "api_28287_ver_30106": {
      "diff": [
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 450,
          "inspected": 16
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 754,
          "inspected": 320
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 498,
          "inspected": 582
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 802,
          "inspected": 886
        },
        {
          "path": "/errors[1]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[2]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[3]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[4]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[5]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[6]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[7]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[8]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        }
      ]
    }
  },
  "org_04e44c86-13ce-4fdc-a668-d01a990dad34": {
    "api_38113_ver_39792": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_053a9e34-0ac9-4ea6-b90b-204f17098e11": {
    "api_62420_ver_64820": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    },
    "api_62420_ver_64840": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_054853b9-78f9-4068-adbd-bab83c46c429": {
    "api_66052_ver_68682": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_055371ea-6e71-46b9-96b2-698922156c79": {
    "api_35900_ver_37478": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_0555b1c3-cc36-4dfc-ade7-8cf4e3c05038": {
    "api_41442_ver_42927": {
      "diff": [
        {
          "path": "/errors[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol '''",
          "inspected": "Can not parse JSON example: Unexpected symbol <'> at 1:3\n1 | { 'test' : 'test' }\n      ^\n2 | "
        },
        {
          "path": "/errors[0]/range/start/line",
          "comment": "Inequal values",
          "master": 24,
          "inspected": 23
        },
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 14
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 657,
          "inspected": 628
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 24,
          "inspected": 23
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 21
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 658,
          "inspected": 635
        },
        {
          "path": "/errors[1]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol '''",
          "inspected": "Can not parse JSON example: Unexpected symbol <'> at 2:3\n1 | {\n2 |   'test' : 'test'\n      ^\n3 | }\n4 | "
        },
        {
          "path": "/errors[1]/range/start/line",
          "comment": "Inequal values",
          "master": 31,
          "inspected": 29
        },
        {
          "path": "/errors[1]/range/start/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 14
        },
        {
          "path": "/errors[1]/range/start/position",
          "comment": "Inequal values",
          "master": 831,
          "inspected": 784
        },
        {
          "path": "/errors[1]/range/end/line",
          "comment": "Inequal values",
          "master": 31,
          "inspected": 29
        },
        {
          "path": "/errors[1]/range/end/column",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 21
        },
        {
          "path": "/errors[1]/range/end/position",
          "comment": "Inequal values",
          "master": 832,
          "inspected": 791
        }
      ]
    }
  },
  "org_058cd931-d4b1-4e08-8fe3-cea10950d5d6": {
    "api_53534_ver_55585": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_058f8b09-4f17-4df5-bae8-b45b2a100692": {
    "api_55564_ver_57653": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    },
    "api_55564_ver_57665": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_059448be-54d9-4a9a-80ae-191d12ab5d20": {
    "api_56075_ver_58158": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    },
    "api_56075_ver_58164": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_05b593d6-5515-43be-8d5b-6bc2d387bb64": {
    "api_1577_ver_1575": {
      "diff": [
        {
          "path": "/specification/traits[0]/paged/queryParameters/start/example",
          "comment": "Inequal values",
          "master": "1",
          "inspected": 1
        },
        {
          "path": "/specification/traits[0]/paged/queryParameters/pages/example",
          "comment": "Inequal values",
          "master": "3",
          "inspected": 3
        }
      ]
    }
  },
  "org_05d14271-0d26-4e1f-83df-9c49ee1d3c21": {
    "api_58932_ver_61296": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    },
    "api_58932_ver_63088": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_061fc1c6-7d8e-466b-b9dd-b47409e20a3f": {
    "api_10965_ver_11320": {
      "diff": [
        {
          "path": "/specification/resources[2]/methods[0]/queryParameters/tipoDoc/example",
          "comment": "Inequal values",
          "master": "1",
          "inspected": 1
        }
      ]
    }
  },
  "org_06340330-d7fb-4dfb-ac6c-497afa977ec0": {
    "api_66372_ver_68995": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    },
    "api_66372_ver_69085": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_063ab242-628b-4331-a428-0549711b96c7": {
    "api_58165_ver_60405": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_0642e57d-40e0-43c4-a164-e64ecda5817a": {
    "api_66403_ver_69028": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    },
    "api_66403_ver_69071": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_064dd86c-a1a5-492e-9602-4d0d33d135e2": {
    "api_31330_ver_32771": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_06cfe9e9-2617-41a9-a9a7-328f43070f31": {
    "api_40527_ver_42034": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_07092dae-b162-4317-9bca-6d463bac3fb9": {
    "api_56413_ver_58556": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_071afe40-9d5b-4c0b-800b-4186cab9ac06": {
    "api_50586_ver_52543": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_075acb1a-4a66-4699-bcc1-93d1c639c981": {
    "api_14281_ver_15045": {
      "diff": [
        {
          "path": "/errors[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'C'",
          "inspected": "Can not parse JSON example: Unexpected symbol <C> at 2:4\n1 | [\n2 |   {CustomerKey: \"6B6F58A5-0122-4038-8C6A-45AF8BB01AAC\", Name: \"Fullerton Toyota Lexus\", Active: true, SampleData: false, Widgets: [1,3]},\n       ^\n3 |   {CustomerKey: \"034986A8-47F3-4DC6-ADC4-F5DB2052AA96\", Name: \"Irvine Nissan\", Active: true, SampleData: true, Widgets: [2,3,4]}\n4 | ]"
        },
        {
          "path": "/errors[0]/range/start/line",
          "comment": "Inequal values",
          "master": 27,
          "inspected": 25
        },
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 12
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 824,
          "inspected": 780
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 27,
          "inspected": 25
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 19
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 825,
          "inspected": 787
        },
        {
          "path": "/errors[1]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'N'",
          "inspected": "Can not parse JSON example: Unexpected symbol <N> at 1:2\n1 | {Name: \"Irvine Nissan\", Active: true, SampleData: true, Widgets: [2,3,4]} or\n     ^\n2 | {Name: \"Roy Kern Subaru\"}\n3 | "
        },
        {
          "path": "/errors[1]/range/start/line",
          "comment": "Inequal values",
          "master": 64,
          "inspected": 63
        },
        {
          "path": "/errors[1]/range/start/column",
          "comment": "Inequal values",
          "master": 11,
          "inspected": 8
        },
        {
          "path": "/errors[1]/range/start/position",
          "comment": "Inequal values",
          "master": 2163,
          "inspected": 2141
        },
        {
          "path": "/errors[1]/range/end/line",
          "comment": "Inequal values",
          "master": 64,
          "inspected": 63
        },
        {
          "path": "/errors[1]/range/end/column",
          "comment": "Inequal values",
          "master": 12,
          "inspected": 15
        },
        {
          "path": "/errors[1]/range/end/position",
          "comment": "Inequal values",
          "master": 2164,
          "inspected": 2148
        },
        {
          "path": "/errors[2]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'C'",
          "inspected": "Can not parse JSON example: Unexpected symbol <C> at 1:2\n1 | {CustomerKey: \"6B6F58A5-0122-4038-8C6A-45AF8BB01AAC\", Name: \"Fullerton Toyota Lexus\", Active: true, SampleData: false, Widgets:[2,3,4]}\n     ^\n2 | "
        },
        {
          "path": "/errors[2]/range/start/line",
          "comment": "Inequal values",
          "master": 72,
          "inspected": 71
        },
        {
          "path": "/errors[2]/range/start/column",
          "comment": "Inequal values",
          "master": 15,
          "inspected": 12
        },
        {
          "path": "/errors[2]/range/start/position",
          "comment": "Inequal values",
          "master": 2492,
          "inspected": 2466
        },
        {
          "path": "/errors[2]/range/end/line",
          "comment": "Inequal values",
          "master": 72,
          "inspected": 71
        },
        {
          "path": "/errors[2]/range/end/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 19
        },
        {
          "path": "/errors[2]/range/end/position",
          "comment": "Inequal values",
          "master": 2493,
          "inspected": 2473
        },
        {
          "path": "/errors[3]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'T'",
          "inspected": "Can not parse JSON example: Unexpected symbol <T> at 2:4\n1 | [\n2 |   {Type: 2, ID: 2354, Text: \"Customer Name must be from 1 to 50 characters long\"},\n       ^\n3 |   {Type: 2, ID: 3458, Text: \"Widget ID %1 is invalid\"}\n4 | ]"
        },
        {
          "path": "/errors[3]/range/start/line",
          "comment": "Inequal values",
          "master": 82,
          "inspected": 80
        },
        {
          "path": "/errors[3]/range/start/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 12
        },
        {
          "path": "/errors[3]/range/start/position",
          "comment": "Inequal values",
          "master": 2940,
          "inspected": 2896
        },
        {
          "path": "/errors[3]/range/end/line",
          "comment": "Inequal values",
          "master": 82,
          "inspected": 80
        },
        {
          "path": "/errors[3]/range/end/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 19
        },
        {
          "path": "/errors[3]/range/end/position",
          "comment": "Inequal values",
          "master": 2941,
          "inspected": 2903
        },
        {
          "path": "/errors[4]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'C'",
          "inspected": "Can not parse JSON example: Unexpected symbol <C> at 1:2\n1 | {CustomerKey: \"6B6F58A5-0122-4038-8C6A-45AF8BB01AAC\", Name: \"Fullerton Toyota Lexus\", Active: true, SampleData: true, Widgets: [2,3,4]}\n     ^\n2 | "
        },
        {
          "path": "/errors[4]/range/start/line",
          "comment": "Inequal values",
          "master": 95,
          "inspected": 94
        },
        {
          "path": "/errors[4]/range/start/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 14
        },
        {
          "path": "/errors[4]/range/start/position",
          "comment": "Inequal values",
          "master": 3373,
          "inspected": 3345
        },
        {
          "path": "/errors[4]/range/end/line",
          "comment": "Inequal values",
          "master": 95,
          "inspected": 94
        },
        {
          "path": "/errors[4]/range/end/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 21
        },
        {
          "path": "/errors[4]/range/end/position",
          "comment": "Inequal values",
          "master": 3374,
          "inspected": 3352
        },
        {
          "path": "/errors[5]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'N'",
          "inspected": "Can not parse JSON example: Unexpected symbol <N> at 1:2\n1 | {Name: \"Irvine Nissan Your Best Friend\", Active: true, SampleData: true, Widgets: [1,2,3,4]}\n     ^\n2 | "
        },
        {
          "path": "/errors[5]/range/start/line",
          "comment": "Inequal values",
          "master": 135,
          "inspected": 134
        },
        {
          "path": "/errors[5]/range/start/column",
          "comment": "Inequal values",
          "master": 13,
          "inspected": 10
        },
        {
          "path": "/errors[5]/range/start/position",
          "comment": "Inequal values",
          "master": 4820,
          "inspected": 4796
        },
        {
          "path": "/errors[5]/range/end/line",
          "comment": "Inequal values",
          "master": 135,
          "inspected": 134
        },
        {
          "path": "/errors[5]/range/end/column",
          "comment": "Inequal values",
          "master": 14,
          "inspected": 17
        },
        {
          "path": "/errors[5]/range/end/position",
          "comment": "Inequal values",
          "master": 4821,
          "inspected": 4803
        },
        {
          "path": "/errors[6]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'T'",
          "inspected": "Can not parse JSON example: Unexpected symbol <T> at 2:4\n1 | [\n2 |   {Type: 2, ID: 2354, Text: \"Customer Name must be from 1 to 50 characters long\"},\n       ^\n3 |   {Type: 2, ID: 3458, Text: \"Widget ID %1 is invalid\"}\n4 | ]"
        },
        {
          "path": "/errors[6]/range/start/line",
          "comment": "Inequal values",
          "master": 147,
          "inspected": 145
        },
        {
          "path": "/errors[6]/range/start/column",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 14
        },
        {
          "path": "/errors[6]/range/start/position",
          "comment": "Inequal values",
          "master": 5222,
          "inspected": 5174
        },
        {
          "path": "/errors[6]/range/end/line",
          "comment": "Inequal values",
          "master": 147,
          "inspected": 145
        },
        {
          "path": "/errors[6]/range/end/column",
          "comment": "Inequal values",
          "master": 20,
          "inspected": 21
        },
        {
          "path": "/errors[6]/range/end/position",
          "comment": "Inequal values",
          "master": 5223,
          "inspected": 5181
        },
        {
          "path": "/errors[7]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'W'",
          "inspected": "Can not parse JSON example: Unexpected symbol <W> at 2:4\n1 | [\n2 |   {WidgetID: 1, Name: \"Price Advisor New Car\", Url: \"panc.syndication.kbb.com\"},\n       ^\n3 |   {WidgetID: 3, Name: \"Ratings and Reviews Expert\", Url: \"rre.syndication.kbb.com\"}\n4 | ]"
        },
        {
          "path": "/errors[7]/range/start/line",
          "comment": "Inequal values",
          "master": 161,
          "inspected": 159
        },
        {
          "path": "/errors[7]/range/start/column",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[7]/range/start/position",
          "comment": "Inequal values",
          "master": 5718,
          "inspected": 5666
        },
        {
          "path": "/errors[7]/range/end/line",
          "comment": "Inequal values",
          "master": 161,
          "inspected": 159
        },
        {
          "path": "/errors[7]/range/end/column",
          "comment": "Inequal values",
          "master": 22,
          "inspected": 23
        },
        {
          "path": "/errors[7]/range/end/position",
          "comment": "Inequal values",
          "master": 5719,
          "inspected": 5673
        },
        {
          "path": "/errors[8]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'W'",
          "inspected": "Can not parse JSON example: Unexpected symbol <W> at 1:2\n1 | {WidgetID: 1, Name: \"Price Advisor New Car\"}\n     ^\n2 | "
        },
        {
          "path": "/errors[8]/range/start/line",
          "comment": "Inequal values",
          "master": 181,
          "inspected": 180
        },
        {
          "path": "/errors[8]/range/start/column",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 16
        },
        {
          "path": "/errors[8]/range/start/position",
          "comment": "Inequal values",
          "master": 6576,
          "inspected": 6546
        },
        {
          "path": "/errors[8]/range/end/line",
          "comment": "Inequal values",
          "master": 181,
          "inspected": 180
        },
        {
          "path": "/errors[8]/range/end/column",
          "comment": "Inequal values",
          "master": 20,
          "inspected": 23
        },
        {
          "path": "/errors[8]/range/end/position",
          "comment": "Inequal values",
          "master": 6577,
          "inspected": 6553
        },
        {
          "path": "/errors[9]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'T'",
          "inspected": "Can not parse JSON example: Unexpected symbol <T> at 1:4\n1 | [ {Type: 2, ID: 3466, Text: \"%1 is not a valid Widget ID\"} ]\n       ^\n2 | "
        },
        {
          "path": "/errors[9]/range/start/line",
          "comment": "Inequal values",
          "master": 191,
          "inspected": 190
        },
        {
          "path": "/errors[9]/range/start/column",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 16
        },
        {
          "path": "/errors[9]/range/start/position",
          "comment": "Inequal values",
          "master": 6973,
          "inspected": 6941
        },
        {
          "path": "/errors[9]/range/end/line",
          "comment": "Inequal values",
          "master": 191,
          "inspected": 190
        },
        {
          "path": "/errors[9]/range/end/column",
          "comment": "Inequal values",
          "master": 22,
          "inspected": 23
        },
        {
          "path": "/errors[9]/range/end/position",
          "comment": "Inequal values",
          "master": 6974,
          "inspected": 6948
        },
        {
          "path": "/errors[10]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'W'",
          "inspected": "Can not parse JSON example: Unexpected symbol <W> at 1:2\n1 | {WidgetID: 1, Name: \"Price Advisor New Car\", Url: \"panc.syndication.kbb.com\"}\n     ^\n2 | "
        },
        {
          "path": "/errors[10]/range/start/line",
          "comment": "Inequal values",
          "master": 204,
          "inspected": 203
        },
        {
          "path": "/errors[10]/range/start/column",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 18
        },
        {
          "path": "/errors[10]/range/start/position",
          "comment": "Inequal values",
          "master": 7439,
          "inspected": 7407
        },
        {
          "path": "/errors[10]/range/end/line",
          "comment": "Inequal values",
          "master": 204,
          "inspected": 203
        },
        {
          "path": "/errors[10]/range/end/column",
          "comment": "Inequal values",
          "master": 22,
          "inspected": 25
        },
        {
          "path": "/errors[10]/range/end/position",
          "comment": "Inequal values",
          "master": 7440,
          "inspected": 7414
        },
        {
          "path": "/errors[11]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'W'",
          "inspected": "Can not parse JSON example: Unexpected symbol <W> at 2:4\n1 | [\n2 |   {WidgetID: 1, Name: \"Price Advisor New Car\", Url: \"panc.syndication.kbb.com\"},\n       ^\n3 |   {WidgetID: 2, Name: \"Price Advisor Used Car\", Url: \"pauc.syndication.kbb.com\"},\n4 |   {WidgetID: 3, Name: \"Ratings and Reviews Expert\", Url: \"Rre.syndication.kbb.com\"}"
        },
        {
          "path": "/errors[11]/range/start/line",
          "comment": "Inequal values",
          "master": 223,
          "inspected": 221
        },
        {
          "path": "/errors[11]/range/start/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 12
        },
        {
          "path": "/errors[11]/range/start/position",
          "comment": "Inequal values",
          "master": 8084,
          "inspected": 8040
        },
        {
          "path": "/errors[11]/range/end/line",
          "comment": "Inequal values",
          "master": 223,
          "inspected": 221
        },
        {
          "path": "/errors[11]/range/end/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 19
        },
        {
          "path": "/errors[11]/range/end/position",
          "comment": "Inequal values",
          "master": 8085,
          "inspected": 8047
        }
      ]
    }
  },
  "org_075fa592-40f7-4026-bb0d-5380a12fd1c3": {
    "api_28514_ver_30341": {
      "diff": [
        {
          "path": "/specification/resources[1]/methods[0]/queryParameters/num_items/default",
          "comment": "Inequal values",
          "master": 25,
          "inspected": "25"
        },
        {
          "path": "/specification/resources[3]/methods[0]/queryParameters/budgetammount/example",
          "comment": "Inequal values",
          "master": "150",
          "inspected": 150
        },
        {
          "path": "/specification/resources[3]/resources[1]/resources[1]/methods[0]/queryParameters/ammount/example",
          "comment": "Inequal values",
          "master": "150",
          "inspected": 150
        },
        {
          "path": "/errors[1]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol '\"'",
          "inspected": "Can not parse JSON example: Unexpected symbol <\"> at 3:10\n1 | {\n2 |   \"link\":\"/settings\",\n3 |   \"link\":\"/channel:\n             ^\n4 | }\n5 | "
        },
        {
          "path": "/errors[1]/range/start/line",
          "comment": "Inequal values",
          "master": 47,
          "inspected": 44
        },
        {
          "path": "/errors[1]/range/start/column",
          "comment": "Inequal values",
          "master": 29,
          "inspected": 16
        },
        {
          "path": "/errors[1]/range/start/position",
          "comment": "Inequal values",
          "master": 1143,
          "inspected": 1039
        },
        {
          "path": "/errors[1]/range/end/line",
          "comment": "Inequal values",
          "master": 47,
          "inspected": 44
        },
        {
          "path": "/errors[1]/range/end/column",
          "comment": "Inequal values",
          "master": 30,
          "inspected": 23
        },
        {
          "path": "/errors[1]/range/end/position",
          "comment": "Inequal values",
          "master": 1144,
          "inspected": 1046
        }
      ],
      "oldParserErrors": "none",
      "mastrerParserErrors": [
        {
          "code": "SECUREDBY_LIST_08",
          "message": "'securedBy' should be a list in RAML08",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 5,
              "column": 0,
              "position": 179
            },
            "end": {
              "line": 5,
              "column": 9,
              "position": 188
            }
          }
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Cannot tokenize symbol '\"'",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 47,
              "column": 29,
              "position": 1143
            },
            "end": {
              "line": 47,
              "column": 30,
              "position": 1144
            }
          },
          "isWarning": true
        },
        {
          "code": "SCALAR_PROHIBITED",
          "message": "Property 'schemas' can not have scalar value",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 209,
              "column": 0,
              "position": 5045
            },
            "end": {
              "line": 209,
              "column": 7,
              "position": 5052
            }
          }
        },
        {
          "code": "UNKNOWN_NODE",
          "message": "Unknown node: ''",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 210,
              "column": 3,
              "position": 5057
            },
            "end": {
              "line": 210,
              "column": 8,
              "position": 5062
            }
          }
        }
      ],
      "inspectedParserErrors": [
        {
          "code": "SECUREDBY_LIST_08",
          "message": "'securedBy' should be a list in RAML08",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 5,
              "column": 0,
              "position": 179
            },
            "end": {
              "line": 5,
              "column": 9,
              "position": 188
            }
          }
        },
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected symbol <\"> at 3:10\n1 | {\n2 |   \"link\":\"/settings\",\n3 |   \"link\":\"/channel:\n             ^\n4 | }\n5 | ",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 44,
              "column": 16,
              "position": 1039
            },
            "end": {
              "line": 44,
              "column": 23,
              "position": 1046
            }
          },
          "isWarning": true
        },
        {
          "code": "SCALAR_PROHIBITED",
          "message": "Property 'schemas' can not have scalar value",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 209,
              "column": 0,
              "position": 5045
            },
            "end": {
              "line": 209,
              "column": 7,
              "position": 5052
            }
          }
        },
        {
          "code": "UNKNOWN_NODE",
          "message": "Unknown node: ''",
          "path": "merged.raml",
          "range": {
            "start": {
              "line": 210,
              "column": 3,
              "position": 5057
            },
            "end": {
              "line": 210,
              "column": 8,
              "position": 5062
            }
          }
        }
      ]
    },
    "api_37322_ver_38966": {
      "diff": [
        {
          "path": "/errors[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'T'",
          "inspected": "Can not parse JSON example: Unexpected symbol <T> at 2:13\n1 | {\n2 |   \"success\":True,\n                ^\n3 |   \"status\" 201,\n4 |   \"user\":{ "
        },
        {
          "path": "/errors[0]/range/start/line",
          "comment": "Inequal values",
          "master": 35,
          "inspected": 33
        },
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 30,
          "inspected": 14
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 914,
          "inspected": 852
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 35,
          "inspected": 33
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 31,
          "inspected": 21
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 915,
          "inspected": 859
        }
      ],
      "oldParserErrors": "none",
      "mastrerParserErrors": [
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Cannot tokenize symbol 'T'",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 35,
              "column": 30,
              "position": 914
            },
            "end": {
              "line": 35,
              "column": 31,
              "position": 915
            }
          },
          "isWarning": true
        },
        {
          "code": "WEB_FORMS",
          "message": "File type can be only used in web forms",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 118,
              "column": 10,
              "position": 2807
            },
            "end": {
              "line": 118,
              "column": 14,
              "position": 2811
            }
          }
        }
      ],
      "inspectedParserErrors": [
        {
          "code": "CAN_NOT_PARSE_JSON",
          "message": "Can not parse JSON example: Unexpected symbol <T> at 2:13\n1 | {\n2 |   \"success\":True,\n                ^\n3 |   \"status\" 201,\n4 |   \"user\":{ ",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 33,
              "column": 14,
              "position": 852
            },
            "end": {
              "line": 33,
              "column": 21,
              "position": 859
            }
          },
          "isWarning": true
        },
        {
          "code": "WEB_FORMS",
          "message": "File type can be only used in web forms",
          "path": "api.raml",
          "range": {
            "start": {
              "line": 118,
              "column": 10,
              "position": 2807
            },
            "end": {
              "line": 118,
              "column": 14,
              "position": 2811
            }
          }
        }
      ]
    }
  },
  "org_076240d9-38b6-447e-b6ef-d2392bb82728": {
    "api_18160_ver_19405": {
      "diff": [
        {
          "path": "/specification/resources[6]/methods[0]/queryParameters/stream_position/default",
          "comment": "Inequal values",
          "master": 0,
          "inspected": "0"
        },
        {
          "path": "/errors[1]/range/start/line",
          "comment": "Inequal values",
          "master": 265,
          "inspected": 241
        },
        {
          "path": "/errors[1]/range/start/column",
          "comment": "Inequal values",
          "master": 14,
          "inspected": 12
        },
        {
          "path": "/errors[1]/range/start/position",
          "comment": "Inequal values",
          "master": 10015,
          "inspected": 9146
        },
        {
          "path": "/errors[1]/range/end/line",
          "comment": "Inequal values",
          "master": 268,
          "inspected": 495
        },
        {
          "path": "/errors[1]/range/end/column",
          "comment": "Inequal values",
          "master": 15,
          "inspected": 13
        },
        {
          "path": "/errors[1]/range/end/position",
          "comment": "Inequal values",
          "master": 10151,
          "inspected": 17261
        },
        {
          "path": "/errors[3]/range/start/line",
          "comment": "Inequal values",
          "master": 665,
          "inspected": 595
        },
        {
          "path": "/errors[3]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 14
        },
        {
          "path": "/errors[3]/range/start/position",
          "comment": "Inequal values",
          "master": 23577,
          "inspected": 21037
        },
        {
          "path": "/errors[3]/range/end/line",
          "comment": "Inequal values",
          "master": 668,
          "inspected": 820
        },
        {
          "path": "/errors[3]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 15
        },
        {
          "path": "/errors[3]/range/end/position",
          "comment": "Inequal values",
          "master": 23733,
          "inspected": 28868
        },
        {
          "path": "/errors[4]/range/start/line",
          "comment": "Inequal values",
          "master": 854,
          "inspected": 830
        },
        {
          "path": "/errors[4]/range/start/column",
          "comment": "Inequal values",
          "master": 12,
          "inspected": 10
        },
        {
          "path": "/errors[4]/range/start/position",
          "comment": "Inequal values",
          "master": 30147,
          "inspected": 29319
        },
        {
          "path": "/errors[4]/range/end/line",
          "comment": "Inequal values",
          "master": 857,
          "inspected": 864
        },
        {
          "path": "/errors[4]/range/end/column",
          "comment": "Inequal values",
          "master": 13,
          "inspected": 11
        },
        {
          "path": "/errors[4]/range/end/position",
          "comment": "Inequal values",
          "master": 30313,
          "inspected": 30587
        },
        {
          "path": "/errors[6]/range/start/line",
          "comment": "Inequal values",
          "master": 1122,
          "inspected": 1052
        },
        {
          "path": "/errors[6]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 14
        },
        {
          "path": "/errors[6]/range/start/position",
          "comment": "Inequal values",
          "master": 40260,
          "inspected": 37720
        },
        {
          "path": "/errors[6]/range/end/line",
          "comment": "Inequal values",
          "master": 1125,
          "inspected": 1277
        },
        {
          "path": "/errors[6]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 15
        },
        {
          "path": "/errors[6]/range/end/position",
          "comment": "Inequal values",
          "master": 40416,
          "inspected": 45551
        },
        {
          "path": "/errors[8]/range/start/line",
          "comment": "Inequal values",
          "master": 1416,
          "inspected": 1392
        },
        {
          "path": "/errors[8]/range/start/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 16
        },
        {
          "path": "/errors[8]/range/start/position",
          "comment": "Inequal values",
          "master": 50930,
          "inspected": 49965
        },
        {
          "path": "/errors[8]/range/end/line",
          "comment": "Inequal values",
          "master": 1419,
          "inspected": 1646
        },
        {
          "path": "/errors[8]/range/end/column",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 17
        },
        {
          "path": "/errors[8]/range/end/position",
          "comment": "Inequal values",
          "master": 51078,
          "inspected": 59096
        },
        {
          "path": "/errors[10]/range/start/line",
          "comment": "Inequal values",
          "master": 1783,
          "inspected": 1713
        },
        {
          "path": "/errors[10]/range/start/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 16
        },
        {
          "path": "/errors[10]/range/start/position",
          "comment": "Inequal values",
          "master": 64402,
          "inspected": 61722
        },
        {
          "path": "/errors[10]/range/end/line",
          "comment": "Inequal values",
          "master": 1786,
          "inspected": 1938
        },
        {
          "path": "/errors[10]/range/end/column",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 17
        },
        {
          "path": "/errors[10]/range/end/position",
          "comment": "Inequal values",
          "master": 64564,
          "inspected": 70003
        },
        {
          "path": "/errors[12]/range/start/line",
          "comment": "Inequal values",
          "master": 2008,
          "inspected": 2001
        },
        {
          "path": "/errors[12]/range/start/column",
          "comment": "Inequal values",
          "master": 24,
          "inspected": 16
        },
        {
          "path": "/errors[12]/range/start/position",
          "comment": "Inequal values",
          "master": 72392,
          "inspected": 72105
        },
        {
          "path": "/errors[12]/range/end/line",
          "comment": "Inequal values",
          "master": 2233,
          "inspected": 2257
        },
        {
          "path": "/errors[12]/range/end/column",
          "comment": "Inequal values",
          "master": 25,
          "inspected": 17
        },
        {
          "path": "/errors[12]/range/end/position",
          "comment": "Inequal values",
          "master": 85641,
          "inspected": 86577
        },
        {
          "path": "/errors[14]/range/start/line",
          "comment": "Inequal values",
          "master": 2304,
          "inspected": 2297
        },
        {
          "path": "/errors[14]/range/start/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 16
        },
        {
          "path": "/errors[14]/range/start/position",
          "comment": "Inequal values",
          "master": 88406,
          "inspected": 88154
        },
        {
          "path": "/errors[14]/range/end/line",
          "comment": "Inequal values",
          "master": 2371,
          "inspected": 2374
        },
        {
          "path": "/errors[14]/range/end/column",
          "comment": "Inequal values",
          "master": 25,
          "inspected": 17
        },
        {
          "path": "/errors[14]/range/end/position",
          "comment": "Inequal values",
          "master": 90627,
          "inspected": 90705
        },
        {
          "path": "/errors[16]/range/start/line",
          "comment": "Inequal values",
          "master": 2434,
          "inspected": 2427
        },
        {
          "path": "/errors[16]/range/start/column",
          "comment": "Inequal values",
          "master": 22,
          "inspected": 14
        },
        {
          "path": "/errors[16]/range/start/position",
          "comment": "Inequal values",
          "master": 92984,
          "inspected": 92711
        },
        {
          "path": "/errors[16]/range/end/line",
          "comment": "Inequal values",
          "master": 2659,
          "inspected": 2683
        },
        {
          "path": "/errors[16]/range/end/column",
          "comment": "Inequal values",
          "master": 23,
          "inspected": 15
        },
        {
          "path": "/errors[16]/range/end/position",
          "comment": "Inequal values",
          "master": 105783,
          "inspected": 106671
        },
        {
          "path": "/errors[18]/range/start/line",
          "comment": "Inequal values",
          "master": 2838,
          "inspected": 2768
        },
        {
          "path": "/errors[18]/range/start/column",
          "comment": "Inequal values",
          "master": 14,
          "inspected": 12
        },
        {
          "path": "/errors[18]/range/start/position",
          "comment": "Inequal values",
          "master": 112082,
          "inspected": 109682
        },
        {
          "path": "/errors[18]/range/end/line",
          "comment": "Inequal values",
          "master": 2841,
          "inspected": 2993
        },
        {
          "path": "/errors[18]/range/end/column",
          "comment": "Inequal values",
          "master": 15,
          "inspected": 13
        },
        {
          "path": "/errors[18]/range/end/position",
          "comment": "Inequal values",
          "master": 112232,
          "inspected": 117063
        },
        {
          "path": "/errors[19]/range/start/line",
          "comment": "Inequal values",
          "master": 3027,
          "inspected": 3003
        },
        {
          "path": "/errors[19]/range/start/column",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 8
        },
        {
          "path": "/errors[19]/range/start/position",
          "comment": "Inequal values",
          "master": 118288,
          "inspected": 117498
        },
        {
          "path": "/errors[19]/range/end/line",
          "comment": "Inequal values",
          "master": 3030,
          "inspected": 3048
        },
        {
          "path": "/errors[19]/range/end/column",
          "comment": "Inequal values",
          "master": 11,
          "inspected": 9
        },
        {
          "path": "/errors[19]/range/end/position",
          "comment": "Inequal values",
          "master": 118448,
          "inspected": 119089
        },
        {
          "path": "/errors[21]/range/start/line",
          "comment": "Inequal values",
          "master": 3195,
          "inspected": 3125
        },
        {
          "path": "/errors[21]/range/start/column",
          "comment": "Inequal values",
          "master": 14,
          "inspected": 12
        },
        {
          "path": "/errors[21]/range/start/position",
          "comment": "Inequal values",
          "master": 124290,
          "inspected": 121890
        },
        {
          "path": "/errors[21]/range/end/line",
          "comment": "Inequal values",
          "master": 3198,
          "inspected": 3350
        },
        {
          "path": "/errors[21]/range/end/column",
          "comment": "Inequal values",
          "master": 15,
          "inspected": 13
        },
        {
          "path": "/errors[21]/range/end/position",
          "comment": "Inequal values",
          "master": 124440,
          "inspected": 129271
        },
        {
          "path": "/errors[23]/range/start/line",
          "comment": "Inequal values",
          "master": 3532,
          "inspected": 3462
        },
        {
          "path": "/errors[23]/range/start/column",
          "comment": "Inequal values",
          "master": 14,
          "inspected": 12
        },
        {
          "path": "/errors[23]/range/start/position",
          "comment": "Inequal values",
          "master": 135800,
          "inspected": 133400
        },
        {
          "path": "/errors[23]/range/end/line",
          "comment": "Inequal values",
          "master": 3535,
          "inspected": 3687
        },
        {
          "path": "/errors[23]/range/end/column",
          "comment": "Inequal values",
          "master": 15,
          "inspected": 13
        },
        {
          "path": "/errors[23]/range/end/position",
          "comment": "Inequal values",
          "master": 135950,
          "inspected": 140781
        },
        {
          "path": "/errors[25]/range/start/line",
          "comment": "Inequal values",
          "master": 3750,
          "inspected": 3743
        },
        {
          "path": "/errors[25]/range/start/column",
          "comment": "Inequal values",
          "master": 22,
          "inspected": 14
        },
        {
          "path": "/errors[25]/range/start/position",
          "comment": "Inequal values",
          "master": 143277,
          "inspected": 143004
        },
        {
          "path": "/errors[25]/range/end/line",
          "comment": "Inequal values",
          "master": 3794,
          "inspected": 3797
        },
        {
          "path": "/errors[25]/range/end/column",
          "comment": "Inequal values",
          "master": 23,
          "inspected": 15
        },
        {
          "path": "/errors[25]/range/end/position",
          "comment": "Inequal values",
          "master": 145340,
          "inspected": 145415
        },
        {
          "path": "/errors[27]/range/start/line",
          "comment": "Inequal values",
          "master": 3971,
          "inspected": 3901
        },
        {
          "path": "/errors[27]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 14
        },
        {
          "path": "/errors[27]/range/start/position",
          "comment": "Inequal values",
          "master": 151734,
          "inspected": 149194
        },
        {
          "path": "/errors[27]/range/end/line",
          "comment": "Inequal values",
          "master": 3974,
          "inspected": 4126
        },
        {
          "path": "/errors[27]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 15
        },
        {
          "path": "/errors[27]/range/end/position",
          "comment": "Inequal values",
          "master": 151890,
          "inspected": 157025
        },
        {
          "path": "/errors[29]/range/start/line",
          "comment": "Inequal values",
          "master": 4317,
          "inspected": 4247
        },
        {
          "path": "/errors[29]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 14
        },
        {
          "path": "/errors[29]/range/start/position",
          "comment": "Inequal values",
          "master": 164721,
          "inspected": 162181
        },
        {
          "path": "/errors[29]/range/end/line",
          "comment": "Inequal values",
          "master": 4320,
          "inspected": 4472
        },
        {
          "path": "/errors[29]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 15
        },
        {
          "path": "/errors[29]/range/end/position",
          "comment": "Inequal values",
          "master": 164877,
          "inspected": 170012
        },
        {
          "path": "/errors[31]/range/start/line",
          "comment": "Inequal values",
          "master": 4522,
          "inspected": 4515
        },
        {
          "path": "/errors[31]/range/start/column",
          "comment": "Inequal values",
          "master": 22,
          "inspected": 14
        },
        {
          "path": "/errors[31]/range/start/position",
          "comment": "Inequal values",
          "master": 171825,
          "inspected": 171552
        },
        {
          "path": "/errors[31]/range/end/line",
          "comment": "Inequal values",
          "master": 4574,
          "inspected": 4577
        },
        {
          "path": "/errors[31]/range/end/column",
          "comment": "Inequal values",
          "master": 23,
          "inspected": 15
        },
        {
          "path": "/errors[31]/range/end/position",
          "comment": "Inequal values",
          "master": 174312,
          "inspected": 174387
        },
        {
          "path": "/errors[34]/range/start/line",
          "comment": "Inequal values",
          "master": 4796,
          "inspected": 4788
        },
        {
          "path": "/errors[34]/range/start/column",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 8
        },
        {
          "path": "/errors[34]/range/start/position",
          "comment": "Inequal values",
          "master": 181711,
          "inspected": 181448
        },
        {
          "path": "/errors[34]/range/end/line",
          "comment": "Inequal values",
          "master": 4799,
          "inspected": 4810
        },
        {
          "path": "/errors[34]/range/end/column",
          "comment": "Inequal values",
          "master": 11,
          "inspected": 9
        },
        {
          "path": "/errors[34]/range/end/position",
          "comment": "Inequal values",
          "master": 181860,
          "inspected": 182181
        },
        {
          "path": "/errors[36]/range/start/line",
          "comment": "Inequal values",
          "master": 4877,
          "inspected": 4834
        },
        {
          "path": "/errors[36]/range/start/column",
          "comment": "Inequal values",
          "master": 14,
          "inspected": 12
        },
        {
          "path": "/errors[36]/range/start/position",
          "comment": "Inequal values",
          "master": 184424,
          "inspected": 182922
        },
        {
          "path": "/errors[36]/range/end/line",
          "comment": "Inequal values",
          "master": 4880,
          "inspected": 4900
        },
        {
          "path": "/errors[36]/range/end/column",
          "comment": "Inequal values",
          "master": 15,
          "inspected": 13
        },
        {
          "path": "/errors[36]/range/end/position",
          "comment": "Inequal values",
          "master": 184559,
          "inspected": 185160
        },
        {
          "path": "/errors[38]/range/start/line",
          "comment": "Inequal values",
          "master": 4989,
          "inspected": 4946
        },
        {
          "path": "/errors[38]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 14
        },
        {
          "path": "/errors[38]/range/start/position",
          "comment": "Inequal values",
          "master": 188228,
          "inspected": 186640
        },
        {
          "path": "/errors[38]/range/end/line",
          "comment": "Inequal values",
          "master": 4992,
          "inspected": 5012
        },
        {
          "path": "/errors[38]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 15
        },
        {
          "path": "/errors[38]/range/end/position",
          "comment": "Inequal values",
          "master": 188369,
          "inspected": 189010
        },
        {
          "path": "/errors[40]/range/start/line",
          "comment": "Inequal values",
          "master": 5083,
          "inspected": 5040
        },
        {
          "path": "/errors[40]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 14
        },
        {
          "path": "/errors[40]/range/start/position",
          "comment": "Inequal values",
          "master": 191563,
          "inspected": 189975
        },
        {
          "path": "/errors[40]/range/end/line",
          "comment": "Inequal values",
          "master": 5086,
          "inspected": 5106
        },
        {
          "path": "/errors[40]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 15
        },
        {
          "path": "/errors[40]/range/end/position",
          "comment": "Inequal values",
          "master": 191704,
          "inspected": 192345
        },
        {
          "path": "/errors[41]/range/start/line",
          "comment": "Inequal values",
          "master": 5143,
          "inspected": 5123
        },
        {
          "path": "/errors[41]/range/start/column",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 8
        },
        {
          "path": "/errors[41]/range/start/position",
          "comment": "Inequal values",
          "master": 193584,
          "inspected": 192943
        },
        {
          "path": "/errors[41]/range/end/line",
          "comment": "Inequal values",
          "master": 5146,
          "inspected": 5157
        },
        {
          "path": "/errors[41]/range/end/column",
          "comment": "Inequal values",
          "master": 11,
          "inspected": 9
        },
        {
          "path": "/errors[41]/range/end/position",
          "comment": "Inequal values",
          "master": 193793,
          "inspected": 194144
        },
        {
          "path": "/errors[43]/range/start/line",
          "comment": "Inequal values",
          "master": 5222,
          "inspected": 5192
        },
        {
          "path": "/errors[43]/range/start/column",
          "comment": "Inequal values",
          "master": 14,
          "inspected": 12
        },
        {
          "path": "/errors[43]/range/start/position",
          "comment": "Inequal values",
          "master": 196264,
          "inspected": 195292
        },
        {
          "path": "/errors[43]/range/end/line",
          "comment": "Inequal values",
          "master": 5225,
          "inspected": 5286
        },
        {
          "path": "/errors[43]/range/end/column",
          "comment": "Inequal values",
          "master": 15,
          "inspected": 13
        },
        {
          "path": "/errors[43]/range/end/position",
          "comment": "Inequal values",
          "master": 196408,
          "inspected": 198477
        },
        {
          "path": "/errors[45]/range/start/line",
          "comment": "Inequal values",
          "master": 5379,
          "inspected": 5349
        },
        {
          "path": "/errors[45]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 14
        },
        {
          "path": "/errors[45]/range/start/position",
          "comment": "Inequal values",
          "master": 201738,
          "inspected": 200706
        },
        {
          "path": "/errors[45]/range/end/line",
          "comment": "Inequal values",
          "master": 5382,
          "inspected": 5443
        },
        {
          "path": "/errors[45]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 15
        },
        {
          "path": "/errors[45]/range/end/position",
          "comment": "Inequal values",
          "master": 201888,
          "inspected": 204079
        },
        {
          "path": "/errors[47]/range/start/line",
          "comment": "Inequal values",
          "master": 5526,
          "inspected": 5496
        },
        {
          "path": "/errors[47]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 14
        },
        {
          "path": "/errors[47]/range/start/position",
          "comment": "Inequal values",
          "master": 207084,
          "inspected": 206052
        },
        {
          "path": "/errors[47]/range/end/line",
          "comment": "Inequal values",
          "master": 5529,
          "inspected": 5590
        },
        {
          "path": "/errors[47]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 15
        },
        {
          "path": "/errors[47]/range/end/position",
          "comment": "Inequal values",
          "master": 207234,
          "inspected": 209425
        },
        {
          "path": "/errors[49]/range/start/line",
          "comment": "Inequal values",
          "master": 5692,
          "inspected": 5685
        },
        {
          "path": "/errors[49]/range/start/column",
          "comment": "Inequal values",
          "master": 20,
          "inspected": 12
        },
        {
          "path": "/errors[49]/range/start/position",
          "comment": "Inequal values",
          "master": 213149,
          "inspected": 212890
        },
        {
          "path": "/errors[49]/range/end/line",
          "comment": "Inequal values",
          "master": 5917,
          "inspected": 5920
        },
        {
          "path": "/errors[49]/range/end/column",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 13
        },
        {
          "path": "/errors[49]/range/end/position",
          "comment": "Inequal values",
          "master": 225498,
          "inspected": 225567
        },
        {
          "path": "/errors[51]/range/start/line",
          "comment": "Inequal values",
          "master": 6019,
          "inspected": 6009
        },
        {
          "path": "/errors[51]/range/start/column",
          "comment": "Inequal values",
          "master": 20,
          "inspected": 12
        },
        {
          "path": "/errors[51]/range/start/position",
          "comment": "Inequal values",
          "master": 229184,
          "inspected": 228815
        },
        {
          "path": "/errors[51]/range/end/line",
          "comment": "Inequal values",
          "master": 6197,
          "inspected": 6200
        },
        {
          "path": "/errors[51]/range/end/column",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 13
        },
        {
          "path": "/errors[51]/range/end/position",
          "comment": "Inequal values",
          "master": 238707,
          "inspected": 238776
        },
        {
          "path": "/errors[55]/range/start/line",
          "comment": "Inequal values",
          "master": 6326,
          "inspected": 6319
        },
        {
          "path": "/errors[55]/range/start/column",
          "comment": "Inequal values",
          "master": 14,
          "inspected": 12
        },
        {
          "path": "/errors[55]/range/start/position",
          "comment": "Inequal values",
          "master": 243778,
          "inspected": 243554
        },
        {
          "path": "/errors[55]/range/end/line",
          "comment": "Inequal values",
          "master": 6431,
          "inspected": 6434
        },
        {
          "path": "/errors[55]/range/end/column",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 13
        },
        {
          "path": "/errors[55]/range/end/position",
          "comment": "Inequal values",
          "master": 248018,
          "inspected": 248084
        },
        {
          "path": "/errors[56]/range/start/line",
          "comment": "Inequal values",
          "master": 6453,
          "inspected": 6441
        },
        {
          "path": "/errors[56]/range/start/column",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 8
        },
        {
          "path": "/errors[56]/range/start/position",
          "comment": "Inequal values",
          "master": 248626,
          "inspected": 248252
        },
        {
          "path": "/errors[56]/range/end/line",
          "comment": "Inequal values",
          "master": 6456,
          "inspected": 6504
        },
        {
          "path": "/errors[56]/range/end/column",
          "comment": "Inequal values",
          "master": 11,
          "inspected": 9
        },
        {
          "path": "/errors[56]/range/end/position",
          "comment": "Inequal values",
          "master": 248748,
          "inspected": 250455
        },
        {
          "path": "/errors[58]/range/start/line",
          "comment": "Inequal values",
          "master": 6553,
          "inspected": 6533
        },
        {
          "path": "/errors[58]/range/start/column",
          "comment": "Inequal values",
          "master": 14,
          "inspected": 12
        },
        {
          "path": "/errors[58]/range/start/position",
          "comment": "Inequal values",
          "master": 252198,
          "inspected": 251506
        },
        {
          "path": "/errors[58]/range/end/line",
          "comment": "Inequal values",
          "master": 6556,
          "inspected": 6637
        },
        {
          "path": "/errors[58]/range/end/column",
          "comment": "Inequal values",
          "master": 15,
          "inspected": 13
        },
        {
          "path": "/errors[58]/range/end/position",
          "comment": "Inequal values",
          "master": 252329,
          "inspected": 255421
        },
        {
          "path": "/errors[60]/range/start/line",
          "comment": "Inequal values",
          "master": 6688,
          "inspected": 6668
        },
        {
          "path": "/errors[60]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 14
        },
        {
          "path": "/errors[60]/range/start/position",
          "comment": "Inequal values",
          "master": 257348,
          "inspected": 256616
        },
        {
          "path": "/errors[60]/range/end/line",
          "comment": "Inequal values",
          "master": 6691,
          "inspected": 6772
        },
        {
          "path": "/errors[60]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 15
        },
        {
          "path": "/errors[60]/range/end/position",
          "comment": "Inequal values",
          "master": 257485,
          "inspected": 260739
        },
        {
          "path": "/errors[61]/range/start/line",
          "comment": "Inequal values",
          "master": 6807,
          "inspected": 6795
        },
        {
          "path": "/errors[61]/range/start/column",
          "comment": "Inequal values",
          "master": 12,
          "inspected": 10
        },
        {
          "path": "/errors[61]/range/start/position",
          "comment": "Inequal values",
          "master": 262080,
          "inspected": 261629
        },
        {
          "path": "/errors[61]/range/end/line",
          "comment": "Inequal values",
          "master": 6810,
          "inspected": 6861
        },
        {
          "path": "/errors[61]/range/end/column",
          "comment": "Inequal values",
          "master": 13,
          "inspected": 11
        },
        {
          "path": "/errors[61]/range/end/position",
          "comment": "Inequal values",
          "master": 262236,
          "inspected": 264214
        },
        {
          "path": "/errors[63]/range/start/line",
          "comment": "Inequal values",
          "master": 6910,
          "inspected": 6890
        },
        {
          "path": "/errors[63]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 14
        },
        {
          "path": "/errors[63]/range/start/position",
          "comment": "Inequal values",
          "master": 266052,
          "inspected": 265320
        },
        {
          "path": "/errors[63]/range/end/line",
          "comment": "Inequal values",
          "master": 6913,
          "inspected": 6994
        },
        {
          "path": "/errors[63]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 15
        },
        {
          "path": "/errors[63]/range/end/position",
          "comment": "Inequal values",
          "master": 266189,
          "inspected": 269443
        },
        {
          "path": "/errors[65]/range/start/line",
          "comment": "Inequal values",
          "master": 7162,
          "inspected": 7138
        },
        {
          "path": "/errors[65]/range/start/column",
          "comment": "Inequal values",
          "master": 18,
          "inspected": 16
        },
        {
          "path": "/errors[65]/range/start/position",
          "comment": "Inequal values",
          "master": 276223,
          "inspected": 275258
        },
        {
          "path": "/errors[65]/range/end/line",
          "comment": "Inequal values",
          "master": 7165,
          "inspected": 7392
        },
        {
          "path": "/errors[65]/range/end/column",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 17
        },
        {
          "path": "/errors[65]/range/end/position",
          "comment": "Inequal values",
          "master": 276371,
          "inspected": 284389
        },
        {
          "path": "/errors[68]/range/start/line",
          "comment": "Inequal values",
          "master": 7535,
          "inspected": 7519
        },
        {
          "path": "/errors[68]/range/start/column",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 8
        },
        {
          "path": "/errors[68]/range/start/position",
          "comment": "Inequal values",
          "master": 289152,
          "inspected": 288617
        },
        {
          "path": "/errors[68]/range/end/line",
          "comment": "Inequal values",
          "master": 7538,
          "inspected": 7549
        },
        {
          "path": "/errors[68]/range/end/column",
          "comment": "Inequal values",
          "master": 11,
          "inspected": 9
        },
        {
          "path": "/errors[68]/range/end/position",
          "comment": "Inequal values",
          "master": 289307,
          "inspected": 289654
        },
        {
          "path": "/errors[70]/range/start/line",
          "comment": "Inequal values",
          "master": 7618,
          "inspected": 7582
        },
        {
          "path": "/errors[70]/range/start/column",
          "comment": "Inequal values",
          "master": 20,
          "inspected": 12
        },
        {
          "path": "/errors[70]/range/start/position",
          "comment": "Inequal values",
          "master": 292167,
          "inspected": 290737
        },
        {
          "path": "/errors[70]/range/end/line",
          "comment": "Inequal values",
          "master": 7621,
          "inspected": 7671
        },
        {
          "path": "/errors[70]/range/end/column",
          "comment": "Inequal values",
          "master": 21,
          "inspected": 13
        },
        {
          "path": "/errors[70]/range/end/position",
          "comment": "Inequal values",
          "master": 292323,
          "inspected": 294291
        },
        {
          "path": "/errors[72]/range/start/line",
          "comment": "Inequal values",
          "master": 7740,
          "inspected": 7704
        },
        {
          "path": "/errors[72]/range/start/column",
          "comment": "Inequal values",
          "master": 22,
          "inspected": 14
        },
        {
          "path": "/errors[72]/range/start/position",
          "comment": "Inequal values",
          "master": 296916,
          "inspected": 295414
        },
        {
          "path": "/errors[72]/range/end/line",
          "comment": "Inequal values",
          "master": 7743,
          "inspected": 7793
        },
        {
          "path": "/errors[72]/range/end/column",
          "comment": "Inequal values",
          "master": 23,
          "inspected": 15
        },
        {
          "path": "/errors[72]/range/end/position",
          "comment": "Inequal values",
          "master": 297078,
          "inspected": 299146
        },
        {
          "path": "/errors[73]/range/start/line",
          "comment": "Inequal values",
          "master": 7810,
          "inspected": 7798
        },
        {
          "path": "/errors[73]/range/start/column",
          "comment": "Inequal values",
          "master": 12,
          "inspected": 10
        },
        {
          "path": "/errors[73]/range/start/position",
          "comment": "Inequal values",
          "master": 299692,
          "inspected": 299240
        },
        {
          "path": "/errors[73]/range/end/line",
          "comment": "Inequal values",
          "master": 7813,
          "inspected": 7815
        },
        {
          "path": "/errors[73]/range/end/column",
          "comment": "Inequal values",
          "master": 13,
          "inspected": 11
        },
        {
          "path": "/errors[73]/range/end/position",
          "comment": "Inequal values",
          "master": 299816,
          "inspected": 299841
        },
        {
          "path": "/errors[75]/range/start/line",
          "comment": "Inequal values",
          "master": 7884,
          "inspected": 7848
        },
        {
          "path": "/errors[75]/range/start/column",
          "comment": "Inequal values",
          "master": 22,
          "inspected": 14
        },
        {
          "path": "/errors[75]/range/start/position",
          "comment": "Inequal values",
          "master": 302492,
          "inspected": 300990
        },
        {
          "path": "/errors[75]/range/end/line",
          "comment": "Inequal values",
          "master": 7887,
          "inspected": 7937
        },
        {
          "path": "/errors[75]/range/end/column",
          "comment": "Inequal values",
          "master": 23,
          "inspected": 15
        },
        {
          "path": "/errors[75]/range/end/position",
          "comment": "Inequal values",
          "master": 302654,
          "inspected": 304722
        },
        {
          "path": "/errors[78]/range/start/line",
          "comment": "Inequal values",
          "master": 8059,
          "inspected": 8051
        },
        {
          "path": "/errors[78]/range/start/column",
          "comment": "Inequal values",
          "master": 10,
          "inspected": 8
        },
        {
          "path": "/errors[78]/range/start/position",
          "comment": "Inequal values",
          "master": 309789,
          "inspected": 309539
        },
        {
          "path": "/errors[78]/range/end/line",
          "comment": "Inequal values",
          "master": 8062,
          "inspected": 8081
        },
        {
          "path": "/errors[78]/range/end/column",
          "comment": "Inequal values",
          "master": 11,
          "inspected": 9
        },
        {
          "path": "/errors[78]/range/end/position",
          "comment": "Inequal values",
          "master": 309884,
          "inspected": 310559
        },
        {
          "path": "/errors[80]/range/start/line",
          "comment": "Inequal values",
          "master": 8169,
          "inspected": 8116
        },
        {
          "path": "/errors[80]/range/start/column",
          "comment": "Inequal values",
          "master": 14,
          "inspected": 12
        },
        {
          "path": "/errors[80]/range/start/position",
          "comment": "Inequal values",
          "master": 313131,
          "inspected": 311725
        },
        {
          "path": "/errors[80]/range/end/line",
          "comment": "Inequal values",
          "master": 8171,
          "inspected": 8199
        },
        {
          "path": "/errors[80]/range/end/column",
          "comment": "Inequal values",
          "master": 15,
          "inspected": 13
        },
        {
          "path": "/errors[80]/range/end/position",
          "comment": "Inequal values",
          "master": 313199,
          "inspected": 313919
        },
        {
          "path": "/errors[82]/range/start/line",
          "comment": "Inequal values",
          "master": 8293,
          "inspected": 8240
        },
        {
          "path": "/errors[82]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 14
        },
        {
          "path": "/errors[82]/range/start/position",
          "comment": "Inequal values",
          "master": 316842,
          "inspected": 315330
        },
        {
          "path": "/errors[82]/range/end/line",
          "comment": "Inequal values",
          "master": 8295,
          "inspected": 8323
        },
        {
          "path": "/errors[82]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 15
        },
        {
          "path": "/errors[82]/range/end/position",
          "comment": "Inequal values",
          "master": 316914,
          "inspected": 317690
        },
        {
          "path": "/errors[83]/range/start/line",
          "comment": "Inequal values",
          "master": 8345,
          "inspected": 8337
        },
        {
          "path": "/errors[83]/range/start/column",
          "comment": "Inequal values",
          "master": 12,
          "inspected": 10
        },
        {
          "path": "/errors[83]/range/start/position",
          "comment": "Inequal values",
          "master": 318370,
          "inspected": 318089
        },
        {
          "path": "/errors[83]/range/end/line",
          "comment": "Inequal values",
          "master": 8353,
          "inspected": 8355
        },
        {
          "path": "/errors[83]/range/end/column",
          "comment": "Inequal values",
          "master": 13,
          "inspected": 11
        },
        {
          "path": "/errors[83]/range/end/position",
          "comment": "Inequal values",
          "master": 318646,
          "inspected": 318671
        },
        {
          "path": "/errors[85]/range/start/line",
          "comment": "Inequal values",
          "master": 8443,
          "inspected": 8390
        },
        {
          "path": "/errors[85]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 14
        },
        {
          "path": "/errors[85]/range/start/position",
          "comment": "Inequal values",
          "master": 321425,
          "inspected": 319913
        },
        {
          "path": "/errors[85]/range/end/line",
          "comment": "Inequal values",
          "master": 8445,
          "inspected": 8473
        },
        {
          "path": "/errors[85]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 15
        },
        {
          "path": "/errors[85]/range/end/position",
          "comment": "Inequal values",
          "master": 321497,
          "inspected": 322273
        }
      ]
    }
  },
  "org_077f577e-bc45-4181-83e9-47cdffed1f11": {
    "api_1646_ver_1650": {
      "diff": [
        {
          "path": "/errors[2]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol '_'",
          "inspected": "Can not parse JSON example: Unexpected symbol <_> at 14:23\n12 |   \"step\" : 2,\n13 |   \"token\": 49876527,\n14 |   \"simulation\": 463527_58376236\n                           ^\n15 | }\n16 | "
        },
        {
          "path": "/errors[2]/range/start/line",
          "comment": "Inequal values",
          "master": 95,
          "inspected": 81
        },
        {
          "path": "/errors[2]/range/start/column",
          "comment": "Inequal values",
          "master": 36,
          "inspected": 12
        },
        {
          "path": "/errors[2]/range/start/position",
          "comment": "Inequal values",
          "master": 3025,
          "inspected": 2376
        },
        {
          "path": "/errors[2]/range/end/line",
          "comment": "Inequal values",
          "master": 95,
          "inspected": 81
        },
        {
          "path": "/errors[2]/range/end/column",
          "comment": "Inequal values",
          "master": 37,
          "inspected": 19
        },
        {
          "path": "/errors[2]/range/end/position",
          "comment": "Inequal values",
          "master": 3026,
          "inspected": 2383
        }
      ]
    }
  },
  "org_07845f49-7c7e-4b9d-9adc-64fcaa59a720": {
    "api_70310_ver_73395": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_0796c1ea-89f4-4eb1-93fe-f6eeaf9624d9": {
    "api_76234_ver_79348": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_08745094-1ab2-4004-acb3-623b8d64ee5b": {
    "api_28207_ver_30022": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_087ce92a-c636-4ef0-820c-3b3ef4ec8869": {
    "api_32437_ver_33806": {
      "diff": [
        {
          "path": "/specification/resources[1]/methods[0]/queryParameters/dealerRepId/example",
          "comment": "Inequal values",
          "master": "23123",
          "inspected": 23123
        },
        {
          "path": "/errors[13]/code",
          "comment": "Inequal values",
          "master": "INCLUDE_ERROR",
          "inspected": "CAN_NOT_PARSE_JSON"
        },
        {
          "path": "/errors[13]/message",
          "comment": "Inequal values",
          "master": "Can not resolve examples/submit-wip/200-submit-wip-success.json",
          "inspected": "Can not parse JSON example: Unexpected symbol <C> at 1:1\n1 | Can not resolve examples/submit-wip/200-submit-wip-success.json\n    ^"
        },
        {
          "path": "/errors[13]/isWarning",
          "comment": "Defined/undefined mismatch",
          "inspected": true
        },
        {
          "path": "/errors[14]/code",
          "comment": "Inequal values",
          "master": "CAN_NOT_PARSE_JSON",
          "inspected": "INCLUDE_ERROR"
        },
        {
          "path": "/errors[14]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'C'",
          "inspected": "Can not resolve examples/submit-wip/200-submit-wip-success.json"
        },
        {
          "path": "/errors[14]/range/start/column",
          "comment": "Inequal values",
          "master": 30,
          "inspected": 12
        },
        {
          "path": "/errors[14]/range/start/position",
          "comment": "Inequal values",
          "master": 4161,
          "inspected": 4143
        },
        {
          "path": "/errors[14]/range/end/column",
          "comment": "Inequal values",
          "master": 31,
          "inspected": 19
        },
        {
          "path": "/errors[14]/range/end/position",
          "comment": "Inequal values",
          "master": 4162,
          "inspected": 4150
        },
        {
          "path": "/errors[14]/isWarning",
          "comment": "Defined/undefined mismatch",
          "master": true
        },
        {
          "path": "/errors[16]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'C'",
          "inspected": "Can not parse JSON example: Unexpected symbol <C> at 1:1\n1 | Can not resolve examples/submit-wip/400-unanswered-questionnaires.json\n    ^"
        },
        {
          "path": "/errors[16]/range/start/column",
          "comment": "Inequal values",
          "master": 30,
          "inspected": 12
        },
        {
          "path": "/errors[16]/range/start/position",
          "comment": "Inequal values",
          "master": 7048,
          "inspected": 7030
        },
        {
          "path": "/errors[16]/range/end/column",
          "comment": "Inequal values",
          "master": 31,
          "inspected": 19
        },
        {
          "path": "/errors[16]/range/end/position",
          "comment": "Inequal values",
          "master": 7049,
          "inspected": 7037
        },
        {
          "path": "/errors[20]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'C'",
          "inspected": "Can not parse JSON example: Unexpected symbol <C> at 1:1\n1 | Can not resolve examples/revived/revived-offer-success.json\n    ^"
        },
        {
          "path": "/errors[20]/range/start/column",
          "comment": "Inequal values",
          "master": 30,
          "inspected": 12
        },
        {
          "path": "/errors[20]/range/start/position",
          "comment": "Inequal values",
          "master": 9697,
          "inspected": 9679
        },
        {
          "path": "/errors[20]/range/end/column",
          "comment": "Inequal values",
          "master": 31,
          "inspected": 19
        },
        {
          "path": "/errors[20]/range/end/position",
          "comment": "Inequal values",
          "master": 9698,
          "inspected": 9686
        },
        {
          "path": "/errors[22]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'C'",
          "inspected": "Can not parse JSON example: Unexpected symbol <C> at 1:1\n1 | Can not resolve examples/revived/revived-offer-not-found.json\n    ^"
        },
        {
          "path": "/errors[22]/range/start/column",
          "comment": "Inequal values",
          "master": 30,
          "inspected": 12
        },
        {
          "path": "/errors[22]/range/start/position",
          "comment": "Inequal values",
          "master": 10001,
          "inspected": 9983
        },
        {
          "path": "/errors[22]/range/end/column",
          "comment": "Inequal values",
          "master": 31,
          "inspected": 19
        },
        {
          "path": "/errors[22]/range/end/position",
          "comment": "Inequal values",
          "master": 10002,
          "inspected": 9990
        },
        {
          "path": "/errors[30]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'C'",
          "inspected": "Can not parse JSON example: Unexpected symbol <C> at 1:1\n1 | Can not resolve examples/invalid-offerid.json\n    ^"
        },
        {
          "path": "/errors[30]/range/start/column",
          "comment": "Inequal values",
          "master": 36,
          "inspected": 18
        },
        {
          "path": "/errors[30]/range/start/position",
          "comment": "Inequal values",
          "master": 12227,
          "inspected": 12209
        },
        {
          "path": "/errors[30]/range/end/column",
          "comment": "Inequal values",
          "master": 37,
          "inspected": 25
        },
        {
          "path": "/errors[30]/range/end/position",
          "comment": "Inequal values",
          "master": 12228,
          "inspected": 12216
        }
      ]
    },
    "api_33854_ver_35253": {
      "diff": [
        {
          "path": "/specification/resources[1]/methods[0]/queryParameters/dealerRepId/example",
          "comment": "Inequal values",
          "master": "23123",
          "inspected": 23123
        },
        {
          "path": "/errors[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[3]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        }
      ]
    },
    "api_33854_ver_36102": {
      "diff": [
        {
          "path": "/specification/resources[2]/resources[0]/resources[0]/methods[0]/queryParameters/dealerRepId/example",
          "comment": "Inequal values",
          "master": "23123",
          "inspected": 23123
        },
        {
          "path": "/errors[9]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[9]/trace[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[11]/range/start/line",
          "comment": "Inequal values",
          "master": 5,
          "inspected": 0
        },
        {
          "path": "/errors[11]/range/start/column",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 0
        },
        {
          "path": "/errors[11]/range/start/position",
          "comment": "Inequal values",
          "master": 140,
          "inspected": 0
        },
        {
          "path": "/errors[11]/range/end/line",
          "comment": "Inequal values",
          "master": 47,
          "inspected": 112
        },
        {
          "path": "/errors[11]/range/end/column",
          "comment": "Inequal values",
          "master": 5,
          "inspected": 1
        },
        {
          "path": "/errors[11]/range/end/position",
          "comment": "Inequal values",
          "master": 1387,
          "inspected": 3285
        },
        {
          "path": "/errors[12]/range/start/line",
          "comment": "Inequal values",
          "master": 9,
          "inspected": 0
        },
        {
          "path": "/errors[12]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 0
        },
        {
          "path": "/errors[12]/range/start/position",
          "comment": "Inequal values",
          "master": 308,
          "inspected": 0
        },
        {
          "path": "/errors[12]/range/end/line",
          "comment": "Inequal values",
          "master": 25,
          "inspected": 74
        },
        {
          "path": "/errors[12]/range/end/column",
          "comment": "Inequal values",
          "master": 7,
          "inspected": 1
        },
        {
          "path": "/errors[12]/range/end/position",
          "comment": "Inequal values",
          "master": 828,
          "inspected": 3178
        }
      ]
    },
    "api_33854_ver_36332": {
      "diff": [
        {
          "path": "/specification/resources[6]/methods[0]/queryParameters/dealerRepId/example",
          "comment": "Inequal values",
          "master": "23123",
          "inspected": 23123
        },
        {
          "path": "/errors",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 12,
                  "column": 4,
                  "position": 403
                },
                "end": {
                  "line": 12,
                  "column": 22,
                  "position": 421
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 14,
                  "column": 4,
                  "position": 517
                },
                "end": {
                  "line": 14,
                  "column": 15,
                  "position": 528
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 42,
                  "column": 8,
                  "position": 1600
                },
                "end": {
                  "line": 42,
                  "column": 15,
                  "position": 1607
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 67,
                  "column": 8,
                  "position": 2673
                },
                "end": {
                  "line": 67,
                  "column": 15,
                  "position": 2680
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 83,
                  "column": 14,
                  "position": 3672
                },
                "end": {
                  "line": 83,
                  "column": 21,
                  "position": 3679
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip-not-found'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 88,
                  "column": 14,
                  "position": 3854
                },
                "end": {
                  "line": 88,
                  "column": 20,
                  "position": 3860
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 99,
                  "column": 8,
                  "position": 4165
                },
                "end": {
                  "line": 99,
                  "column": 15,
                  "position": 4172
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 122,
                  "column": 14,
                  "position": 5676
                },
                "end": {
                  "line": 122,
                  "column": 21,
                  "position": 5683
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 142,
                  "column": 12,
                  "position": 6637
                },
                "end": {
                  "line": 142,
                  "column": 37,
                  "position": 6662
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 191,
                  "column": 8,
                  "position": 11658
                },
                "end": {
                  "line": 191,
                  "column": 15,
                  "position": 11665
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 206,
                  "column": 12,
                  "position": 14582
                },
                "end": {
                  "line": 206,
                  "column": 19,
                  "position": 14589
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 235,
                  "column": 8,
                  "position": 18107
                },
                "end": {
                  "line": 235,
                  "column": 15,
                  "position": 18114
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 241,
                  "column": 8,
                  "position": 18304
                },
                "end": {
                  "line": 241,
                  "column": 15,
                  "position": 18311
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 289,
                  "column": 8,
                  "position": 20657
                },
                "end": {
                  "line": 289,
                  "column": 15,
                  "position": 20664
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 295,
                  "column": 8,
                  "position": 20854
                },
                "end": {
                  "line": 295,
                  "column": 15,
                  "position": 20861
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 355,
                  "column": 8,
                  "position": 23237
                },
                "end": {
                  "line": 355,
                  "column": 15,
                  "position": 23244
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 361,
                  "column": 8,
                  "position": 23409
                },
                "end": {
                  "line": 361,
                  "column": 15,
                  "position": 23416
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 487,
                  "column": 8,
                  "position": 38773
                },
                "end": {
                  "line": 487,
                  "column": 15,
                  "position": 38780
                }
              },
              "isWarning": true
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type object",
              "path": "examples/qdocument/404.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "position": 38
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type object",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 178,
                      "column": 14,
                      "position": 10969
                    },
                    "end": {
                      "line": 178,
                      "column": 21,
                      "position": 10976
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 6,
                  "column": 4,
                  "position": 141
                },
                "end": {
                  "line": 6,
                  "column": 23,
                  "position": 160
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 7,
                  "column": 4,
                  "position": 167
                },
                "end": {
                  "line": 7,
                  "column": 16,
                  "position": 179
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 8,
                  "column": 4,
                  "position": 186
                },
                "end": {
                  "line": 8,
                  "column": 24,
                  "position": 206
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 4,
                  "position": 213
                },
                "end": {
                  "line": 9,
                  "column": 20,
                  "position": 229
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 11,
                  "column": 4,
                  "position": 256
                },
                "end": {
                  "line": 11,
                  "column": 25,
                  "position": 277
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 281,
                      "column": 12,
                      "position": 20422
                    },
                    "end": {
                      "line": 281,
                      "column": 19,
                      "position": 20429
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 281,
                      "column": 12,
                      "position": 20422
                    },
                    "end": {
                      "line": 281,
                      "column": 19,
                      "position": 20429
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 140
                },
                "end": {
                  "line": 47,
                  "column": 5,
                  "position": 1387
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 17,
                      "column": 4,
                      "position": 702
                    },
                    "end": {
                      "line": 17,
                      "column": 10,
                      "position": 708
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 16,
                  "position": 308
                },
                "end": {
                  "line": 25,
                  "column": 7,
                  "position": 828
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 20,
                      "column": 4,
                      "position": 867
                    },
                    "end": {
                      "line": 20,
                      "column": 7,
                      "position": 870
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 12,
                  "column": 4,
                  "position": 403
                },
                "end": {
                  "line": 12,
                  "column": 22,
                  "position": 421
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 14,
                  "column": 4,
                  "position": 517
                },
                "end": {
                  "line": 14,
                  "column": 15,
                  "position": 528
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 42,
                  "column": 8,
                  "position": 1600
                },
                "end": {
                  "line": 42,
                  "column": 15,
                  "position": 1607
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 67,
                  "column": 8,
                  "position": 2673
                },
                "end": {
                  "line": 67,
                  "column": 15,
                  "position": 2680
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 83,
                  "column": 14,
                  "position": 3672
                },
                "end": {
                  "line": 83,
                  "column": 21,
                  "position": 3679
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip-not-found'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 88,
                  "column": 14,
                  "position": 3854
                },
                "end": {
                  "line": 88,
                  "column": 20,
                  "position": 3860
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 99,
                  "column": 8,
                  "position": 4165
                },
                "end": {
                  "line": 99,
                  "column": 15,
                  "position": 4172
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 122,
                  "column": 14,
                  "position": 5676
                },
                "end": {
                  "line": 122,
                  "column": 21,
                  "position": 5683
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 142,
                  "column": 12,
                  "position": 6637
                },
                "end": {
                  "line": 142,
                  "column": 37,
                  "position": 6662
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 191,
                  "column": 8,
                  "position": 11658
                },
                "end": {
                  "line": 191,
                  "column": 15,
                  "position": 11665
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 206,
                  "column": 12,
                  "position": 14582
                },
                "end": {
                  "line": 206,
                  "column": 19,
                  "position": 14589
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 235,
                  "column": 8,
                  "position": 18107
                },
                "end": {
                  "line": 235,
                  "column": 15,
                  "position": 18114
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 241,
                  "column": 8,
                  "position": 18304
                },
                "end": {
                  "line": 241,
                  "column": 15,
                  "position": 18311
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 289,
                  "column": 8,
                  "position": 20657
                },
                "end": {
                  "line": 289,
                  "column": 15,
                  "position": 20664
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 295,
                  "column": 8,
                  "position": 20854
                },
                "end": {
                  "line": 295,
                  "column": 15,
                  "position": 20861
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 355,
                  "column": 8,
                  "position": 23237
                },
                "end": {
                  "line": 355,
                  "column": 15,
                  "position": 23244
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 361,
                  "column": 8,
                  "position": 23409
                },
                "end": {
                  "line": 361,
                  "column": 15,
                  "position": 23416
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 487,
                  "column": 8,
                  "position": 38773
                },
                "end": {
                  "line": 487,
                  "column": 15,
                  "position": 38780
                }
              },
              "isWarning": true
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type object",
              "path": "examples/qdocument/404.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "position": 38
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type object",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 178,
                      "column": 14,
                      "position": 10969
                    },
                    "end": {
                      "line": 178,
                      "column": 21,
                      "position": 10976
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 247,
                  "column": 1,
                  "position": 5754
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 247,
                  "column": 1,
                  "position": 5754
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 172,
                      "column": 14,
                      "position": 10733
                    },
                    "end": {
                      "line": 172,
                      "column": 21,
                      "position": 10740
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 281,
                      "column": 12,
                      "position": 20422
                    },
                    "end": {
                      "line": 281,
                      "column": 19,
                      "position": 20429
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 281,
                      "column": 12,
                      "position": 20422
                    },
                    "end": {
                      "line": 281,
                      "column": 19,
                      "position": 20429
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 112,
                  "column": 1,
                  "position": 3285
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 17,
                      "column": 4,
                      "position": 702
                    },
                    "end": {
                      "line": 17,
                      "column": 10,
                      "position": 708
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 74,
                  "column": 1,
                  "position": 3178
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 20,
                      "column": 4,
                      "position": 867
                    },
                    "end": {
                      "line": 20,
                      "column": 7,
                      "position": 870
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ]
        }
      ]
    },
    "api_33854_ver_41894": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/vehicleId/example",
          "comment": "Inequal values",
          "master": "227137",
          "inspected": 227137
        },
        {
          "path": "/specification/resources[7]/methods[0]/queryParameters/dealerRepId/example",
          "comment": "Inequal values",
          "master": "23123",
          "inspected": 23123
        },
        {
          "path": "/errors",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 13,
                  "column": 4,
                  "position": 446
                },
                "end": {
                  "line": 13,
                  "column": 22,
                  "position": 464
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 15,
                  "column": 4,
                  "position": 560
                },
                "end": {
                  "line": 15,
                  "column": 15,
                  "position": 571
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Cannot tokenize symbol 'c'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 43,
                  "column": 18,
                  "position": 1492
                },
                "end": {
                  "line": 43,
                  "column": 19,
                  "position": 1493
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 69,
                  "column": 8,
                  "position": 2359
                },
                "end": {
                  "line": 69,
                  "column": 15,
                  "position": 2366
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 94,
                  "column": 8,
                  "position": 3432
                },
                "end": {
                  "line": 94,
                  "column": 15,
                  "position": 3439
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 110,
                  "column": 14,
                  "position": 4431
                },
                "end": {
                  "line": 110,
                  "column": 21,
                  "position": 4438
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip-not-found'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 115,
                  "column": 14,
                  "position": 4613
                },
                "end": {
                  "line": 115,
                  "column": 20,
                  "position": 4619
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 126,
                  "column": 8,
                  "position": 4924
                },
                "end": {
                  "line": 126,
                  "column": 15,
                  "position": 4931
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 149,
                  "column": 14,
                  "position": 6435
                },
                "end": {
                  "line": 149,
                  "column": 21,
                  "position": 6442
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 169,
                  "column": 12,
                  "position": 7396
                },
                "end": {
                  "line": 169,
                  "column": 37,
                  "position": 7421
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 218,
                  "column": 8,
                  "position": 12417
                },
                "end": {
                  "line": 218,
                  "column": 15,
                  "position": 12424
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 262,
                  "column": 8,
                  "position": 18866
                },
                "end": {
                  "line": 262,
                  "column": 15,
                  "position": 18873
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 268,
                  "column": 8,
                  "position": 19063
                },
                "end": {
                  "line": 268,
                  "column": 15,
                  "position": 19070
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 316,
                  "column": 8,
                  "position": 21416
                },
                "end": {
                  "line": 316,
                  "column": 15,
                  "position": 21423
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 322,
                  "column": 8,
                  "position": 21613
                },
                "end": {
                  "line": 322,
                  "column": 15,
                  "position": 21620
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 382,
                  "column": 8,
                  "position": 23996
                },
                "end": {
                  "line": 382,
                  "column": 15,
                  "position": 24003
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 388,
                  "column": 8,
                  "position": 24168
                },
                "end": {
                  "line": 388,
                  "column": 15,
                  "position": 24175
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 514,
                  "column": 8,
                  "position": 39532
                },
                "end": {
                  "line": 514,
                  "column": 15,
                  "position": 39539
                }
              },
              "isWarning": true
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type object",
              "path": "examples/qdocument/404.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "position": 38
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type object",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 205,
                      "column": 14,
                      "position": 11728
                    },
                    "end": {
                      "line": 205,
                      "column": 21,
                      "position": 11735
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 6,
                  "column": 4,
                  "position": 141
                },
                "end": {
                  "line": 6,
                  "column": 23,
                  "position": 160
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 7,
                  "column": 4,
                  "position": 167
                },
                "end": {
                  "line": 7,
                  "column": 16,
                  "position": 179
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 8,
                  "column": 4,
                  "position": 186
                },
                "end": {
                  "line": 8,
                  "column": 24,
                  "position": 206
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 4,
                  "position": 213
                },
                "end": {
                  "line": 9,
                  "column": 20,
                  "position": 229
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 11,
                  "column": 4,
                  "position": 256
                },
                "end": {
                  "line": 11,
                  "column": 25,
                  "position": 277
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 308,
                      "column": 12,
                      "position": 21181
                    },
                    "end": {
                      "line": 308,
                      "column": 19,
                      "position": 21188
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 308,
                      "column": 12,
                      "position": 21181
                    },
                    "end": {
                      "line": 308,
                      "column": 19,
                      "position": 21188
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
              "path": "examples/submit-wip/200-submit-wip-success.json",
              "range": {
                "start": {
                  "line": 23,
                  "column": 2,
                  "position": 777
                },
                "end": {
                  "line": 23,
                  "column": 17,
                  "position": 792
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CAN_NOT_PARSE_JSON",
                  "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 233,
                      "column": 12,
                      "position": 15341
                    },
                    "end": {
                      "line": 233,
                      "column": 19,
                      "position": 15348
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 140
                },
                "end": {
                  "line": 47,
                  "column": 5,
                  "position": 1387
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 18,
                      "column": 4,
                      "position": 745
                    },
                    "end": {
                      "line": 18,
                      "column": 10,
                      "position": 751
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 16,
                  "position": 308
                },
                "end": {
                  "line": 25,
                  "column": 7,
                  "position": 828
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 21,
                      "column": 4,
                      "position": 910
                    },
                    "end": {
                      "line": 21,
                      "column": 7,
                      "position": 913
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 13,
                  "column": 4,
                  "position": 446
                },
                "end": {
                  "line": 13,
                  "column": 22,
                  "position": 464
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 15,
                  "column": 4,
                  "position": 560
                },
                "end": {
                  "line": 15,
                  "column": 15,
                  "position": 571
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected symbol <c> at 2:3\n1 | {\n2 |   canProvideICO : false,\n      ^\n3 |   excludedOptions : [ 8715263, 91786725, 98612572 ]\n4 | }",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 41,
                  "column": 14,
                  "position": 1445
                },
                "end": {
                  "line": 41,
                  "column": 21,
                  "position": 1452
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 69,
                  "column": 8,
                  "position": 2359
                },
                "end": {
                  "line": 69,
                  "column": 15,
                  "position": 2366
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 94,
                  "column": 8,
                  "position": 3432
                },
                "end": {
                  "line": 94,
                  "column": 15,
                  "position": 3439
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 110,
                  "column": 14,
                  "position": 4431
                },
                "end": {
                  "line": 110,
                  "column": 21,
                  "position": 4438
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip-not-found'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 115,
                  "column": 14,
                  "position": 4613
                },
                "end": {
                  "line": 115,
                  "column": 20,
                  "position": 4619
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 126,
                  "column": 8,
                  "position": 4924
                },
                "end": {
                  "line": 126,
                  "column": 15,
                  "position": 4931
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 149,
                  "column": 14,
                  "position": 6435
                },
                "end": {
                  "line": 149,
                  "column": 21,
                  "position": 6442
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 169,
                  "column": 12,
                  "position": 7396
                },
                "end": {
                  "line": 169,
                  "column": 37,
                  "position": 7421
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 218,
                  "column": 8,
                  "position": 12417
                },
                "end": {
                  "line": 218,
                  "column": 15,
                  "position": 12424
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 262,
                  "column": 8,
                  "position": 18866
                },
                "end": {
                  "line": 262,
                  "column": 15,
                  "position": 18873
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 268,
                  "column": 8,
                  "position": 19063
                },
                "end": {
                  "line": 268,
                  "column": 15,
                  "position": 19070
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 316,
                  "column": 8,
                  "position": 21416
                },
                "end": {
                  "line": 316,
                  "column": 15,
                  "position": 21423
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 322,
                  "column": 8,
                  "position": 21613
                },
                "end": {
                  "line": 322,
                  "column": 15,
                  "position": 21620
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 382,
                  "column": 8,
                  "position": 23996
                },
                "end": {
                  "line": 382,
                  "column": 15,
                  "position": 24003
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 388,
                  "column": 8,
                  "position": 24168
                },
                "end": {
                  "line": 388,
                  "column": 15,
                  "position": 24175
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 514,
                  "column": 8,
                  "position": 39532
                },
                "end": {
                  "line": 514,
                  "column": 15,
                  "position": 39539
                }
              },
              "isWarning": true
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type object",
              "path": "examples/qdocument/404.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "position": 38
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type object",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 205,
                      "column": 14,
                      "position": 11728
                    },
                    "end": {
                      "line": 205,
                      "column": 21,
                      "position": 11735
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 247,
                  "column": 1,
                  "position": 5754
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 247,
                  "column": 1,
                  "position": 5754
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 199,
                      "column": 14,
                      "position": 11492
                    },
                    "end": {
                      "line": 199,
                      "column": 21,
                      "position": 11499
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 308,
                      "column": 12,
                      "position": 21181
                    },
                    "end": {
                      "line": 308,
                      "column": 19,
                      "position": 21188
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 308,
                      "column": 12,
                      "position": 21181
                    },
                    "end": {
                      "line": 308,
                      "column": 19,
                      "position": 21188
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
              "path": "examples/submit-wip/200-submit-wip-success.json",
              "range": {
                "start": {
                  "line": 23,
                  "column": 2,
                  "position": 777
                },
                "end": {
                  "line": 23,
                  "column": 17,
                  "position": 792
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CAN_NOT_PARSE_JSON",
                  "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 233,
                      "column": 12,
                      "position": 15341
                    },
                    "end": {
                      "line": 233,
                      "column": 19,
                      "position": 15348
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 112,
                  "column": 1,
                  "position": 3285
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 18,
                      "column": 4,
                      "position": 745
                    },
                    "end": {
                      "line": 18,
                      "column": 10,
                      "position": 751
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 74,
                  "column": 1,
                  "position": 3178
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 21,
                      "column": 4,
                      "position": 910
                    },
                    "end": {
                      "line": 21,
                      "column": 7,
                      "position": 913
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ]
        }
      ]
    },
    "api_33854_ver_70348": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/vehicleId/example",
          "comment": "Inequal values",
          "master": "227137",
          "inspected": 227137
        },
        {
          "path": "/specification/resources[7]/methods[0]/queryParameters/dealerRepId/example",
          "comment": "Inequal values",
          "master": "23123",
          "inspected": 23123
        },
        {
          "path": "/errors",
          "comment": "Array lengths mismatch",
          "master": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of JSON input",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 13,
                  "column": 4,
                  "position": 446
                },
                "end": {
                  "line": 13,
                  "column": 22,
                  "position": 464
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 15,
                  "column": 4,
                  "position": 560
                },
                "end": {
                  "line": 15,
                  "column": 15,
                  "position": 571
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 92,
                  "column": 8,
                  "position": 3833
                },
                "end": {
                  "line": 92,
                  "column": 15,
                  "position": 3840
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 108,
                  "column": 14,
                  "position": 4832
                },
                "end": {
                  "line": 108,
                  "column": 21,
                  "position": 4839
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip/404-not-found.json'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 113,
                  "column": 14,
                  "position": 5014
                },
                "end": {
                  "line": 113,
                  "column": 20,
                  "position": 5020
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 124,
                  "column": 8,
                  "position": 5334
                },
                "end": {
                  "line": 124,
                  "column": 15,
                  "position": 5341
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 147,
                  "column": 14,
                  "position": 6845
                },
                "end": {
                  "line": 147,
                  "column": 21,
                  "position": 6852
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 167,
                  "column": 12,
                  "position": 7806
                },
                "end": {
                  "line": 167,
                  "column": 37,
                  "position": 7831
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 216,
                  "column": 8,
                  "position": 12827
                },
                "end": {
                  "line": 216,
                  "column": 15,
                  "position": 12834
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 260,
                  "column": 8,
                  "position": 19276
                },
                "end": {
                  "line": 260,
                  "column": 15,
                  "position": 19283
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 266,
                  "column": 8,
                  "position": 19473
                },
                "end": {
                  "line": 266,
                  "column": 15,
                  "position": 19480
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 314,
                  "column": 8,
                  "position": 21826
                },
                "end": {
                  "line": 314,
                  "column": 15,
                  "position": 21833
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 320,
                  "column": 8,
                  "position": 22023
                },
                "end": {
                  "line": 320,
                  "column": 15,
                  "position": 22030
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z0-9]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 380,
                  "column": 8,
                  "position": 24406
                },
                "end": {
                  "line": 380,
                  "column": 15,
                  "position": 24413
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 386,
                  "column": 8,
                  "position": 24581
                },
                "end": {
                  "line": 386,
                  "column": 15,
                  "position": 24588
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z0-9]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 512,
                  "column": 8,
                  "position": 39931
                },
                "end": {
                  "line": 512,
                  "column": 15,
                  "position": 39938
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected token '\"reviewSummary\"'",
              "path": "examples/offer.json",
              "range": {
                "start": {
                  "line": 27,
                  "column": 4,
                  "position": 932
                },
                "end": {
                  "line": 27,
                  "column": 19,
                  "position": 947
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CAN_NOT_PARSE_JSON",
                  "message": "Can not parse JSON example: Unexpected token '\"reviewSummary\"'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 332,
                      "column": 12,
                      "position": 22745
                    },
                    "end": {
                      "line": 332,
                      "column": 19,
                      "position": 22752
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type object",
              "path": "examples/qdocument/404.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "position": 38
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type object",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 203,
                      "column": 14,
                      "position": 12138
                    },
                    "end": {
                      "line": 203,
                      "column": 21,
                      "position": 12145
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 6,
                  "column": 4,
                  "position": 141
                },
                "end": {
                  "line": 6,
                  "column": 23,
                  "position": 160
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 7,
                  "column": 4,
                  "position": 167
                },
                "end": {
                  "line": 7,
                  "column": 16,
                  "position": 179
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 8,
                  "column": 4,
                  "position": 186
                },
                "end": {
                  "line": 8,
                  "column": 24,
                  "position": 206
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 4,
                  "position": 213
                },
                "end": {
                  "line": 9,
                  "column": 20,
                  "position": 229
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 11,
                  "column": 4,
                  "position": 256
                },
                "end": {
                  "line": 11,
                  "column": 25,
                  "position": 277
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 306,
                      "column": 12,
                      "position": 21591
                    },
                    "end": {
                      "line": 306,
                      "column": 19,
                      "position": 21598
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 306,
                      "column": 12,
                      "position": 21591
                    },
                    "end": {
                      "line": 306,
                      "column": 19,
                      "position": 21598
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
              "path": "examples/submit-wip/200-submit-wip-success.json",
              "range": {
                "start": {
                  "line": 23,
                  "column": 2,
                  "position": 777
                },
                "end": {
                  "line": 23,
                  "column": 17,
                  "position": 792
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CAN_NOT_PARSE_JSON",
                  "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 231,
                      "column": 12,
                      "position": 15751
                    },
                    "end": {
                      "line": 231,
                      "column": 19,
                      "position": 15758
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 5,
                  "column": 4,
                  "position": 140
                },
                "end": {
                  "line": 47,
                  "column": 5,
                  "position": 1387
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 18,
                      "column": 4,
                      "position": 745
                    },
                    "end": {
                      "line": 18,
                      "column": 10,
                      "position": 751
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 9,
                  "column": 16,
                  "position": 308
                },
                "end": {
                  "line": 25,
                  "column": 7,
                  "position": 828
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 21,
                      "column": 4,
                      "position": 910
                    },
                    "end": {
                      "line": 21,
                      "column": 7,
                      "position": 913
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ],
          "inspected": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 13,
                  "column": 4,
                  "position": 446
                },
                "end": {
                  "line": 13,
                  "column": 22,
                  "position": 464
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Unexpected value 'answers'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 15,
                  "column": 4,
                  "position": 560
                },
                "end": {
                  "line": 15,
                  "column": 15,
                  "position": 571
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 92,
                  "column": 8,
                  "position": 3833
                },
                "end": {
                  "line": 92,
                  "column": 15,
                  "position": 3840
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 108,
                  "column": 14,
                  "position": 4832
                },
                "end": {
                  "line": 108,
                  "column": 21,
                  "position": 4839
                }
              },
              "isWarning": true
            },
            {
              "code": "UNRECOGNIZED_ELEMENT",
              "message": "Unrecognized schema: 'wip/404-not-found.json'.",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 113,
                  "column": 14,
                  "position": 5014
                },
                "end": {
                  "line": 113,
                  "column": 20,
                  "position": 5020
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 124,
                  "column": 8,
                  "position": 5334
                },
                "end": {
                  "line": 124,
                  "column": 15,
                  "position": 5341
                }
              },
              "isWarning": true
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 147,
                  "column": 14,
                  "position": 6845
                },
                "end": {
                  "line": 147,
                  "column": 21,
                  "position": 6852
                }
              },
              "isWarning": true
            },
            {
              "code": "SPACES_IN_KEY",
              "message": "Keys should not have spaces 'text/plain; charset=utf-8'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 167,
                  "column": 12,
                  "position": 7806
                },
                "end": {
                  "line": 167,
                  "column": 37,
                  "position": 7831
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 216,
                  "column": 8,
                  "position": 12827
                },
                "end": {
                  "line": 216,
                  "column": 15,
                  "position": 12834
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 260,
                  "column": 8,
                  "position": 19276
                },
                "end": {
                  "line": 260,
                  "column": 15,
                  "position": 19283
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 266,
                  "column": 8,
                  "position": 19473
                },
                "end": {
                  "line": 266,
                  "column": 15,
                  "position": 19480
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 314,
                  "column": 8,
                  "position": 21826
                },
                "end": {
                  "line": 314,
                  "column": 15,
                  "position": 21833
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z]+\\@[\\da-zA-Z\\.]+/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 320,
                  "column": 8,
                  "position": 22023
                },
                "end": {
                  "line": 320,
                  "column": 15,
                  "position": 22030
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z0-9]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 380,
                  "column": 8,
                  "position": 24406
                },
                "end": {
                  "line": 380,
                  "column": 15,
                  "position": 24413
                }
              },
              "isWarning": true
            },
            {
              "code": "EXAMPLE_SCHEMA_FAILURE",
              "message": "Example does not conform to schema: Cannot assign to read only property '__$validated' of answers",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 386,
                  "column": 8,
                  "position": 24581
                },
                "end": {
                  "line": 386,
                  "column": 15,
                  "position": 24588
                }
              },
              "isWarning": true
            },
            {
              "code": "PATTERN_VIOLATION",
              "message": "String should match to '/[\\da-zA-Z0-9]{32,32}/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 512,
                  "column": 8,
                  "position": 39931
                },
                "end": {
                  "line": 512,
                  "column": 15,
                  "position": 39938
                }
              },
              "isWarning": true
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected token '\"reviewSummary\"'",
              "path": "examples/offer.json",
              "range": {
                "start": {
                  "line": 27,
                  "column": 4,
                  "position": 932
                },
                "end": {
                  "line": 27,
                  "column": 19,
                  "position": 947
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CAN_NOT_PARSE_JSON",
                  "message": "Can not parse JSON example: Unexpected token '\"reviewSummary\"'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 332,
                      "column": 12,
                      "position": 22745
                    },
                    "end": {
                      "line": 332,
                      "column": 19,
                      "position": 22752
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type object",
              "path": "examples/qdocument/404.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "position": 38
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type object",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 203,
                      "column": 14,
                      "position": 12138
                    },
                    "end": {
                      "line": 203,
                      "column": 21,
                      "position": 12145
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type array but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 247,
                  "column": 1,
                  "position": 5754
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type array but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Expected type string but found type null",
              "path": "examples/qdocument/qx-questionnaire.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 247,
                  "column": 1,
                  "position": 5754
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Expected type string but found type null",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 197,
                      "column": 14,
                      "position": 11902
                    },
                    "end": {
                      "line": 197,
                      "column": 21,
                      "position": 11909
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: canBeResubmitted",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 306,
                      "column": 12,
                      "position": 21591
                    },
                    "end": {
                      "line": 306,
                      "column": 19,
                      "position": 21598
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
              "message": "Content is not valid according to schema: Missing required property: newWipID",
              "path": "examples/revived/revived-offer-not-found.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 10,
                  "column": 1,
                  "position": 313
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CONTENT_DOES_NOT_MATCH_THE_SCHEMA",
                  "message": "Content is not valid according to schema: Missing required property: newWipID",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 306,
                      "column": 12,
                      "position": 21591
                    },
                    "end": {
                      "line": 306,
                      "column": 19,
                      "position": 21598
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
              "path": "examples/submit-wip/200-submit-wip-success.json",
              "range": {
                "start": {
                  "line": 23,
                  "column": 2,
                  "position": 777
                },
                "end": {
                  "line": 23,
                  "column": 17,
                  "position": 792
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "CAN_NOT_PARSE_JSON",
                  "message": "Can not parse JSON example: Unexpected token '\"ReviewSummary\"'",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 231,
                      "column": 12,
                      "position": 15751
                    },
                    "end": {
                      "line": 231,
                      "column": 19,
                      "position": 15758
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/review/200.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 112,
                  "column": 1,
                  "position": 3285
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 18,
                      "column": 4,
                      "position": 745
                    },
                    "end": {
                      "line": 18,
                      "column": 10,
                      "position": 751
                    }
                  },
                  "isWarning": true
                }
              ]
            },
            {
              "code": "INVALID_JSON_SCHEMA_DETAILS",
              "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
              "path": "schemas/wip/200.json",
              "range": {
                "start": {
                  "line": 0,
                  "column": 0,
                  "position": 0
                },
                "end": {
                  "line": 74,
                  "column": 1,
                  "position": 3178
                }
              },
              "isWarning": true,
              "trace": [
                {
                  "code": "INVALID_JSON_SCHEMA_DETAILS",
                  "message": "Invalid JSON schema: Keyword 'required' must be an array with at least one element",
                  "path": "api.raml",
                  "range": {
                    "start": {
                      "line": 21,
                      "column": 4,
                      "position": 910
                    },
                    "end": {
                      "line": 21,
                      "column": 7,
                      "position": 913
                    }
                  },
                  "isWarning": true
                }
              ]
            }
          ]
        }
      ]
    },
    "api_60964_ver_63416": {
      "diff": [
        {
          "path": "/errors[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'm'",
          "inspected": "Can not parse JSON example: Unexpected symbol <m> at 2:3\n1 | {\n2 |   message : \"Could not create a token: Some Reason\"\n      ^\n3 | }\n4 | "
        },
        {
          "path": "/errors[0]/range/start/line",
          "comment": "Inequal values",
          "master": 35,
          "inspected": 33
        },
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 16,
          "inspected": 12
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 856,
          "inspected": 813
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 35,
          "inspected": 33
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 17,
          "inspected": 19
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 857,
          "inspected": 820
        }
      ]
    }
  },
  "org_08957695-b1f5-4315-84c2-6db0d39176d1": {
    "api_80898_ver_80454": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_08e3ab06-7ffb-4a22-9764-64bc2418ee18": {
    "api_70592_ver_73699": {
      "diff": [
        {
          "path": "/specification/resources[4]/resources[0]/methods[0]/queryParameters/deviceId/example",
          "comment": "Inequal values",
          "master": "8989",
          "inspected": 8989
        },
        {
          "path": "/specification/resources[4]/resources[0]/methods[0]/queryParameters/temperature/example",
          "comment": "Inequal values",
          "master": "30.5",
          "inspected": 30.5
        },
        {
          "path": "/specification/resources[4]/resources[0]/methods[0]/queryParameters/humidity/example",
          "comment": "Inequal values",
          "master": "63.2",
          "inspected": 63.2
        }
      ]
    }
  },
  "org_08f6dc78-08a7-46a5-9171-59efaadfff91": {
    "api_55697_ver_71929": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/merchantId/example",
          "comment": "Inequal values",
          "master": "7",
          "inspected": 7
        },
        {
          "path": "/specification/resources[1]/resources[0]/uriParameters/userId/example",
          "comment": "Inequal values",
          "master": "2",
          "inspected": 2
        },
        {
          "path": "/errors[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol 'O'",
          "inspected": "Can not parse JSON example: Unexpected symbol </> at 1:1\n1 | //With user creation\n    ^\n2 |   {\n3 |   \"merchant\": {"
        },
        {
          "path": "/errors[0]/path",
          "comment": "Inequal values",
          "master": "JSON_Examples/POST_login-urls.json",
          "inspected": "api.raml"
        },
        {
          "path": "/errors[0]/range/start/line",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 43
        },
        {
          "path": "/errors[0]/range/start/column",
          "comment": "Inequal values",
          "master": 0,
          "inspected": 6
        },
        {
          "path": "/errors[0]/range/start/position",
          "comment": "Inequal values",
          "master": 19,
          "inspected": 1521
        },
        {
          "path": "/errors[0]/range/end/line",
          "comment": "Inequal values",
          "master": 4,
          "inspected": 43
        },
        {
          "path": "/errors[0]/range/end/column",
          "comment": "Inequal values",
          "master": 1,
          "inspected": 13
        },
        {
          "path": "/errors[0]/range/end/position",
          "comment": "Inequal values",
          "master": 20,
          "inspected": 1528
        },
        {
          "path": "/errors[0]/trace",
          "comment": "Defined/undefined mismatch",
          "master": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Cannot tokenize symbol 'O'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 124,
                  "column": 8,
                  "position": 4689
                },
                "end": {
                  "line": 124,
                  "column": 15,
                  "position": 4696
                }
              },
              "isWarning": true
            }
          ]
        },
        {
          "path": "/errors[1]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Cannot tokenize symbol '/'",
          "inspected": "Can not parse JSON example: Unexpected symbol <O> at 5:1\n3 | }\n4 | \n5 | OR\n    ^\n6 | \n7 | {"
        },
        {
          "path": "/errors[1]/path",
          "comment": "Inequal values",
          "master": "JSON_Examples/POST_merchants.json",
          "inspected": "api.raml"
        },
        {
          "path": "/errors[1]/range/start/line",
          "comment": "Inequal values",
          "master": 0,
          "inspected": 124
        },
        {
          "path": "/errors[1]/range/start/column",
          "comment": "Inequal values",
          "master": 0,
          "inspected": 8
        },
        {
          "path": "/errors[1]/range/start/position",
          "comment": "Inequal values",
          "master": 0,
          "inspected": 4689
        },
        {
          "path": "/errors[1]/range/end/line",
          "comment": "Inequal values",
          "master": 0,
          "inspected": 124
        },
        {
          "path": "/errors[1]/range/end/column",
          "comment": "Inequal values",
          "master": 1,
          "inspected": 15
        },
        {
          "path": "/errors[1]/range/end/position",
          "comment": "Inequal values",
          "master": 1,
          "inspected": 4696
        },
        {
          "path": "/errors[1]/trace",
          "comment": "Defined/undefined mismatch",
          "master": [
            {
              "code": "CAN_NOT_PARSE_JSON",
              "message": "Can not parse JSON example: Cannot tokenize symbol '/'",
              "path": "api.raml",
              "range": {
                "start": {
                  "line": 43,
                  "column": 6,
                  "position": 1521
                },
                "end": {
                  "line": 43,
                  "column": 13,
                  "position": 1528
                }
              },
              "isWarning": true
            }
          ]
        }
      ]
    }
  },
  "org_0921d2fa-d370-464e-b55f-e1257867380d": {
    "api_42173_ver_43648": {
      "diff": [
        {
          "path": "/specification/resources[0]/resources[0]/uriParameters/id/example",
          "comment": "Inequal values",
          "master": "451",
          "inspected": 451
        }
      ]
    }
  },
  "org_0936c804-1405-4198-98ac-3a26465db1e3": {
    "api_55821_ver_57883": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    },
    "api_55821_ver_57915": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_09396371-2cd4-412e-8d08-4356dd3e7bfc": {
    "api_73440_ver_76451": {
      "oldParserErrors": "cannot read /samples/supervisions-default.json (Error: ENOENT, open '/samples/supervisions-default.json')",
      "mastrerParserErrors": "none",
      "inspectedParserErrors": "none"
    }
  },
  "org_093edd77-68ba-41b0-bebf-be65d23a1406": {
    "api_58397_ver_60705": {
      "diff": [
        {
          "path": "/specification/traits[0]/pageable/queryParameters/size/example",
          "comment": "Inequal values",
          "master": "10",
          "inspected": 10
        },
        {
          "path": "/specification/traits[0]/pageable/queryParameters/page/example",
          "comment": "Inequal values",
          "master": "0",
          "inspected": 0
        }
      ]
    }
  },
  "org_0974bf2a-5249-40cf-ad66-fb5ce92f147b": {
    "api_38726_ver_40415": {
      "diff": [
        {
          "path": "/errors[0]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[1]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[2]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        },
        {
          "path": "/errors[3]/message",
          "comment": "Inequal values",
          "master": "Can not parse JSON example: Unexpected end of JSON input",
          "inspected": "Can not parse JSON example: Unexpected end of input\n1 | \n    ^"
        }
      ]
    }
  }
}